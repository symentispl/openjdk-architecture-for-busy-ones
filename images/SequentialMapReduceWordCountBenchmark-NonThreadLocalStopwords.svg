<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="790.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="773" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="773" > </text>
<g id="frames">
<g >
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (25 samples, 0.05%)</title><rect x="1186.8" y="629" width="0.5" height="15.0" fill="rgb(235,181,32)" rx="2" ry="2" />
<text  x="1189.78" y="639.5" ></text>
</g>
<g >
<title>java/lang/String.toLowerCase (175 samples, 0.33%)</title><rect x="73.2" y="437" width="3.9" height="15.0" fill="rgb(229,171,22)" rx="2" ry="2" />
<text  x="76.21" y="447.5" ></text>
</g>
<g >
<title>Java_java_io_RandomAccessFile_seek0 (7 samples, 0.01%)</title><rect x="55.5" y="229" width="0.1" height="15.0" fill="rgb(215,0,8)" rx="2" ry="2" />
<text  x="58.46" y="239.5" ></text>
</g>
<g >
<title>jdk/internal/icu/impl/ReplaceableUCharacterIterator.setIndex (2,640 samples, 4.97%)</title><rect x="799.4" y="357" width="58.6" height="15.0" fill="rgb(220,193,18)" rx="2" ry="2" />
<text  x="802.38" y="367.5" >jdk/in..</text>
</g>
<g >
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (53 samples, 0.10%)</title><rect x="1181.7" y="645" width="1.2" height="15.0" fill="rgb(212,42,13)" rx="2" ry="2" />
<text  x="1184.72" y="655.5" ></text>
</g>
<g >
<title>java/util/regex/ASCII.getType (107 samples, 0.20%)</title><rect x="207.1" y="277" width="2.4" height="15.0" fill="rgb(218,30,4)" rx="2" ry="2" />
<text  x="210.08" y="287.5" ></text>
</g>
<g >
<title>[vdso] (359 samples, 0.68%)</title><rect x="13.9" y="709" width="8.0" height="15.0" fill="rgb(213,8,51)" rx="2" ry="2" />
<text  x="16.91" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="11.6" y="661" width="0.1" height="15.0" fill="rgb(246,225,16)" rx="2" ry="2" />
<text  x="14.55" y="671.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.appendChars (6 samples, 0.01%)</title><rect x="57.1" y="389" width="0.1" height="15.0" fill="rgb(220,104,13)" rx="2" ry="2" />
<text  x="60.08" y="399.5" ></text>
</g>
<g >
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (50,096 samples, 94.29%)</title><rect x="21.9" y="581" width="1112.6" height="15.0" fill="rgb(211,193,41)" rx="2" ry="2" />
<text  x="24.88" y="591.5" >jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g >
<title>do_syscall_64 (341 samples, 0.64%)</title><rect x="14.3" y="677" width="7.6" height="15.0" fill="rgb(239,183,54)" rx="2" ry="2" />
<text  x="17.31" y="687.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.02%)</title><rect x="607.2" y="373" width="0.2" height="15.0" fill="rgb(229,151,24)" rx="2" ry="2" />
<text  x="610.18" y="383.5" ></text>
</g>
<g >
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (22 samples, 0.04%)</title><rect x="1183.4" y="645" width="0.5" height="15.0" fill="rgb(209,45,3)" rx="2" ry="2" />
<text  x="1186.38" y="655.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (10 samples, 0.02%)</title><rect x="1187.0" y="565" width="0.3" height="15.0" fill="rgb(244,58,8)" rx="2" ry="2" />
<text  x="1190.05" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.08%)</title><rect x="54.4" y="197" width="1.0" height="15.0" fill="rgb(210,75,9)" rx="2" ry="2" />
<text  x="57.44" y="207.5" ></text>
</g>
<g >
<title>java/lang/String.checkIndex (33 samples, 0.06%)</title><rect x="602.4" y="341" width="0.7" height="15.0" fill="rgb(227,169,22)" rx="2" ry="2" />
<text  x="605.39" y="351.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.appendCodePoint (2,896 samples, 5.45%)</title><rect x="635.3" y="357" width="64.4" height="15.0" fill="rgb(205,55,15)" rx="2" ry="2" />
<text  x="638.35" y="367.5" >java/la..</text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.appendCodePoint (2,852 samples, 5.37%)</title><rect x="636.3" y="341" width="63.4" height="15.0" fill="rgb(216,4,19)" rx="2" ry="2" />
<text  x="639.32" y="351.5" >java/l..</text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (8 samples, 0.02%)</title><rect x="569.0" y="357" width="0.1" height="15.0" fill="rgb(245,194,40)" rx="2" ry="2" />
<text  x="571.96" y="367.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.putStringAt (57 samples, 0.11%)</title><rect x="598.8" y="373" width="1.3" height="15.0" fill="rgb(229,143,14)" rx="2" ry="2" />
<text  x="601.79" y="383.5" ></text>
</g>
<g >
<title>java/io/BufferedReader.readLine (1,490 samples, 2.80%)</title><rect x="24.1" y="437" width="33.1" height="15.0" fill="rgb(219,133,8)" rx="2" ry="2" />
<text  x="27.15" y="447.5" >ja..</text>
</g>
<g >
<title>java/lang/StringBuffer.charAt (1,216 samples, 2.29%)</title><rect x="914.2" y="293" width="27.0" height="15.0" fill="rgb(231,190,10)" rx="2" ry="2" />
<text  x="917.18" y="303.5" >j..</text>
</g>
<g >
<title>java/util/regex/Pattern$BranchConn.match (52 samples, 0.10%)</title><rect x="209.5" y="325" width="1.1" height="15.0" fill="rgb(243,53,40)" rx="2" ry="2" />
<text  x="212.46" y="335.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.setLength (2,484 samples, 4.68%)</title><rect x="858.0" y="341" width="55.2" height="15.0" fill="rgb(212,194,27)" rx="2" ry="2" />
<text  x="861.02" y="351.5" >java/..</text>
</g>
<g >
<title>__x64_sys_openat (5 samples, 0.01%)</title><rect x="11.7" y="661" width="0.1" height="15.0" fill="rgb(249,57,7)" rx="2" ry="2" />
<text  x="14.71" y="671.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.canEncode (15 samples, 0.03%)</title><rect x="601.8" y="373" width="0.3" height="15.0" fill="rgb(218,221,1)" rx="2" ry="2" />
<text  x="604.81" y="383.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (16 samples, 0.03%)</title><rect x="1184.0" y="645" width="0.3" height="15.0" fill="rgb(251,131,37)" rx="2" ry="2" />
<text  x="1186.98" y="655.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.01%)</title><rect x="607.3" y="325" width="0.1" height="15.0" fill="rgb(222,220,14)" rx="2" ry="2" />
<text  x="610.25" y="335.5" ></text>
</g>
<g >
<title>java/io/FilterInputStream.read (1,056 samples, 1.99%)</title><rect x="32.5" y="341" width="23.4" height="15.0" fill="rgb(230,1,29)" rx="2" ry="2" />
<text  x="35.45" y="351.5" >j..</text>
</g>
<g >
<title>G1ParScanThreadState::G1ParScanThreadState(G1CollectedHeap*, G1RedirtyCardsQueueSet*, unsigned int, unsigned long, unsigned long) (6 samples, 0.01%)</title><rect x="1183.0" y="629" width="0.1" height="15.0" fill="rgb(211,48,45)" rx="2" ry="2" />
<text  x="1185.98" y="639.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.01%)</title><rect x="11.9" y="645" width="0.1" height="15.0" fill="rgb(251,136,30)" rx="2" ry="2" />
<text  x="14.93" y="655.5" ></text>
</g>
<g >
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (8 samples, 0.02%)</title><rect x="634.8" y="293" width="0.2" height="15.0" fill="rgb(239,128,29)" rx="2" ry="2" />
<text  x="637.81" y="303.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.newCapacity (13 samples, 0.02%)</title><rect x="892.6" y="293" width="0.3" height="15.0" fill="rgb(252,0,30)" rx="2" ry="2" />
<text  x="895.64" y="303.5" ></text>
</g>
<g >
<title>java/lang/String.hashCode (177 samples, 0.33%)</title><rect x="279.4" y="389" width="4.0" height="15.0" fill="rgb(228,150,51)" rx="2" ry="2" />
<text  x="282.44" y="399.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/UCharacterIterator.nextCodePoint (1,219 samples, 2.29%)</title><rect x="941.2" y="357" width="27.1" height="15.0" fill="rgb(232,94,10)" rx="2" ry="2" />
<text  x="944.19" y="367.5" >j..</text>
</g>
<g >
<title>Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (25 samples, 0.05%)</title><rect x="1186.8" y="613" width="0.5" height="15.0" fill="rgb(231,91,1)" rx="2" ry="2" />
<text  x="1189.78" y="623.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (198 samples, 0.37%)</title><rect x="1171.3" y="581" width="4.4" height="15.0" fill="rgb(205,96,46)" rx="2" ry="2" />
<text  x="1174.30" y="591.5" ></text>
</g>
<g >
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWordImpl**, unsigned long) (31 samples, 0.06%)</title><rect x="12.3" y="709" width="0.7" height="15.0" fill="rgb(205,40,20)" rx="2" ry="2" />
<text  x="15.33" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.01%)</title><rect x="1179.2" y="565" width="0.1" height="15.0" fill="rgb(207,60,3)" rx="2" ry="2" />
<text  x="1182.16" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="1188.5" y="485" width="0.1" height="15.0" fill="rgb(247,165,25)" rx="2" ry="2" />
<text  x="1191.47" y="495.5" ></text>
</g>
<g >
<title>jdk/internal/icu/impl/ReplaceableUCharacterIterator.next (1,090 samples, 2.05%)</title><rect x="943.5" y="341" width="24.2" height="15.0" fill="rgb(222,222,4)" rx="2" ry="2" />
<text  x="946.48" y="351.5" >j..</text>
</g>
<g >
<title>__pthread_cond_broadcast (7 samples, 0.01%)</title><rect x="13.6" y="725" width="0.2" height="15.0" fill="rgb(246,75,51)" rx="2" ry="2" />
<text  x="16.64" y="735.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler.runIteration (5 samples, 0.01%)</title><rect x="1134.6" y="629" width="0.1" height="15.0" fill="rgb(217,218,2)" rx="2" ry="2" />
<text  x="1137.61" y="639.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.search (5,277 samples, 9.93%)</title><rect x="95.3" y="389" width="117.2" height="15.0" fill="rgb(237,110,47)" rx="2" ry="2" />
<text  x="98.28" y="399.5" >java/util/rege..</text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (7 samples, 0.01%)</title><rect x="1063.2" y="213" width="0.2" height="15.0" fill="rgb(238,196,19)" rx="2" ry="2" />
<text  x="1066.21" y="223.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.newString (422 samples, 0.79%)</title><rect x="81.6" y="373" width="9.4" height="15.0" fill="rgb(215,188,33)" rx="2" ry="2" />
<text  x="84.60" y="383.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.append (2,792 samples, 5.25%)</title><rect x="637.7" y="309" width="62.0" height="15.0" fill="rgb(217,136,2)" rx="2" ry="2" />
<text  x="640.66" y="319.5" >java/l..</text>
</g>
<g >
<title>futex_wake (6 samples, 0.01%)</title><rect x="1188.5" y="421" width="0.1" height="15.0" fill="rgb(232,131,7)" rx="2" ry="2" />
<text  x="1191.47" y="431.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::optimize(PhaseIterGVN&amp;, LoopOptsMode) (10 samples, 0.02%)</title><rect x="1187.0" y="581" width="0.3" height="15.0" fill="rgb(233,51,22)" rx="2" ry="2" />
<text  x="1190.05" y="591.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (8 samples, 0.02%)</title><rect x="1141.5" y="597" width="0.2" height="15.0" fill="rgb(239,107,23)" rx="2" ry="2" />
<text  x="1144.47" y="607.5" ></text>
</g>
<g >
<title>Thread::call_run() (2,487 samples, 4.68%)</title><rect x="1134.8" y="693" width="55.2" height="15.0" fill="rgb(235,67,37)" rx="2" ry="2" />
<text  x="1137.77" y="703.5" >Threa..</text>
</g>
<g >
<title>jint_disjoint_arraycopy (26 samples, 0.05%)</title><rect x="216.5" y="437" width="0.6" height="15.0" fill="rgb(209,90,52)" rx="2" ry="2" />
<text  x="219.48" y="447.5" ></text>
</g>
<g >
<title>java/text/RuleBasedCollationKey.&lt;init&gt; (163 samples, 0.31%)</title><rect x="976.3" y="405" width="3.6" height="15.0" fill="rgb(232,13,21)" rx="2" ry="2" />
<text  x="979.26" y="415.5" ></text>
</g>
<g >
<title>VMThread::loop() (80 samples, 0.15%)</title><rect x="1188.0" y="661" width="1.8" height="15.0" fill="rgb(231,106,23)" rx="2" ry="2" />
<text  x="1191.00" y="671.5" ></text>
</g>
<g >
<title>JavaThread::pd_last_frame() (7 samples, 0.01%)</title><rect x="10.4" y="677" width="0.2" height="15.0" fill="rgb(211,24,22)" rx="2" ry="2" />
<text  x="13.42" y="687.5" ></text>
</g>
<g >
<title>jbyte_arraycopy (23 samples, 0.04%)</title><rect x="695.8" y="261" width="0.5" height="15.0" fill="rgb(226,228,16)" rx="2" ry="2" />
<text  x="698.76" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_read (41 samples, 0.08%)</title><rect x="54.4" y="165" width="1.0" height="15.0" fill="rgb(225,215,28)" rx="2" ry="2" />
<text  x="57.44" y="175.5" ></text>
</g>
<g >
<title>G1CollectedHeap::free_collection_set(G1CollectionSet*, G1EvacuationInfo&amp;, unsigned long const*) (8 samples, 0.02%)</title><rect x="1188.7" y="549" width="0.2" height="15.0" fill="rgb(225,120,33)" rx="2" ry="2" />
<text  x="1191.73" y="559.5" ></text>
</g>
<g >
<title>wake_up_q (6 samples, 0.01%)</title><rect x="1188.5" y="405" width="0.1" height="15.0" fill="rgb(212,215,5)" rx="2" ry="2" />
<text  x="1191.47" y="415.5" ></text>
</g>
<g >
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (32 samples, 0.06%)</title><rect x="1184.6" y="645" width="0.7" height="15.0" fill="rgb(235,202,28)" rx="2" ry="2" />
<text  x="1187.60" y="655.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (50,096 samples, 94.29%)</title><rect x="21.9" y="613" width="1112.6" height="15.0" fill="rgb(240,104,34)" rx="2" ry="2" />
<text  x="24.88" y="623.5" >org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call</text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.02%)</title><rect x="1185.5" y="645" width="0.2" height="15.0" fill="rgb(245,71,46)" rx="2" ry="2" />
<text  x="1188.49" y="655.5" ></text>
</g>
<g >
<title>Compilation::build_hir() [clone .part.95] (9 samples, 0.02%)</title><rect x="1187.3" y="565" width="0.2" height="15.0" fill="rgb(242,222,12)" rx="2" ry="2" />
<text  x="1190.33" y="575.5" ></text>
</g>
<g >
<title>java/util/zip/ZipFile$Source.readAt (77 samples, 0.14%)</title><rect x="54.2" y="277" width="1.7" height="15.0" fill="rgb(232,16,36)" rx="2" ry="2" />
<text  x="57.15" y="287.5" ></text>
</g>
<g >
<title>java/io/RandomAccessFile.readBytes (58 samples, 0.11%)</title><rect x="54.2" y="245" width="1.3" height="15.0" fill="rgb(205,26,28)" rx="2" ry="2" />
<text  x="57.17" y="255.5" ></text>
</g>
<g >
<title>java/lang/String.length (29 samples, 0.05%)</title><rect x="81.0" y="373" width="0.6" height="15.0" fill="rgb(216,57,0)" rx="2" ry="2" />
<text  x="83.96" y="383.5" ></text>
</g>
<g >
<title>java/text/RuleBasedCollator.clone (1,829 samples, 3.44%)</title><rect x="312.2" y="405" width="40.6" height="15.0" fill="rgb(254,160,50)" rx="2" ry="2" />
<text  x="315.22" y="415.5" >jav..</text>
</g>
<g >
<title>java/util/Arrays.copyOf (1,943 samples, 3.66%)</title><rect x="756.2" y="293" width="43.2" height="15.0" fill="rgb(246,190,4)" rx="2" ry="2" />
<text  x="759.23" y="303.5" >java..</text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (11 samples, 0.02%)</title><rect x="11.8" y="709" width="0.3" height="15.0" fill="rgb(237,74,13)" rx="2" ry="2" />
<text  x="14.82" y="719.5" ></text>
</g>
<g >
<title>java/lang/StringBuffer.append (1,518 samples, 2.86%)</title><rect x="569.4" y="405" width="33.7" height="15.0" fill="rgb(232,41,15)" rx="2" ry="2" />
<text  x="572.41" y="415.5" >ja..</text>
</g>
<g >
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (44 samples, 0.08%)</title><rect x="1186.8" y="645" width="1.0" height="15.0" fill="rgb(228,224,21)" rx="2" ry="2" />
<text  x="1189.78" y="655.5" ></text>
</g>
<g >
<title>ConstantPool::impl_signature_ref_at(int, bool) (5 samples, 0.01%)</title><rect x="1182.6" y="549" width="0.2" height="15.0" fill="rgb(214,119,45)" rx="2" ry="2" />
<text  x="1185.65" y="559.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.isLatin1 (44 samples, 0.08%)</title><rect x="963.5" y="277" width="0.9" height="15.0" fill="rgb(221,16,10)" rx="2" ry="2" />
<text  x="966.47" y="287.5" ></text>
</g>
<g >
<title>java/util/zip/Inflater.inflate (969 samples, 1.82%)</title><rect x="32.5" y="309" width="21.5" height="15.0" fill="rgb(240,30,16)" rx="2" ry="2" />
<text  x="35.50" y="319.5" >j..</text>
</g>
<g >
<title>org/openjdk/jmh/runner/ForkedMain.main (8 samples, 0.02%)</title><rect x="1134.6" y="725" width="0.1" height="15.0" fill="rgb(250,56,51)" rx="2" ry="2" />
<text  x="1137.57" y="735.5" ></text>
</g>
<g >
<title>java/text/RuleBasedCollator.getCollationKey (31,865 samples, 59.97%)</title><rect x="362.9" y="421" width="707.7" height="15.0" fill="rgb(209,40,44)" rx="2" ry="2" />
<text  x="365.93" y="431.5" >java/text/RuleBasedCollator.getCollationKey</text>
</g>
<g >
<title>java/lang/StringUTF16.checkIndex (43 samples, 0.08%)</title><rect x="602.2" y="357" width="0.9" height="15.0" fill="rgb(247,14,53)" rx="2" ry="2" />
<text  x="605.17" y="367.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2,333 samples, 4.39%)</title><rect x="1135.0" y="677" width="51.8" height="15.0" fill="rgb(248,160,51)" rx="2" ry="2" />
<text  x="1137.97" y="687.5" >GangW..</text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$FileLineInput.hasNext (1,500 samples, 2.82%)</title><rect x="23.9" y="469" width="33.4" height="15.0" fill="rgb(230,153,26)" rx="2" ry="2" />
<text  x="26.95" y="479.5" >pl..</text>
</g>
<g >
<title>G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*) (14 samples, 0.03%)</title><rect x="1188.4" y="565" width="0.3" height="15.0" fill="rgb(213,68,10)" rx="2" ry="2" />
<text  x="1191.36" y="575.5" ></text>
</g>
<g >
<title>HeapRegionManager::iterate(HeapRegionClosure*) const (5 samples, 0.01%)</title><rect x="1184.5" y="645" width="0.1" height="15.0" fill="rgb(231,63,14)" rx="2" ry="2" />
<text  x="1187.47" y="655.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$BmpCharProperty.match (63 samples, 0.12%)</title><rect x="118.3" y="357" width="1.4" height="15.0" fill="rgb(213,177,20)" rx="2" ry="2" />
<text  x="121.29" y="367.5" ></text>
</g>
<g >
<title>GCIdMark::GCIdMark(unsigned int) (7 samples, 0.01%)</title><rect x="1185.8" y="661" width="0.1" height="15.0" fill="rgb(237,220,20)" rx="2" ry="2" />
<text  x="1188.76" y="671.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountReducer.reduce (247 samples, 0.46%)</title><rect x="1129.0" y="469" width="5.5" height="15.0" fill="rgb(214,164,0)" rx="2" ry="2" />
<text  x="1131.99" y="479.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.01%)</title><rect x="1188.5" y="437" width="0.1" height="15.0" fill="rgb(207,18,36)" rx="2" ry="2" />
<text  x="1191.47" y="447.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/NormalizerBase.nextNormalize (15,363 samples, 28.92%)</title><rect x="627.1" y="373" width="341.2" height="15.0" fill="rgb(228,37,11)" rx="2" ry="2" />
<text  x="630.06" y="383.5" >jdk/internal/icu/text/NormalizerBase.nextNorma..</text>
</g>
<g >
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (84 samples, 0.16%)</title><rect x="54.0" y="309" width="1.9" height="15.0" fill="rgb(215,35,51)" rx="2" ry="2" />
<text  x="57.04" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.02%)</title><rect x="11.5" y="677" width="0.2" height="15.0" fill="rgb(228,183,15)" rx="2" ry="2" />
<text  x="14.51" y="687.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 0.13%)</title><rect x="10.6" y="725" width="1.5" height="15.0" fill="rgb(238,186,17)" rx="2" ry="2" />
<text  x="13.62" y="735.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (10 samples, 0.02%)</title><rect x="10.4" y="709" width="0.2" height="15.0" fill="rgb(245,3,4)" rx="2" ry="2" />
<text  x="13.40" y="719.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.newCapacity (98 samples, 0.18%)</title><rect x="586.4" y="357" width="2.2" height="15.0" fill="rgb(225,184,15)" rx="2" ry="2" />
<text  x="589.37" y="367.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (332 samples, 0.62%)</title><rect x="716.9" y="293" width="7.3" height="15.0" fill="rgb(226,224,47)" rx="2" ry="2" />
<text  x="719.85" y="303.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.01%)</title><rect x="607.2" y="357" width="0.2" height="15.0" fill="rgb(217,97,28)" rx="2" ry="2" />
<text  x="610.23" y="367.5" ></text>
</g>
<g >
<title>java/lang/String.coder (25 samples, 0.05%)</title><rect x="81.0" y="357" width="0.6" height="15.0" fill="rgb(219,119,13)" rx="2" ry="2" />
<text  x="84.05" y="367.5" ></text>
</g>
<g >
<title>sun/nio/cs/UTF_8$Decoder.decodeArrayLoop (108 samples, 0.20%)</title><rect x="29.9" y="325" width="2.4" height="15.0" fill="rgb(239,38,23)" rx="2" ry="2" />
<text  x="32.94" y="335.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (12 samples, 0.02%)</title><rect x="568.9" y="389" width="0.3" height="15.0" fill="rgb(238,143,22)" rx="2" ry="2" />
<text  x="571.90" y="399.5" ></text>
</g>
<g >
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.available (5 samples, 0.01%)</title><rect x="32.3" y="325" width="0.2" height="15.0" fill="rgb(246,45,16)" rx="2" ry="2" />
<text  x="35.34" y="335.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountMapper.map (48,256 samples, 90.82%)</title><rect x="57.3" y="469" width="1071.7" height="15.0" fill="rgb(211,222,0)" rx="2" ry="2" />
<text  x="60.26" y="479.5" >pl/symentis/wordcount/WordCount$WordCountMapper.map</text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (7 samples, 0.01%)</title><rect x="995.4" y="325" width="0.1" height="15.0" fill="rgb(240,223,25)" rx="2" ry="2" />
<text  x="998.38" y="335.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.length (8 samples, 0.02%)</title><rect x="724.2" y="277" width="0.2" height="15.0" fill="rgb(206,223,6)" rx="2" ry="2" />
<text  x="727.23" y="287.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.charAt (96 samples, 0.18%)</title><rect x="939.1" y="277" width="2.1" height="15.0" fill="rgb(232,55,7)" rx="2" ry="2" />
<text  x="942.06" y="287.5" ></text>
</g>
<g >
<title>find_get_entry (5 samples, 0.01%)</title><rect x="55.0" y="37" width="0.1" height="15.0" fill="rgb(245,199,6)" rx="2" ry="2" />
<text  x="57.95" y="47.5" ></text>
</g>
<g >
<title>java/util/HashMap.get (11 samples, 0.02%)</title><rect x="1133.0" y="389" width="0.3" height="15.0" fill="rgb(250,141,29)" rx="2" ry="2" />
<text  x="1136.01" y="399.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/SequentialMapReduce.run (50,092 samples, 94.28%)</title><rect x="22.0" y="485" width="1112.5" height="15.0" fill="rgb(224,170,36)" rx="2" ry="2" />
<text  x="24.97" y="495.5" >pl/symentis/mapreduce/SequentialMapReduce.run</text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.01%)</title><rect x="11.0" y="661" width="0.1" height="15.0" fill="rgb(234,85,35)" rx="2" ry="2" />
<text  x="13.95" y="671.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.02%)</title><rect x="312.5" y="389" width="0.1" height="15.0" fill="rgb(216,77,32)" rx="2" ry="2" />
<text  x="315.47" y="399.5" ></text>
</g>
<g >
<title>java/util/zip/InflaterInputStream.read (1,056 samples, 1.99%)</title><rect x="32.5" y="325" width="23.4" height="15.0" fill="rgb(235,219,31)" rx="2" ry="2" />
<text  x="35.45" y="335.5" >j..</text>
</g>
<g >
<title>java/text/RuleBasedCollator.getCollationKey (14 samples, 0.03%)</title><rect x="1071.0" y="405" width="0.4" height="15.0" fill="rgb(205,224,21)" rx="2" ry="2" />
<text  x="1074.05" y="415.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (25 samples, 0.05%)</title><rect x="54.6" y="69" width="0.6" height="15.0" fill="rgb(205,55,8)" rx="2" ry="2" />
<text  x="57.60" y="79.5" ></text>
</g>
<g >
<title>sun/nio/cs/UTF_8$Decoder.xflow (5 samples, 0.01%)</title><rect x="32.2" y="309" width="0.1" height="15.0" fill="rgb(206,85,10)" rx="2" ry="2" />
<text  x="35.23" y="319.5" ></text>
</g>
<g >
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWordImpl**, unsigned long) (8 samples, 0.02%)</title><rect x="71.1" y="437" width="0.2" height="15.0" fill="rgb(249,208,49)" rx="2" ry="2" />
<text  x="74.12" y="447.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.02%)</title><rect x="995.4" y="373" width="0.2" height="15.0" fill="rgb(243,226,49)" rx="2" ry="2" />
<text  x="998.38" y="383.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput.values (23 samples, 0.04%)</title><rect x="1132.7" y="405" width="0.6" height="15.0" fill="rgb(220,143,11)" rx="2" ry="2" />
<text  x="1135.74" y="415.5" ></text>
</g>
<g >
<title>Compile::Code_Gen() (12 samples, 0.02%)</title><rect x="1186.8" y="597" width="0.2" height="15.0" fill="rgb(219,2,7)" rx="2" ry="2" />
<text  x="1189.78" y="607.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmark (8 samples, 0.02%)</title><rect x="1134.6" y="645" width="0.1" height="15.0" fill="rgb(224,189,24)" rx="2" ry="2" />
<text  x="1137.57" y="655.5" ></text>
</g>
<g >
<title>java/util/ArrayList.add (959 samples, 1.80%)</title><rect x="286.6" y="373" width="21.3" height="15.0" fill="rgb(224,176,40)" rx="2" ry="2" />
<text  x="289.62" y="383.5" >j..</text>
</g>
<g >
<title>java/text/CollationElementIterator.next (16 samples, 0.03%)</title><rect x="1035.7" y="341" width="0.4" height="15.0" fill="rgb(245,171,54)" rx="2" ry="2" />
<text  x="1038.73" y="351.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.01%)</title><rect x="1063.2" y="261" width="0.2" height="15.0" fill="rgb(214,144,46)" rx="2" ry="2" />
<text  x="1066.21" y="271.5" ></text>
</g>
<g >
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.74] (71 samples, 0.13%)</title><rect x="1188.2" y="645" width="1.6" height="15.0" fill="rgb(206,1,42)" rx="2" ry="2" />
<text  x="1191.20" y="655.5" ></text>
</g>
<g >
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (67 samples, 0.13%)</title><rect x="1188.3" y="597" width="1.5" height="15.0" fill="rgb(241,100,18)" rx="2" ry="2" />
<text  x="1191.27" y="607.5" ></text>
</g>
<g >
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (5 samples, 0.01%)</title><rect x="1187.4" y="517" width="0.1" height="15.0" fill="rgb(214,155,43)" rx="2" ry="2" />
<text  x="1190.36" y="527.5" ></text>
</g>
<g >
<title>java/lang/String.checkBoundsBeginEnd (11 samples, 0.02%)</title><rect x="80.7" y="373" width="0.3" height="15.0" fill="rgb(215,48,5)" rx="2" ry="2" />
<text  x="83.71" y="383.5" ></text>
</g>
<g >
<title>java/util/regex/CharPredicates.lambda$ctype$17 (108 samples, 0.20%)</title><rect x="207.1" y="309" width="2.4" height="15.0" fill="rgb(207,26,4)" rx="2" ry="2" />
<text  x="210.06" y="319.5" ></text>
</g>
<g >
<title>open64 (6 samples, 0.01%)</title><rect x="11.7" y="709" width="0.1" height="15.0" fill="rgb(245,167,43)" rx="2" ry="2" />
<text  x="14.69" y="719.5" ></text>
</g>
<g >
<title>java/text/Collator.getDecomposition (372 samples, 0.70%)</title><rect x="313.0" y="373" width="8.2" height="15.0" fill="rgb(217,81,50)" rx="2" ry="2" />
<text  x="315.96" y="383.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$Branch.match (4,178 samples, 7.86%)</title><rect x="119.7" y="357" width="92.8" height="15.0" fill="rgb(209,28,48)" rx="2" ry="2" />
<text  x="122.69" y="367.5" >java/util/r..</text>
</g>
<g >
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (5 samples, 0.01%)</title><rect x="1187.4" y="533" width="0.1" height="15.0" fill="rgb(235,3,35)" rx="2" ry="2" />
<text  x="1190.36" y="543.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/NormalizerBase.clearBuffer (2,484 samples, 4.68%)</title><rect x="858.0" y="357" width="55.2" height="15.0" fill="rgb(251,30,42)" rx="2" ry="2" />
<text  x="861.02" y="367.5" >jdk/i..</text>
</g>
<g >
<title>G1ParScanThreadState::trim_queue() (1,671 samples, 3.15%)</title><rect x="1141.7" y="613" width="37.1" height="15.0" fill="rgb(213,154,42)" rx="2" ry="2" />
<text  x="1144.65" y="623.5" >G1P..</text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="11.9" y="661" width="0.1" height="15.0" fill="rgb(214,75,54)" rx="2" ry="2" />
<text  x="14.91" y="671.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$Start.match (16 samples, 0.03%)</title><rect x="23.5" y="453" width="0.4" height="15.0" fill="rgb(217,8,10)" rx="2" ry="2" />
<text  x="26.55" y="463.5" ></text>
</g>
<g >
<title>checkcast_arraycopy (9 samples, 0.02%)</title><rect x="57.3" y="389" width="0.2" height="15.0" fill="rgb(240,69,10)" rx="2" ry="2" />
<text  x="60.26" y="399.5" ></text>
</g>
<g >
<title>G1PrepareEvacuationTask::work(unsigned int) (32 samples, 0.06%)</title><rect x="1184.6" y="661" width="0.7" height="15.0" fill="rgb(252,60,35)" rx="2" ry="2" />
<text  x="1187.60" y="671.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11 (132 samples, 0.25%)</title><rect x="49.8" y="261" width="3.0" height="15.0" fill="rgb(253,202,29)" rx="2" ry="2" />
<text  x="52.82" y="271.5" ></text>
</g>
<g >
<title>void objArrayOopDesc::oop_iterate_range&lt;G1ScanEvacuatedObjClosure&gt;(G1ScanEvacuatedObjClosure*, int, int) (97 samples, 0.18%)</title><rect x="1179.6" y="613" width="2.1" height="15.0" fill="rgb(243,179,45)" rx="2" ry="2" />
<text  x="1182.56" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%)</title><rect x="13.7" y="693" width="0.1" height="15.0" fill="rgb(211,137,21)" rx="2" ry="2" />
<text  x="16.66" y="703.5" ></text>
</g>
<g >
<title>__read (43 samples, 0.08%)</title><rect x="54.4" y="213" width="1.0" height="15.0" fill="rgb(238,113,46)" rx="2" ry="2" />
<text  x="57.40" y="223.5" ></text>
</g>
<g >
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (50,096 samples, 94.29%)</title><rect x="21.9" y="549" width="1112.6" height="15.0" fill="rgb(231,21,12)" rx="2" ry="2" />
<text  x="24.88" y="559.5" >jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g >
<title>java/util/regex/ASCII.getType (104 samples, 0.20%)</title><rect x="199.5" y="261" width="2.3" height="15.0" fill="rgb(227,7,46)" rx="2" ry="2" />
<text  x="202.53" y="271.5" ></text>
</g>
<g >
<title>java/text/CollationKey.&lt;init&gt; (17 samples, 0.03%)</title><rect x="979.5" y="389" width="0.4" height="15.0" fill="rgb(226,216,38)" rx="2" ry="2" />
<text  x="982.50" y="399.5" ></text>
</g>
<g >
<title>java/lang/Object.&lt;init&gt; (42 samples, 0.08%)</title><rect x="1063.4" y="293" width="0.9" height="15.0" fill="rgb(243,221,11)" rx="2" ry="2" />
<text  x="1066.41" y="303.5" ></text>
</g>
<g >
<title>G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&amp;, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*) (24 samples, 0.05%)</title><rect x="1188.7" y="565" width="0.5" height="15.0" fill="rgb(240,228,16)" rx="2" ry="2" />
<text  x="1191.71" y="575.5" ></text>
</g>
<g >
<title>java/lang/String.&lt;init&gt; (49 samples, 0.09%)</title><rect x="55.9" y="405" width="1.1" height="15.0" fill="rgb(237,189,4)" rx="2" ry="2" />
<text  x="58.93" y="415.5" ></text>
</g>
<g >
<title>java/io/RandomAccessFile.seek (18 samples, 0.03%)</title><rect x="55.5" y="261" width="0.4" height="15.0" fill="rgb(228,125,49)" rx="2" ry="2" />
<text  x="58.46" y="271.5" ></text>
</g>
<g >
<title>PhaseChaitin::Register_Allocate() (9 samples, 0.02%)</title><rect x="1186.8" y="581" width="0.2" height="15.0" fill="rgb(251,224,10)" rx="2" ry="2" />
<text  x="1189.82" y="591.5" ></text>
</g>
<g >
<title>sun/nio/cs/StreamDecoder.read (1,179 samples, 2.22%)</title><rect x="29.7" y="389" width="26.2" height="15.0" fill="rgb(227,159,34)" rx="2" ry="2" />
<text  x="32.74" y="399.5" >s..</text>
</g>
<g >
<title>java/lang/StringBuilder.&lt;init&gt; (13 samples, 0.02%)</title><rect x="635.1" y="357" width="0.2" height="15.0" fill="rgb(206,36,19)" rx="2" ry="2" />
<text  x="638.06" y="367.5" ></text>
</g>
<g >
<title>java/util/HashMap.resize (29 samples, 0.05%)</title><rect x="1133.6" y="389" width="0.6" height="15.0" fill="rgb(208,64,50)" rx="2" ry="2" />
<text  x="1136.59" y="399.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.append (394 samples, 0.74%)</title><rect x="715.7" y="309" width="8.7" height="15.0" fill="rgb(247,141,39)" rx="2" ry="2" />
<text  x="718.65" y="319.5" ></text>
</g>
<g >
<title>java/lang/String.isEmpty (13 samples, 0.02%)</title><rect x="995.6" y="373" width="0.3" height="15.0" fill="rgb(219,153,47)" rx="2" ry="2" />
<text  x="998.58" y="383.5" ></text>
</g>
<g >
<title>do_futex_wait.constprop.0 (9 samples, 0.02%)</title><rect x="10.9" y="693" width="0.2" height="15.0" fill="rgb(253,104,4)" rx="2" ry="2" />
<text  x="13.91" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.01%)</title><rect x="11.7" y="693" width="0.1" height="15.0" fill="rgb(225,154,50)" rx="2" ry="2" />
<text  x="14.71" y="703.5" ></text>
</g>
<g >
<title>java/text/Collator.setDecomposition (283 samples, 0.53%)</title><rect x="335.2" y="373" width="6.3" height="15.0" fill="rgb(248,147,23)" rx="2" ry="2" />
<text  x="338.17" y="383.5" ></text>
</g>
<g >
<title>G1RebuildFreeListTask::work(unsigned int) (5 samples, 0.01%)</title><rect x="1185.3" y="661" width="0.1" height="15.0" fill="rgb(207,52,24)" rx="2" ry="2" />
<text  x="1188.31" y="671.5" ></text>
</g>
<g >
<title>java/text/RuleBasedCollator.&lt;init&gt; (1,809 samples, 3.40%)</title><rect x="312.7" y="389" width="40.1" height="15.0" fill="rgb(234,217,32)" rx="2" ry="2" />
<text  x="315.67" y="399.5" >jav..</text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmark (8 samples, 0.02%)</title><rect x="1134.6" y="661" width="0.1" height="15.0" fill="rgb(218,197,53)" rx="2" ry="2" />
<text  x="1137.57" y="671.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern.split (6,232 samples, 11.73%)</title><rect x="78.1" y="421" width="138.4" height="15.0" fill="rgb(210,121,32)" rx="2" ry="2" />
<text  x="81.07" y="431.5" >java/util/regex/P..</text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (12 samples, 0.02%)</title><rect x="634.7" y="341" width="0.3" height="15.0" fill="rgb(208,200,9)" rx="2" ry="2" />
<text  x="637.75" y="351.5" ></text>
</g>
<g >
<title>Compilation::compile_method() (19 samples, 0.04%)</title><rect x="1187.3" y="597" width="0.5" height="15.0" fill="rgb(216,166,23)" rx="2" ry="2" />
<text  x="1190.33" y="607.5" ></text>
</g>
<g >
<title>java/util/ArrayList.add (239 samples, 0.45%)</title><rect x="302.6" y="357" width="5.3" height="15.0" fill="rgb(227,5,36)" rx="2" ry="2" />
<text  x="305.61" y="367.5" ></text>
</g>
<g >
<title>java/lang/reflect/Method.invoke (50,096 samples, 94.29%)</title><rect x="21.9" y="597" width="1112.6" height="15.0" fill="rgb(229,36,13)" rx="2" ry="2" />
<text  x="24.88" y="607.5" >java/lang/reflect/Method.invoke</text>
</g>
<g >
<title>java/util/regex/Pattern$LastNode.match (84 samples, 0.16%)</title><rect x="210.6" y="325" width="1.9" height="15.0" fill="rgb(222,218,28)" rx="2" ry="2" />
<text  x="213.62" y="335.5" ></text>
</g>
<g >
<title>java/lang/String.substring (52 samples, 0.10%)</title><rect x="91.6" y="389" width="1.2" height="15.0" fill="rgb(223,153,25)" rx="2" ry="2" />
<text  x="94.62" y="399.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.setLength (3,376 samples, 6.35%)</title><rect x="724.4" y="341" width="75.0" height="15.0" fill="rgb(224,191,0)" rx="2" ry="2" />
<text  x="727.41" y="351.5" >java/lan..</text>
</g>
<g >
<title>java/lang/String.length (79 samples, 0.15%)</title><rect x="600.1" y="373" width="1.7" height="15.0" fill="rgb(244,25,15)" rx="2" ry="2" />
<text  x="603.06" y="383.5" ></text>
</g>
<g >
<title>java/util/HashMap$KeyIterator.next (70 samples, 0.13%)</title><rect x="22.0" y="469" width="1.5" height="15.0" fill="rgb(211,228,11)" rx="2" ry="2" />
<text  x="24.99" y="479.5" ></text>
</g>
<g >
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (2,101 samples, 3.95%)</title><rect x="1135.1" y="645" width="46.6" height="15.0" fill="rgb(235,74,0)" rx="2" ry="2" />
<text  x="1138.05" y="655.5" >G1Ev..</text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.charAt (223 samples, 0.42%)</title><rect x="960.2" y="293" width="5.0" height="15.0" fill="rgb(234,179,12)" rx="2" ry="2" />
<text  x="963.22" y="303.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/ReplaceableString.length (113 samples, 0.21%)</title><rect x="965.2" y="325" width="2.5" height="15.0" fill="rgb(240,48,24)" rx="2" ry="2" />
<text  x="968.18" y="335.5" ></text>
</g>
<g >
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.01%)</title><rect x="614.2" y="341" width="0.1" height="15.0" fill="rgb(237,186,46)" rx="2" ry="2" />
<text  x="617.18" y="351.5" ></text>
</g>
<g >
<title>java/nio/charset/CharsetDecoder.decode (110 samples, 0.21%)</title><rect x="29.9" y="357" width="2.4" height="15.0" fill="rgb(252,66,32)" rx="2" ry="2" />
<text  x="32.90" y="367.5" ></text>
</g>
<g >
<title>jdk/internal/icu/impl/ReplaceableUCharacterIterator.&lt;init&gt; (171 samples, 0.32%)</title><rect x="1060.5" y="325" width="3.8" height="15.0" fill="rgb(252,95,51)" rx="2" ry="2" />
<text  x="1063.54" y="335.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/ForkedRunner.run (8 samples, 0.02%)</title><rect x="1134.6" y="709" width="0.1" height="15.0" fill="rgb(246,52,44)" rx="2" ry="2" />
<text  x="1137.57" y="719.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (153 samples, 0.29%)</title><rect x="696.3" y="261" width="3.4" height="15.0" fill="rgb(208,140,17)" rx="2" ry="2" />
<text  x="699.27" y="271.5" ></text>
</g>
<g >
<title>jni_GetPrimitiveArrayCritical (5 samples, 0.01%)</title><rect x="49.7" y="261" width="0.1" height="15.0" fill="rgb(228,79,39)" rx="2" ry="2" />
<text  x="52.69" y="271.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.01%)</title><rect x="312.5" y="341" width="0.1" height="15.0" fill="rgb(215,83,25)" rx="2" ry="2" />
<text  x="315.51" y="351.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/jmh_generated/SequentialMapReduceWordCountBenchmark_countWords_jmhTest.countWords_thrpt_jmhStub (50,096 samples, 94.29%)</title><rect x="21.9" y="517" width="1112.6" height="15.0" fill="rgb(250,104,8)" rx="2" ry="2" />
<text  x="24.88" y="527.5" >pl/symentis/wordcount/jmh_generated/SequentialMapReduceWordCountBenchmark_countWords_jmhTest.countWords_thrpt_jmhStub</text>
</g>
<g >
<title>jdk/internal/icu/text/ReplaceableString.charAt (424 samples, 0.80%)</title><rect x="955.8" y="325" width="9.4" height="15.0" fill="rgb(221,10,53)" rx="2" ry="2" />
<text  x="958.76" y="335.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$Start.match (9 samples, 0.02%)</title><rect x="57.3" y="437" width="0.2" height="15.0" fill="rgb(240,89,51)" rx="2" ry="2" />
<text  x="60.26" y="447.5" ></text>
</g>
<g >
<title>generic_file_read_iter (26 samples, 0.05%)</title><rect x="54.6" y="85" width="0.6" height="15.0" fill="rgb(233,158,45)" rx="2" ry="2" />
<text  x="57.57" y="95.5" ></text>
</g>
<g >
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 0.02%)</title><rect x="635.1" y="309" width="0.2" height="15.0" fill="rgb(233,89,51)" rx="2" ry="2" />
<text  x="638.06" y="319.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.01%)</title><rect x="982.0" y="389" width="0.1" height="15.0" fill="rgb(217,173,23)" rx="2" ry="2" />
<text  x="984.97" y="399.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.find (5,325 samples, 10.02%)</title><rect x="94.2" y="405" width="118.3" height="15.0" fill="rgb(246,28,40)" rx="2" ry="2" />
<text  x="97.22" y="415.5" >java/util/rege..</text>
</g>
<g >
<title>java/util/HashMap.putVal (43 samples, 0.08%)</title><rect x="1133.3" y="405" width="0.9" height="15.0" fill="rgb(234,0,43)" rx="2" ry="2" />
<text  x="1136.28" y="415.5" ></text>
</g>
<g >
<title>java/text/Collator.getStrength (360 samples, 0.68%)</title><rect x="968.3" y="405" width="8.0" height="15.0" fill="rgb(241,62,15)" rx="2" ry="2" />
<text  x="971.26" y="415.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.01%)</title><rect x="635.1" y="277" width="0.1" height="15.0" fill="rgb(216,155,50)" rx="2" ry="2" />
<text  x="638.12" y="287.5" ></text>
</g>
<g >
<title>HeapRegionClaimer::claim_region(unsigned int) (5 samples, 0.01%)</title><rect x="1183.7" y="629" width="0.1" height="15.0" fill="rgb(228,164,32)" rx="2" ry="2" />
<text  x="1186.71" y="639.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (25 samples, 0.05%)</title><rect x="215.9" y="357" width="0.5" height="15.0" fill="rgb(210,55,21)" rx="2" ry="2" />
<text  x="218.88" y="367.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.01%)</title><rect x="614.2" y="357" width="0.1" height="15.0" fill="rgb(217,14,31)" rx="2" ry="2" />
<text  x="617.18" y="367.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput.lambda$emit$0 (995 samples, 1.87%)</title><rect x="285.8" y="389" width="22.1" height="15.0" fill="rgb(219,37,53)" rx="2" ry="2" />
<text  x="288.82" y="399.5" >p..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (343 samples, 0.65%)</title><rect x="14.3" y="693" width="7.6" height="15.0" fill="rgb(217,37,50)" rx="2" ry="2" />
<text  x="17.26" y="703.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (6 samples, 0.01%)</title><rect x="607.2" y="341" width="0.2" height="15.0" fill="rgb(216,139,50)" rx="2" ry="2" />
<text  x="610.23" y="351.5" ></text>
</g>
<g >
<title>IR::IR(Compilation*, ciMethod*, int) (5 samples, 0.01%)</title><rect x="1187.4" y="549" width="0.1" height="15.0" fill="rgb(238,73,32)" rx="2" ry="2" />
<text  x="1190.36" y="559.5" ></text>
</g>
<g >
<title>[vdso] (7 samples, 0.01%)</title><rect x="13.3" y="725" width="0.1" height="15.0" fill="rgb(248,96,20)" rx="2" ry="2" />
<text  x="16.29" y="735.5" ></text>
</g>
<g >
<title>HeapRegionClaimer::claim_region(unsigned int) (12 samples, 0.02%)</title><rect x="1184.1" y="629" width="0.2" height="15.0" fill="rgb(234,214,14)" rx="2" ry="2" />
<text  x="1187.07" y="639.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/ReplaceableString.&lt;init&gt; (101 samples, 0.19%)</title><rect x="1061.1" y="309" width="2.3" height="15.0" fill="rgb(254,189,35)" rx="2" ry="2" />
<text  x="1064.12" y="319.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (10 samples, 0.02%)</title><rect x="569.2" y="389" width="0.2" height="15.0" fill="rgb(226,94,15)" rx="2" ry="2" />
<text  x="572.18" y="399.5" ></text>
</g>
<g >
<title>java/lang/StringBuffer.charAt (310 samples, 0.58%)</title><rect x="958.3" y="309" width="6.9" height="15.0" fill="rgb(254,84,40)" rx="2" ry="2" />
<text  x="961.29" y="319.5" ></text>
</g>
<g >
<title>__lll_lock_wait (7 samples, 0.01%)</title><rect x="1179.2" y="597" width="0.1" height="15.0" fill="rgb(219,100,8)" rx="2" ry="2" />
<text  x="1182.16" y="607.5" ></text>
</g>
<g >
<title>java/util/ArrayList.add (34 samples, 0.06%)</title><rect x="92.8" y="389" width="0.8" height="15.0" fill="rgb(244,134,4)" rx="2" ry="2" />
<text  x="95.82" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.02%)</title><rect x="1186.5" y="645" width="0.1" height="15.0" fill="rgb(224,103,19)" rx="2" ry="2" />
<text  x="1189.47" y="655.5" ></text>
</g>
<g >
<title>java/util/HashMap.hash (214 samples, 0.40%)</title><rect x="278.6" y="405" width="4.8" height="15.0" fill="rgb(213,146,28)" rx="2" ry="2" />
<text  x="281.62" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="13.7" y="709" width="0.1" height="15.0" fill="rgb(205,130,46)" rx="2" ry="2" />
<text  x="16.66" y="719.5" ></text>
</g>
<g >
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (19 samples, 0.04%)</title><rect x="1187.3" y="629" width="0.5" height="15.0" fill="rgb(206,167,36)" rx="2" ry="2" />
<text  x="1190.33" y="639.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.append (1,402 samples, 2.64%)</title><rect x="572.0" y="389" width="31.1" height="15.0" fill="rgb(221,7,17)" rx="2" ry="2" />
<text  x="574.98" y="399.5" >ja..</text>
</g>
<g >
<title>G1RemSet::merge_heap_roots(bool) (7 samples, 0.01%)</title><rect x="1188.4" y="549" width="0.2" height="15.0" fill="rgb(207,174,41)" rx="2" ry="2" />
<text  x="1191.45" y="559.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput$$Lambda$56.0x0000000800bbd0c8.apply (11 samples, 0.02%)</title><rect x="77.7" y="421" width="0.3" height="15.0" fill="rgb(236,220,21)" rx="2" ry="2" />
<text  x="80.72" y="431.5" ></text>
</g>
<g >
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (50,096 samples, 94.29%)</title><rect x="21.9" y="565" width="1112.6" height="15.0" fill="rgb(218,178,4)" rx="2" ry="2" />
<text  x="24.88" y="575.5" >jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g >
<title>java/lang/StringLatin1.charAt (127 samples, 0.24%)</title><rect x="190.6" y="309" width="2.8" height="15.0" fill="rgb(240,53,11)" rx="2" ry="2" />
<text  x="193.61" y="319.5" ></text>
</g>
<g >
<title>java/util/ArrayList.grow (102 samples, 0.19%)</title><rect x="305.6" y="341" width="2.3" height="15.0" fill="rgb(236,202,28)" rx="2" ry="2" />
<text  x="308.65" y="351.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$Branch.match (9 samples, 0.02%)</title><rect x="57.3" y="421" width="0.2" height="15.0" fill="rgb(208,181,29)" rx="2" ry="2" />
<text  x="60.26" y="431.5" ></text>
</g>
<g >
<title>do_futex (8 samples, 0.02%)</title><rect x="1186.5" y="597" width="0.1" height="15.0" fill="rgb(208,195,22)" rx="2" ry="2" />
<text  x="1189.47" y="607.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOf (13 samples, 0.02%)</title><rect x="306.7" y="309" width="0.3" height="15.0" fill="rgb(231,160,12)" rx="2" ry="2" />
<text  x="309.74" y="319.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/NormalizerBase.next (15,370 samples, 28.93%)</title><rect x="626.9" y="389" width="341.4" height="15.0" fill="rgb(209,80,34)" rx="2" ry="2" />
<text  x="629.91" y="399.5" >jdk/internal/icu/text/NormalizerBase.next</text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.isLatin1 (106 samples, 0.20%)</title><rect x="691.4" y="277" width="2.3" height="15.0" fill="rgb(249,201,20)" rx="2" ry="2" />
<text  x="694.38" y="287.5" ></text>
</g>
<g >
<title>java/util/concurrent/FutureTask.run (50,096 samples, 94.29%)</title><rect x="21.9" y="677" width="1112.6" height="15.0" fill="rgb(227,37,54)" rx="2" ry="2" />
<text  x="24.88" y="687.5" >java/util/concurrent/FutureTask.run</text>
</g>
<g >
<title>posix_get_monotonic_timespec (295 samples, 0.56%)</title><rect x="15.0" y="645" width="6.5" height="15.0" fill="rgb(209,76,2)" rx="2" ry="2" />
<text  x="17.97" y="655.5" ></text>
</g>
<g >
<title>jdk/internal/util/ArraysSupport.newLength (52 samples, 0.10%)</title><rect x="587.4" y="341" width="1.2" height="15.0" fill="rgb(211,190,44)" rx="2" ry="2" />
<text  x="590.40" y="351.5" ></text>
</g>
<g >
<title>sun/nio/cs/StreamDecoder.readBytes (1,057 samples, 1.99%)</title><rect x="32.5" y="357" width="23.4" height="15.0" fill="rgb(248,36,1)" rx="2" ry="2" />
<text  x="35.45" y="367.5" >s..</text>
</g>
<g >
<title>Compilation::compile_java_method() (18 samples, 0.03%)</title><rect x="1187.3" y="581" width="0.4" height="15.0" fill="rgb(252,168,38)" rx="2" ry="2" />
<text  x="1190.33" y="591.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern.split (6,232 samples, 11.73%)</title><rect x="78.1" y="437" width="138.4" height="15.0" fill="rgb(253,216,42)" rx="2" ry="2" />
<text  x="81.07" y="447.5" >java/util/regex/P..</text>
</g>
<g >
<title>java/lang/String.coder (36 samples, 0.07%)</title><rect x="1128.2" y="325" width="0.8" height="15.0" fill="rgb(253,112,20)" rx="2" ry="2" />
<text  x="1131.19" y="335.5" ></text>
</g>
<g >
<title>sun/nio/cs/UTF_8$Decoder.decodeLoop (109 samples, 0.21%)</title><rect x="29.9" y="341" width="2.4" height="15.0" fill="rgb(223,177,35)" rx="2" ry="2" />
<text  x="32.92" y="351.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (8 samples, 0.02%)</title><rect x="569.2" y="341" width="0.2" height="15.0" fill="rgb(214,20,16)" rx="2" ry="2" />
<text  x="572.21" y="351.5" ></text>
</g>
<g >
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (2,176 samples, 4.10%)</title><rect x="1135.0" y="661" width="48.4" height="15.0" fill="rgb(205,40,32)" rx="2" ry="2" />
<text  x="1138.03" y="671.5" >G1Ev..</text>
</g>
<g >
<title>void WeakProcessor::Task::work&lt;G1STWIsAliveClosure, G1KeepAliveClosure&gt;(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*) (6 samples, 0.01%)</title><rect x="1186.6" y="661" width="0.2" height="15.0" fill="rgb(232,130,20)" rx="2" ry="2" />
<text  x="1189.65" y="671.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (10 samples, 0.02%)</title><rect x="10.1" y="725" width="0.2" height="15.0" fill="rgb(243,31,17)" rx="2" ry="2" />
<text  x="13.07" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7 samples, 0.01%)</title><rect x="1179.2" y="549" width="0.1" height="15.0" fill="rgb(231,207,5)" rx="2" ry="2" />
<text  x="1182.16" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.02%)</title><rect x="10.9" y="677" width="0.2" height="15.0" fill="rgb(228,218,52)" rx="2" ry="2" />
<text  x="13.93" y="687.5" ></text>
</g>
<g >
<title>java/text/CollationElementIterator.next (15,938 samples, 30.00%)</title><rect x="614.3" y="405" width="354.0" height="15.0" fill="rgb(213,84,12)" rx="2" ry="2" />
<text  x="617.29" y="415.5" >java/text/CollationElementIterator.next</text>
</g>
<g >
<title>__x64_sys_lseek (5 samples, 0.01%)</title><rect x="55.8" y="181" width="0.1" height="15.0" fill="rgb(236,63,2)" rx="2" ry="2" />
<text  x="58.75" y="191.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.tabAt (16 samples, 0.03%)</title><rect x="362.6" y="389" width="0.3" height="15.0" fill="rgb(244,19,14)" rx="2" ry="2" />
<text  x="365.57" y="399.5" ></text>
</g>
<g >
<title>VM_Operation::evaluate() (71 samples, 0.13%)</title><rect x="1188.2" y="629" width="1.6" height="15.0" fill="rgb(208,151,24)" rx="2" ry="2" />
<text  x="1191.20" y="639.5" ></text>
</g>
<g >
<title>SpinPause (12 samples, 0.02%)</title><rect x="1178.8" y="597" width="0.3" height="15.0" fill="rgb(215,152,17)" rx="2" ry="2" />
<text  x="1181.83" y="607.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.setLength (3,376 samples, 6.35%)</title><rect x="724.4" y="325" width="75.0" height="15.0" fill="rgb(237,83,46)" rx="2" ry="2" />
<text  x="727.41" y="335.5" >java/lan..</text>
</g>
<g >
<title>sem_post@@GLIBC_2.2.5 (6 samples, 0.01%)</title><rect x="1188.5" y="501" width="0.1" height="15.0" fill="rgb(252,136,0)" rx="2" ry="2" />
<text  x="1191.47" y="511.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOf (104 samples, 0.20%)</title><rect x="588.6" y="357" width="2.3" height="15.0" fill="rgb(219,173,11)" rx="2" ry="2" />
<text  x="591.55" y="367.5" ></text>
</g>
<g >
<title>start_thread (2,487 samples, 4.68%)</title><rect x="1134.8" y="725" width="55.2" height="15.0" fill="rgb(253,14,33)" rx="2" ry="2" />
<text  x="1137.77" y="735.5" >start..</text>
</g>
<g >
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWordImpl**, HeapWordImpl**, void const*) (5 samples, 0.01%)</title><rect x="1181.8" y="597" width="0.1" height="15.0" fill="rgb(227,60,30)" rx="2" ry="2" />
<text  x="1184.83" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (315 samples, 0.59%)</title><rect x="14.8" y="661" width="7.0" height="15.0" fill="rgb(254,3,36)" rx="2" ry="2" />
<text  x="17.77" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%)</title><rect x="1188.5" y="469" width="0.1" height="15.0" fill="rgb(212,90,28)" rx="2" ry="2" />
<text  x="1191.47" y="479.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (297 samples, 0.56%)</title><rect x="591.2" y="357" width="6.6" height="15.0" fill="rgb(217,143,33)" rx="2" ry="2" />
<text  x="594.22" y="367.5" ></text>
</g>
<g >
<title>__lock_text_start (5 samples, 0.01%)</title><rect x="1186.5" y="533" width="0.1" height="15.0" fill="rgb(250,115,22)" rx="2" ry="2" />
<text  x="1189.54" y="543.5" ></text>
</g>
<g >
<title>Compile::Optimize() (11 samples, 0.02%)</title><rect x="1187.0" y="597" width="0.3" height="15.0" fill="rgb(239,197,9)" rx="2" ry="2" />
<text  x="1190.05" y="607.5" ></text>
</g>
<g >
<title>jbyte_arraycopy (16 samples, 0.03%)</title><rect x="590.9" y="357" width="0.3" height="15.0" fill="rgb(220,146,47)" rx="2" ry="2" />
<text  x="593.86" y="367.5" ></text>
</g>
<g >
<title>rw_verify_area (9 samples, 0.02%)</title><rect x="55.2" y="117" width="0.2" height="15.0" fill="rgb(228,139,12)" rx="2" ry="2" />
<text  x="58.15" y="127.5" ></text>
</g>
<g >
<title>VMThread::run() (82 samples, 0.15%)</title><rect x="1188.0" y="677" width="1.8" height="15.0" fill="rgb(218,115,35)" rx="2" ry="2" />
<text  x="1191.00" y="687.5" ></text>
</g>
<g >
<title>sun/nio/cs/StreamDecoder.inReady (5 samples, 0.01%)</title><rect x="32.3" y="357" width="0.2" height="15.0" fill="rgb(242,81,12)" rx="2" ry="2" />
<text  x="35.34" y="367.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.doSingle (8 samples, 0.02%)</title><rect x="1134.6" y="677" width="0.1" height="15.0" fill="rgb(230,150,32)" rx="2" ry="2" />
<text  x="1137.57" y="687.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (9 samples, 0.02%)</title><rect x="569.2" y="373" width="0.2" height="15.0" fill="rgb(246,58,11)" rx="2" ry="2" />
<text  x="572.18" y="383.5" ></text>
</g>
<g >
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (19 samples, 0.04%)</title><rect x="1187.3" y="613" width="0.5" height="15.0" fill="rgb(221,111,1)" rx="2" ry="2" />
<text  x="1190.33" y="623.5" ></text>
</g>
<g >
<title>apparmor_file_permission (6 samples, 0.01%)</title><rect x="55.2" y="85" width="0.1" height="15.0" fill="rgb(237,123,54)" rx="2" ry="2" />
<text  x="58.20" y="95.5" ></text>
</g>
<g >
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (9 samples, 0.02%)</title><rect x="10.4" y="693" width="0.2" height="15.0" fill="rgb(221,139,37)" rx="2" ry="2" />
<text  x="13.40" y="703.5" ></text>
</g>
<g >
<title>java/lang/String.length (14 samples, 0.03%)</title><rect x="79.9" y="405" width="0.3" height="15.0" fill="rgb(253,122,40)" rx="2" ry="2" />
<text  x="82.91" y="415.5" ></text>
</g>
<g >
<title>G1ParEvacuateFollowersClosure::do_void() (2,101 samples, 3.95%)</title><rect x="1135.1" y="629" width="46.6" height="15.0" fill="rgb(216,139,6)" rx="2" ry="2" />
<text  x="1138.05" y="639.5" >G1Pa..</text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11 (759 samples, 1.43%)</title><rect x="32.7" y="277" width="16.9" height="15.0" fill="rgb(245,176,46)" rx="2" ry="2" />
<text  x="35.74" y="287.5" ></text>
</g>
<g >
<title>java/text/Collator.getStrength (628 samples, 1.18%)</title><rect x="321.2" y="373" width="14.0" height="15.0" fill="rgb(209,97,51)" rx="2" ry="2" />
<text  x="324.22" y="383.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/UTF16.isLeadSurrogate (26 samples, 0.05%)</title><rect x="967.7" y="341" width="0.6" height="15.0" fill="rgb(216,142,12)" rx="2" ry="2" />
<text  x="970.69" y="351.5" ></text>
</g>
<g >
<title>java/util/HashMap.compute (4,088 samples, 7.69%)</title><rect x="217.1" y="421" width="90.8" height="15.0" fill="rgb(224,184,5)" rx="2" ry="2" />
<text  x="220.12" y="431.5" >java/util/..</text>
</g>
<g >
<title>java/util/Arrays.copyOfRange (76 samples, 0.14%)</title><rect x="89.3" y="357" width="1.7" height="15.0" fill="rgb(254,225,15)" rx="2" ry="2" />
<text  x="92.29" y="367.5" ></text>
</g>
<g >
<title>pagecache_get_page (7 samples, 0.01%)</title><rect x="54.9" y="53" width="0.2" height="15.0" fill="rgb(217,66,16)" rx="2" ry="2" />
<text  x="57.93" y="63.5" ></text>
</g>
<g >
<title>java/util/regex/CharPredicates$$Lambda$53.0x0000000800b7b350.is (379 samples, 0.71%)</title><rect x="193.4" y="325" width="8.4" height="15.0" fill="rgb(215,103,14)" rx="2" ry="2" />
<text  x="196.43" y="335.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (52 samples, 0.10%)</title><rect x="1186.8" y="677" width="1.1" height="15.0" fill="rgb(218,133,46)" rx="2" ry="2" />
<text  x="1189.78" y="687.5" ></text>
</g>
<g >
<title>java/util/HashMap$HashIterator.nextNode (70 samples, 0.13%)</title><rect x="22.0" y="453" width="1.5" height="15.0" fill="rgb(209,196,35)" rx="2" ry="2" />
<text  x="24.99" y="463.5" ></text>
</g>
<g >
<title>java/lang/String.subSequence (484 samples, 0.91%)</title><rect x="80.2" y="405" width="10.8" height="15.0" fill="rgb(233,10,7)" rx="2" ry="2" />
<text  x="83.23" y="415.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.reset (109 samples, 0.21%)</title><rect x="214.1" y="373" width="2.4" height="15.0" fill="rgb(251,92,17)" rx="2" ry="2" />
<text  x="217.06" y="383.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::do_partial_array(PartialArrayScanTask) (22 samples, 0.04%)</title><rect x="1170.7" y="581" width="0.5" height="15.0" fill="rgb(219,87,28)" rx="2" ry="2" />
<text  x="1173.74" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="1188.5" y="453" width="0.1" height="15.0" fill="rgb(219,169,51)" rx="2" ry="2" />
<text  x="1191.47" y="463.5" ></text>
</g>
<g >
<title>java/text/CollationElementIterator.&lt;init&gt; (3,716 samples, 6.99%)</title><rect x="982.1" y="389" width="82.5" height="15.0" fill="rgb(236,191,23)" rx="2" ry="2" />
<text  x="985.10" y="399.5" >java/text..</text>
</g>
<g >
<title>java/lang/String.coder (12 samples, 0.02%)</title><rect x="80.0" y="389" width="0.2" height="15.0" fill="rgb(222,58,28)" rx="2" ry="2" />
<text  x="82.96" y="399.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (14 samples, 0.03%)</title><rect x="568.9" y="405" width="0.3" height="15.0" fill="rgb(247,88,0)" rx="2" ry="2" />
<text  x="571.85" y="415.5" ></text>
</g>
<g >
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (37 samples, 0.07%)</title><rect x="1182.1" y="629" width="0.8" height="15.0" fill="rgb(254,2,1)" rx="2" ry="2" />
<text  x="1185.07" y="639.5" ></text>
</g>
<g >
<title>jbyte_arraycopy (11 samples, 0.02%)</title><rect x="996.0" y="373" width="0.2" height="15.0" fill="rgb(226,131,49)" rx="2" ry="2" />
<text  x="998.98" y="383.5" ></text>
</g>
<g >
<title>java/io/BufferedReader.fill (1,182 samples, 2.22%)</title><rect x="29.7" y="421" width="26.2" height="15.0" fill="rgb(228,219,2)" rx="2" ry="2" />
<text  x="32.68" y="431.5" >j..</text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (113 samples, 0.21%)</title><rect x="1065.0" y="405" width="2.5" height="15.0" fill="rgb(247,93,45)" rx="2" ry="2" />
<text  x="1067.98" y="415.5" ></text>
</g>
<g >
<title>java/lang/StringBuffer.length (45 samples, 0.08%)</title><rect x="857.0" y="325" width="1.0" height="15.0" fill="rgb(226,112,5)" rx="2" ry="2" />
<text  x="860.02" y="335.5" ></text>
</g>
<g >
<title>java/util/TreeSet.contains (2,628 samples, 4.95%)</title><rect x="1070.6" y="421" width="58.4" height="15.0" fill="rgb(233,94,17)" rx="2" ry="2" />
<text  x="1073.63" y="431.5" >java/u..</text>
</g>
<g >
<title>java/lang/StringLatin1.hashCode (126 samples, 0.24%)</title><rect x="280.6" y="373" width="2.8" height="15.0" fill="rgb(218,188,34)" rx="2" ry="2" />
<text  x="283.58" y="383.5" ></text>
</g>
<g >
<title>java/util/regex/ASCII.isSpace (106 samples, 0.20%)</title><rect x="199.5" y="293" width="2.3" height="15.0" fill="rgb(252,44,31)" rx="2" ry="2" />
<text  x="202.49" y="303.5" ></text>
</g>
<g >
<title>java/util/regex/CharPredicates.lambda$ASCII_SPACE$20 (106 samples, 0.20%)</title><rect x="199.5" y="309" width="2.3" height="15.0" fill="rgb(221,185,31)" rx="2" ry="2" />
<text  x="202.49" y="319.5" ></text>
</g>
<g >
<title>java/util/ArrayList.&lt;init&gt; (81 samples, 0.15%)</title><rect x="91.0" y="405" width="1.8" height="15.0" fill="rgb(215,136,16)" rx="2" ry="2" />
<text  x="93.97" y="415.5" ></text>
</g>
<g >
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.01%)</title><rect x="1063.2" y="245" width="0.2" height="15.0" fill="rgb(224,116,41)" rx="2" ry="2" />
<text  x="1066.21" y="255.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (12 samples, 0.02%)</title><rect x="568.9" y="373" width="0.3" height="15.0" fill="rgb(237,53,52)" rx="2" ry="2" />
<text  x="571.90" y="383.5" ></text>
</g>
<g >
<title>new_sync_read (31 samples, 0.06%)</title><rect x="54.5" y="117" width="0.7" height="15.0" fill="rgb(237,111,32)" rx="2" ry="2" />
<text  x="57.46" y="127.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/SequentialMapReduceWordCountBenchmark.countWords (50,096 samples, 94.29%)</title><rect x="21.9" y="501" width="1112.6" height="15.0" fill="rgb(216,142,32)" rx="2" ry="2" />
<text  x="24.88" y="511.5" >pl/symentis/wordcount/SequentialMapReduceWordCountBenchmark.countWords</text>
</g>
<g >
<title>java/util/regex/Matcher.search (9 samples, 0.02%)</title><rect x="57.3" y="453" width="0.2" height="15.0" fill="rgb(226,105,37)" rx="2" ry="2" />
<text  x="60.26" y="463.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$BmpCharProperty.match (9 samples, 0.02%)</title><rect x="57.3" y="405" width="0.2" height="15.0" fill="rgb(215,8,33)" rx="2" ry="2" />
<text  x="60.26" y="415.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountMapper.map (48,247 samples, 90.81%)</title><rect x="57.5" y="453" width="1071.5" height="15.0" fill="rgb(222,202,13)" rx="2" ry="2" />
<text  x="60.46" y="463.5" >pl/symentis/wordcount/WordCount$WordCountMapper.map</text>
</g>
<g >
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.02%)</title><rect x="569.2" y="357" width="0.2" height="15.0" fill="rgb(239,54,33)" rx="2" ry="2" />
<text  x="572.21" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.02%)</title><rect x="11.5" y="693" width="0.2" height="15.0" fill="rgb(215,159,30)" rx="2" ry="2" />
<text  x="14.51" y="703.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (10 samples, 0.02%)</title><rect x="1183.1" y="629" width="0.2" height="15.0" fill="rgb(249,63,20)" rx="2" ry="2" />
<text  x="1186.12" y="639.5" ></text>
</g>
<g >
<title>G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (10 samples, 0.02%)</title><rect x="1183.1" y="645" width="0.2" height="15.0" fill="rgb(240,125,48)" rx="2" ry="2" />
<text  x="1186.12" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_futex (8 samples, 0.02%)</title><rect x="1186.5" y="613" width="0.1" height="15.0" fill="rgb(238,86,35)" rx="2" ry="2" />
<text  x="1189.47" y="623.5" ></text>
</g>
<g >
<title>security_file_permission (8 samples, 0.02%)</title><rect x="55.2" y="101" width="0.2" height="15.0" fill="rgb(220,145,24)" rx="2" ry="2" />
<text  x="58.17" y="111.5" ></text>
</g>
<g >
<title>java/lang/StringBuffer.toString (486 samples, 0.91%)</title><rect x="603.5" y="405" width="10.8" height="15.0" fill="rgb(251,196,17)" rx="2" ry="2" />
<text  x="606.50" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.01%)</title><rect x="11.9" y="677" width="0.2" height="15.0" fill="rgb(231,159,29)" rx="2" ry="2" />
<text  x="14.91" y="687.5" ></text>
</g>
<g >
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int, bool) (6 samples, 0.01%)</title><rect x="1188.5" y="517" width="0.1" height="15.0" fill="rgb(207,36,48)" rx="2" ry="2" />
<text  x="1191.47" y="527.5" ></text>
</g>
<g >
<title>getFD (6 samples, 0.01%)</title><rect x="55.5" y="213" width="0.1" height="15.0" fill="rgb(222,3,51)" rx="2" ry="2" />
<text  x="58.48" y="223.5" ></text>
</g>
<g >
<title>CodeCache::find_blob(void*) (6 samples, 0.01%)</title><rect x="10.4" y="661" width="0.2" height="15.0" fill="rgb(212,131,31)" rx="2" ry="2" />
<text  x="13.44" y="671.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (8 samples, 0.02%)</title><rect x="10.6" y="709" width="0.2" height="15.0" fill="rgb(217,62,21)" rx="2" ry="2" />
<text  x="13.62" y="719.5" ></text>
</g>
<g >
<title>java/lang/String.&lt;init&gt; (50 samples, 0.09%)</title><rect x="55.9" y="421" width="1.1" height="15.0" fill="rgb(220,53,44)" rx="2" ry="2" />
<text  x="58.93" y="431.5" ></text>
</g>
<g >
<title>TaskTerminator::offer_termination(TerminatorTerminator*) (26 samples, 0.05%)</title><rect x="1178.8" y="613" width="0.6" height="15.0" fill="rgb(241,24,18)" rx="2" ry="2" />
<text  x="1181.78" y="623.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmarksForked (8 samples, 0.02%)</title><rect x="1134.6" y="693" width="0.1" height="15.0" fill="rgb(213,195,22)" rx="2" ry="2" />
<text  x="1137.57" y="703.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOfRange (301 samples, 0.57%)</title><rect x="607.6" y="373" width="6.7" height="15.0" fill="rgb(231,149,5)" rx="2" ry="2" />
<text  x="610.61" y="383.5" ></text>
</g>
<g >
<title>java/util/ArrayList.get (28 samples, 0.05%)</title><rect x="93.6" y="405" width="0.6" height="15.0" fill="rgb(212,184,8)" rx="2" ry="2" />
<text  x="96.57" y="415.5" ></text>
</g>
<g >
<title>java/text/RuleBasedCollationKey.compareTo (1,985 samples, 3.74%)</title><rect x="1084.9" y="373" width="44.1" height="15.0" fill="rgb(240,134,39)" rx="2" ry="2" />
<text  x="1087.91" y="383.5" >java..</text>
</g>
<g >
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (5 samples, 0.01%)</title><rect x="995.4" y="293" width="0.1" height="15.0" fill="rgb(215,69,13)" rx="2" ry="2" />
<text  x="998.38" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (41 samples, 0.08%)</title><rect x="54.4" y="181" width="1.0" height="15.0" fill="rgb(220,160,18)" rx="2" ry="2" />
<text  x="57.44" y="191.5" ></text>
</g>
<g >
<title>jlong_disjoint_arraycopy (141 samples, 0.27%)</title><rect x="1067.5" y="405" width="3.1" height="15.0" fill="rgb(224,161,22)" rx="2" ry="2" />
<text  x="1070.49" y="415.5" ></text>
</g>
<g >
<title>HeapRegionManager::rebuild_free_list(WorkGang*) (5 samples, 0.01%)</title><rect x="1188.8" y="533" width="0.1" height="15.0" fill="rgb(234,60,53)" rx="2" ry="2" />
<text  x="1191.76" y="543.5" ></text>
</g>
<g >
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (28 samples, 0.05%)</title><rect x="1182.2" y="581" width="0.6" height="15.0" fill="rgb(217,58,1)" rx="2" ry="2" />
<text  x="1185.20" y="591.5" ></text>
</g>
<g >
<title>G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (16 samples, 0.03%)</title><rect x="1181.7" y="629" width="0.4" height="15.0" fill="rgb(207,16,23)" rx="2" ry="2" />
<text  x="1184.72" y="639.5" ></text>
</g>
<g >
<title>java/lang/String.substring (6 samples, 0.01%)</title><rect x="212.7" y="389" width="0.1" height="15.0" fill="rgb(225,147,37)" rx="2" ry="2" />
<text  x="215.66" y="399.5" ></text>
</g>
<g >
<title>java/lang/String.getBytes (15 samples, 0.03%)</title><rect x="599.7" y="357" width="0.4" height="15.0" fill="rgb(225,60,21)" rx="2" ry="2" />
<text  x="602.72" y="367.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (22 samples, 0.04%)</title><rect x="601.3" y="357" width="0.5" height="15.0" fill="rgb(230,77,10)" rx="2" ry="2" />
<text  x="604.32" y="367.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/ReplaceableString.charAt (1,216 samples, 2.29%)</title><rect x="914.2" y="309" width="27.0" height="15.0" fill="rgb(235,189,23)" rx="2" ry="2" />
<text  x="917.18" y="319.5" >j..</text>
</g>
<g >
<title>java/util/ArrayList.add (36 samples, 0.07%)</title><rect x="92.8" y="405" width="0.8" height="15.0" fill="rgb(227,189,50)" rx="2" ry="2" />
<text  x="95.77" y="415.5" ></text>
</g>
<g >
<title>do_sys_openat2 (5 samples, 0.01%)</title><rect x="11.7" y="645" width="0.1" height="15.0" fill="rgb(253,213,27)" rx="2" ry="2" />
<text  x="14.71" y="655.5" ></text>
</g>
<g >
<title>java/lang/Object.&lt;init&gt; (125 samples, 0.24%)</title><rect x="1032.9" y="341" width="2.8" height="15.0" fill="rgb(219,137,39)" rx="2" ry="2" />
<text  x="1035.91" y="351.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$LastNode.match (30 samples, 0.06%)</title><rect x="209.9" y="309" width="0.7" height="15.0" fill="rgb(239,136,44)" rx="2" ry="2" />
<text  x="212.95" y="319.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.01%)</title><rect x="569.3" y="325" width="0.1" height="15.0" fill="rgb(242,8,40)" rx="2" ry="2" />
<text  x="572.27" y="335.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/SequentialMapReduceWordCountBenchmark$$Lambda$55.0x0000000800bbcea0.emit (44 samples, 0.08%)</title><rect x="1133.3" y="437" width="0.9" height="15.0" fill="rgb(236,52,38)" rx="2" ry="2" />
<text  x="1136.26" y="447.5" ></text>
</g>
<g >
<title>futex_wake (8 samples, 0.02%)</title><rect x="1186.5" y="581" width="0.1" height="15.0" fill="rgb(231,89,28)" rx="2" ry="2" />
<text  x="1189.47" y="591.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.01%)</title><rect x="13.7" y="661" width="0.1" height="15.0" fill="rgb(236,179,35)" rx="2" ry="2" />
<text  x="16.66" y="671.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.02%)</title><rect x="995.4" y="357" width="0.2" height="15.0" fill="rgb(240,119,36)" rx="2" ry="2" />
<text  x="998.38" y="367.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern.matcher (180 samples, 0.34%)</title><rect x="212.5" y="405" width="4.0" height="15.0" fill="rgb(249,228,13)" rx="2" ry="2" />
<text  x="215.48" y="415.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.01%)</title><rect x="10.8" y="709" width="0.1" height="15.0" fill="rgb(246,123,9)" rx="2" ry="2" />
<text  x="13.80" y="719.5" ></text>
</g>
<g >
<title>G1ScanCollectionSetRegionClosure::do_heap_region(HeapRegion*) (7 samples, 0.01%)</title><rect x="1183.2" y="613" width="0.1" height="15.0" fill="rgb(237,214,47)" rx="2" ry="2" />
<text  x="1186.18" y="623.5" ></text>
</g>
<g >
<title>java/text/RuleBasedCollator.getCollationElementIterator (3,816 samples, 7.18%)</title><rect x="979.9" y="405" width="84.7" height="15.0" fill="rgb(235,81,23)" rx="2" ry="2" />
<text  x="982.88" y="415.5" >java/text..</text>
</g>
<g >
<title>ksys_read (41 samples, 0.08%)</title><rect x="54.4" y="149" width="1.0" height="15.0" fill="rgb(236,182,48)" rx="2" ry="2" />
<text  x="57.44" y="159.5" ></text>
</g>
<g >
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (5 samples, 0.01%)</title><rect x="1187.8" y="661" width="0.1" height="15.0" fill="rgb(250,28,4)" rx="2" ry="2" />
<text  x="1190.78" y="671.5" ></text>
</g>
<g >
<title>java/io/BufferedReader.readLine (1,497 samples, 2.82%)</title><rect x="24.0" y="453" width="33.3" height="15.0" fill="rgb(221,58,45)" rx="2" ry="2" />
<text  x="27.01" y="463.5" >ja..</text>
</g>
<g >
<title>pl/symentis/mapreduce/SequentialMapReduce.lambda$run$0 (23 samples, 0.04%)</title><rect x="1132.7" y="421" width="0.6" height="15.0" fill="rgb(207,58,31)" rx="2" ry="2" />
<text  x="1135.74" y="431.5" ></text>
</g>
<g >
<title>java/util/concurrent/Executors$RunnableAdapter.call (50,096 samples, 94.29%)</title><rect x="21.9" y="661" width="1112.6" height="15.0" fill="rgb(237,197,8)" rx="2" ry="2" />
<text  x="24.88" y="671.5" >java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g >
<title>jbyte_arraycopy (19 samples, 0.04%)</title><rect x="83.4" y="341" width="0.4" height="15.0" fill="rgb(253,61,15)" rx="2" ry="2" />
<text  x="86.40" y="351.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (8 samples, 0.02%)</title><rect x="607.4" y="357" width="0.2" height="15.0" fill="rgb(220,207,12)" rx="2" ry="2" />
<text  x="610.43" y="367.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (960 samples, 1.81%)</title><rect x="576.5" y="373" width="21.3" height="15.0" fill="rgb(243,27,7)" rx="2" ry="2" />
<text  x="579.49" y="383.5" >j..</text>
</g>
<g >
<title>jbyte_arraycopy (16 samples, 0.03%)</title><rect x="1064.6" y="405" width="0.4" height="15.0" fill="rgb(225,149,26)" rx="2" ry="2" />
<text  x="1067.63" y="415.5" ></text>
</g>
<g >
<title>SafepointSynchronize::begin() (8 samples, 0.02%)</title><rect x="1188.0" y="645" width="0.2" height="15.0" fill="rgb(253,215,20)" rx="2" ry="2" />
<text  x="1191.02" y="655.5" ></text>
</g>
<g >
<title>sun/nio/cs/StreamDecoder.implRead (1,178 samples, 2.22%)</title><rect x="29.8" y="373" width="26.1" height="15.0" fill="rgb(214,172,51)" rx="2" ry="2" />
<text  x="32.77" y="383.5" >s..</text>
</g>
<g >
<title>java/util/HashMap.put (43 samples, 0.08%)</title><rect x="1133.3" y="421" width="0.9" height="15.0" fill="rgb(246,44,25)" rx="2" ry="2" />
<text  x="1136.28" y="431.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.&lt;init&gt; (166 samples, 0.31%)</title><rect x="212.8" y="389" width="3.7" height="15.0" fill="rgb(225,178,30)" rx="2" ry="2" />
<text  x="215.79" y="399.5" ></text>
</g>
<g >
<title>VM_G1CollectForAllocation::doit() (71 samples, 0.13%)</title><rect x="1188.2" y="613" width="1.6" height="15.0" fill="rgb(206,139,17)" rx="2" ry="2" />
<text  x="1191.20" y="623.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.02%)</title><rect x="10.9" y="709" width="0.2" height="15.0" fill="rgb(240,153,48)" rx="2" ry="2" />
<text  x="13.91" y="719.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/UCharacterIterator.&lt;init&gt; (44 samples, 0.08%)</title><rect x="1063.4" y="309" width="0.9" height="15.0" fill="rgb(252,139,0)" rx="2" ry="2" />
<text  x="1066.36" y="319.5" ></text>
</g>
<g >
<title>jdk/internal/icu/impl/Norm2AllModes$NoopNormalizer2.normalize (4,490 samples, 8.45%)</title><rect x="699.7" y="357" width="99.7" height="15.0" fill="rgb(238,119,22)" rx="2" ry="2" />
<text  x="702.66" y="367.5" >jdk/internal..</text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (12 samples, 0.02%)</title><rect x="634.7" y="357" width="0.3" height="15.0" fill="rgb(215,210,40)" rx="2" ry="2" />
<text  x="637.75" y="367.5" ></text>
</g>
<g >
<title>java/lang/StringBuffer.&lt;init&gt; (10 samples, 0.02%)</title><rect x="569.2" y="405" width="0.2" height="15.0" fill="rgb(231,222,20)" rx="2" ry="2" />
<text  x="572.18" y="415.5" ></text>
</g>
<g >
<title>java/lang/Thread.run (50,099 samples, 94.29%)</title><rect x="21.9" y="725" width="1112.6" height="15.0" fill="rgb(248,138,52)" rx="2" ry="2" />
<text  x="24.88" y="735.5" >java/lang/Thread.run</text>
</g>
<g >
<title>java/lang/StringBuilder.append (455 samples, 0.86%)</title><rect x="714.3" y="341" width="10.1" height="15.0" fill="rgb(205,57,13)" rx="2" ry="2" />
<text  x="717.30" y="351.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (12 samples, 0.02%)</title><rect x="634.7" y="309" width="0.3" height="15.0" fill="rgb(241,108,9)" rx="2" ry="2" />
<text  x="637.75" y="319.5" ></text>
</g>
<g >
<title>wake_up_q (5 samples, 0.01%)</title><rect x="1186.5" y="565" width="0.1" height="15.0" fill="rgb(232,157,2)" rx="2" ry="2" />
<text  x="1189.54" y="575.5" ></text>
</g>
<g >
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (28 samples, 0.05%)</title><rect x="1182.2" y="597" width="0.6" height="15.0" fill="rgb(221,184,0)" rx="2" ry="2" />
<text  x="1185.20" y="607.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/SequentialMapReduce$$Lambda$57.0x0000000800bbd300.iterator (23 samples, 0.04%)</title><rect x="1132.7" y="437" width="0.6" height="15.0" fill="rgb(207,169,49)" rx="2" ry="2" />
<text  x="1135.74" y="447.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (5 samples, 0.01%)</title><rect x="1187.0" y="549" width="0.2" height="15.0" fill="rgb(237,165,24)" rx="2" ry="2" />
<text  x="1190.05" y="559.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (53 samples, 0.10%)</title><rect x="1140.5" y="613" width="1.2" height="15.0" fill="rgb(213,12,26)" rx="2" ry="2" />
<text  x="1143.47" y="623.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/stopwords/NonThreadLocalStopwords.contains (36,970 samples, 69.58%)</title><rect x="307.9" y="437" width="821.1" height="15.0" fill="rgb(205,77,13)" rx="2" ry="2" />
<text  x="310.91" y="447.5" >pl/symentis/wordcount/stopwords/NonThreadLocalStopwords.contains</text>
</g>
<g >
<title>G1FreeCollectionSetTask::FreeCSetClosure::do_heap_region(HeapRegion*) (15 samples, 0.03%)</title><rect x="1183.4" y="629" width="0.3" height="15.0" fill="rgb(237,182,31)" rx="2" ry="2" />
<text  x="1186.38" y="639.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (10 samples, 0.02%)</title><rect x="635.1" y="293" width="0.2" height="15.0" fill="rgb(234,154,2)" rx="2" ry="2" />
<text  x="638.08" y="303.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.spread (9 samples, 0.02%)</title><rect x="362.4" y="389" width="0.2" height="15.0" fill="rgb(228,164,21)" rx="2" ry="2" />
<text  x="365.37" y="399.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.append (2,792 samples, 5.25%)</title><rect x="637.7" y="293" width="62.0" height="15.0" fill="rgb(252,140,51)" rx="2" ry="2" />
<text  x="640.66" y="303.5" >java/l..</text>
</g>
<g >
<title>java/lang/String.compareTo (1,720 samples, 3.24%)</title><rect x="1090.8" y="341" width="38.2" height="15.0" fill="rgb(241,87,18)" rx="2" ry="2" />
<text  x="1093.79" y="351.5" >jav..</text>
</g>
<g >
<title>StackFrameStream::StackFrameStream(JavaThread*, bool) (5 samples, 0.01%)</title><rect x="1182.4" y="565" width="0.1" height="15.0" fill="rgb(235,207,42)" rx="2" ry="2" />
<text  x="1185.40" y="575.5" ></text>
</g>
<g >
<title>[unknown] (184 samples, 0.35%)</title><rect x="49.8" y="277" width="4.1" height="15.0" fill="rgb(249,225,12)" rx="2" ry="2" />
<text  x="52.82" y="287.5" ></text>
</g>
<g >
<title>copy_page_to_iter (14 samples, 0.03%)</title><rect x="54.6" y="53" width="0.3" height="15.0" fill="rgb(207,19,49)" rx="2" ry="2" />
<text  x="57.62" y="63.5" ></text>
</g>
<g >
<title>java/lang/String.coder (19 samples, 0.04%)</title><rect x="600.9" y="357" width="0.4" height="15.0" fill="rgb(236,123,29)" rx="2" ry="2" />
<text  x="603.90" y="367.5" ></text>
</g>
<g >
<title>java/util/regex/ASCII.isType (107 samples, 0.20%)</title><rect x="207.1" y="293" width="2.4" height="15.0" fill="rgb(221,113,1)" rx="2" ry="2" />
<text  x="210.08" y="303.5" ></text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (50,099 samples, 94.29%)</title><rect x="21.9" y="693" width="1112.6" height="15.0" fill="rgb(230,92,16)" rx="2" ry="2" />
<text  x="24.88" y="703.5" >java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g >
<title>java/lang/String.&lt;init&gt; (321 samples, 0.60%)</title><rect x="82.2" y="357" width="7.1" height="15.0" fill="rgb(211,85,25)" rx="2" ry="2" />
<text  x="85.16" y="367.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2,342 samples, 4.41%)</title><rect x="639.4" y="277" width="52.0" height="15.0" fill="rgb(214,59,25)" rx="2" ry="2" />
<text  x="642.37" y="287.5" >java/..</text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.isLatin1 (44 samples, 0.08%)</title><rect x="597.8" y="373" width="1.0" height="15.0" fill="rgb(243,83,11)" rx="2" ry="2" />
<text  x="600.81" y="383.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.setLength (2,375 samples, 4.47%)</title><rect x="860.4" y="325" width="52.8" height="15.0" fill="rgb(206,98,16)" rx="2" ry="2" />
<text  x="863.44" y="335.5" >java/..</text>
</g>
<g >
<title>[unknown_Java] (52 samples, 0.10%)</title><rect x="12.1" y="725" width="1.2" height="15.0" fill="rgb(233,176,22)" rx="2" ry="2" />
<text  x="15.13" y="735.5" ></text>
</g>
<g >
<title>__tls_get_addr (11 samples, 0.02%)</title><rect x="1186.2" y="661" width="0.2" height="15.0" fill="rgb(225,164,32)" rx="2" ry="2" />
<text  x="1189.20" y="671.5" ></text>
</g>
<g >
<title>futex_wake (6 samples, 0.01%)</title><rect x="13.7" y="645" width="0.1" height="15.0" fill="rgb(213,129,0)" rx="2" ry="2" />
<text  x="16.66" y="655.5" ></text>
</g>
<g >
<title>sun/text/CollatorUtilities.toNormalizerMode (13 samples, 0.02%)</title><rect x="1064.3" y="373" width="0.3" height="15.0" fill="rgb(219,102,28)" rx="2" ry="2" />
<text  x="1067.34" y="383.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (13 samples, 0.02%)</title><rect x="635.1" y="341" width="0.2" height="15.0" fill="rgb(251,216,5)" rx="2" ry="2" />
<text  x="638.06" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="55.7" y="213" width="0.2" height="15.0" fill="rgb(250,56,32)" rx="2" ry="2" />
<text  x="58.73" y="223.5" ></text>
</g>
<g >
<title>try_to_wake_up (5 samples, 0.01%)</title><rect x="13.7" y="613" width="0.1" height="15.0" fill="rgb(224,57,34)" rx="2" ry="2" />
<text  x="16.69" y="623.5" ></text>
</g>
<g >
<title>read_hpet (282 samples, 0.53%)</title><rect x="15.2" y="613" width="6.3" height="15.0" fill="rgb(215,165,7)" rx="2" ry="2" />
<text  x="18.22" y="623.5" ></text>
</g>
<g >
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (32 samples, 0.06%)</title><rect x="1182.1" y="613" width="0.7" height="15.0" fill="rgb(237,155,36)" rx="2" ry="2" />
<text  x="1185.12" y="623.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/UCharacterIterator.getInstance (1,272 samples, 2.39%)</title><rect x="1036.1" y="341" width="28.2" height="15.0" fill="rgb(242,63,18)" rx="2" ry="2" />
<text  x="1039.09" y="351.5" >j..</text>
</g>
<g >
<title>posix_get_monotonic_timespec (5 samples, 0.01%)</title><rect x="21.8" y="661" width="0.1" height="15.0" fill="rgb(240,26,24)" rx="2" ry="2" />
<text  x="24.77" y="671.5" ></text>
</g>
<g >
<title>read_hpet.part.0 (7 samples, 0.01%)</title><rect x="15.1" y="613" width="0.1" height="15.0" fill="rgb(232,80,5)" rx="2" ry="2" />
<text  x="18.06" y="623.5" ></text>
</g>
<g >
<title>java/lang/String.checkIndex (33 samples, 0.06%)</title><rect x="964.4" y="277" width="0.8" height="15.0" fill="rgb(233,67,24)" rx="2" ry="2" />
<text  x="967.44" y="287.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;TypeArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (8 samples, 0.02%)</title><rect x="1178.6" y="597" width="0.2" height="15.0" fill="rgb(253,112,13)" rx="2" ry="2" />
<text  x="1181.58" y="607.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.01%)</title><rect x="1063.2" y="277" width="0.2" height="15.0" fill="rgb(213,207,21)" rx="2" ry="2" />
<text  x="1066.21" y="287.5" ></text>
</g>
<g >
<title>WatcherThread::run() (8 samples, 0.02%)</title><rect x="1189.8" y="677" width="0.2" height="15.0" fill="rgb(207,56,5)" rx="2" ry="2" />
<text  x="1192.82" y="687.5" ></text>
</g>
<g >
<title>java/util/Locale.hashCode (7 samples, 0.01%)</title><rect x="362.2" y="389" width="0.2" height="15.0" fill="rgb(220,18,49)" rx="2" ry="2" />
<text  x="365.22" y="399.5" ></text>
</g>
<g >
<title>do_futex_wait.constprop.0 (15 samples, 0.03%)</title><rect x="11.4" y="709" width="0.3" height="15.0" fill="rgb(236,135,38)" rx="2" ry="2" />
<text  x="14.35" y="719.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$BmpCharProperty.match (3,675 samples, 6.92%)</title><rect x="130.9" y="341" width="81.6" height="15.0" fill="rgb(215,150,34)" rx="2" ry="2" />
<text  x="133.86" y="351.5" >java/util..</text>
</g>
<g >
<title>java/lang/StringBuffer.length (17 samples, 0.03%)</title><rect x="603.1" y="405" width="0.4" height="15.0" fill="rgb(238,202,0)" rx="2" ry="2" />
<text  x="606.12" y="415.5" ></text>
</g>
<g >
<title>java/util/regex/ASCII.isType (106 samples, 0.20%)</title><rect x="199.5" y="277" width="2.3" height="15.0" fill="rgb(242,49,5)" rx="2" ry="2" />
<text  x="202.49" y="287.5" ></text>
</g>
<g >
<title>java/text/RuleBasedCollationKey.compareTo (1,964 samples, 3.70%)</title><rect x="1085.4" y="357" width="43.6" height="15.0" fill="rgb(230,65,41)" rx="2" ry="2" />
<text  x="1088.37" y="367.5" >java..</text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (50,099 samples, 94.29%)</title><rect x="21.9" y="709" width="1112.6" height="15.0" fill="rgb(243,196,38)" rx="2" ry="2" />
<text  x="24.88" y="719.5" >java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g >
<title>java/lang/StringUTF16.checkIndex (46 samples, 0.09%)</title><rect x="694.7" y="261" width="1.1" height="15.0" fill="rgb(213,123,35)" rx="2" ry="2" />
<text  x="697.73" y="271.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/UCharacterIterator.previousCodePoint (1,216 samples, 2.29%)</title><rect x="914.2" y="341" width="27.0" height="15.0" fill="rgb(223,157,18)" rx="2" ry="2" />
<text  x="917.18" y="351.5" >j..</text>
</g>
<g >
<title>jint_disjoint_arraycopy (38 samples, 0.07%)</title><rect x="307.1" y="309" width="0.8" height="15.0" fill="rgb(227,170,14)" rx="2" ry="2" />
<text  x="310.07" y="319.5" ></text>
</g>
<g >
<title>inflate (52 samples, 0.10%)</title><rect x="52.8" y="261" width="1.1" height="15.0" fill="rgb(251,140,21)" rx="2" ry="2" />
<text  x="55.75" y="271.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (11 samples, 0.02%)</title><rect x="635.1" y="325" width="0.2" height="15.0" fill="rgb(216,207,3)" rx="2" ry="2" />
<text  x="638.06" y="335.5" ></text>
</g>
<g >
<title>java/util/HashMap.compute (39 samples, 0.07%)</title><rect x="77.1" y="437" width="0.9" height="15.0" fill="rgb(234,187,6)" rx="2" ry="2" />
<text  x="80.09" y="447.5" ></text>
</g>
<g >
<title>jdk/internal/icu/impl/ReplaceableUCharacterIterator.previous (1,216 samples, 2.29%)</title><rect x="914.2" y="325" width="27.0" height="15.0" fill="rgb(225,145,29)" rx="2" ry="2" />
<text  x="917.18" y="335.5" >j..</text>
</g>
<g >
<title>java/util/HashMap.resize (89 samples, 0.17%)</title><rect x="283.4" y="405" width="2.0" height="15.0" fill="rgb(214,25,51)" rx="2" ry="2" />
<text  x="286.42" y="415.5" ></text>
</g>
<g >
<title>java/text/Collator.getInstance (2,407 samples, 4.53%)</title><rect x="309.5" y="421" width="53.4" height="15.0" fill="rgb(241,193,38)" rx="2" ry="2" />
<text  x="312.47" y="431.5" >java/..</text>
</g>
<g >
<title>checkcast_arraycopy (5 samples, 0.01%)</title><rect x="13.2" y="709" width="0.1" height="15.0" fill="rgb(249,205,42)" rx="2" ry="2" />
<text  x="16.18" y="719.5" ></text>
</g>
<g >
<title>java/lang/String.charAt (174 samples, 0.33%)</title><rect x="189.6" y="325" width="3.8" height="15.0" fill="rgb(236,162,47)" rx="2" ry="2" />
<text  x="192.56" y="335.5" ></text>
</g>
<g >
<title>java/lang/String.isLatin1 (12 samples, 0.02%)</title><rect x="190.3" y="309" width="0.3" height="15.0" fill="rgb(251,81,35)" rx="2" ry="2" />
<text  x="193.34" y="319.5" ></text>
</g>
<g >
<title>java/util/concurrent/ConcurrentHashMap.get (454 samples, 0.85%)</title><rect x="352.8" y="405" width="10.1" height="15.0" fill="rgb(220,66,9)" rx="2" ry="2" />
<text  x="355.84" y="415.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.01%)</title><rect x="312.5" y="373" width="0.1" height="15.0" fill="rgb(238,153,5)" rx="2" ry="2" />
<text  x="315.49" y="383.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (246 samples, 0.46%)</title><rect x="83.8" y="341" width="5.5" height="15.0" fill="rgb(249,15,30)" rx="2" ry="2" />
<text  x="86.82" y="351.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.02%)</title><rect x="57.0" y="405" width="0.2" height="15.0" fill="rgb(241,110,9)" rx="2" ry="2" />
<text  x="60.04" y="415.5" ></text>
</g>
<g >
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (11 samples, 0.02%)</title><rect x="1182.6" y="565" width="0.2" height="15.0" fill="rgb(254,107,5)" rx="2" ry="2" />
<text  x="1185.58" y="575.5" ></text>
</g>
<g >
<title>itable stub (1,961 samples, 3.69%)</title><rect x="146.0" y="325" width="43.6" height="15.0" fill="rgb(241,216,10)" rx="2" ry="2" />
<text  x="149.01" y="335.5" >itab..</text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountMapper.map (11 samples, 0.02%)</title><rect x="1134.2" y="437" width="0.3" height="15.0" fill="rgb(207,105,1)" rx="2" ry="2" />
<text  x="1137.23" y="447.5" ></text>
</g>
<g >
<title>__libc_lseek (11 samples, 0.02%)</title><rect x="55.6" y="229" width="0.3" height="15.0" fill="rgb(245,126,28)" rx="2" ry="2" />
<text  x="58.62" y="239.5" ></text>
</g>
<g >
<title>G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*) (12 samples, 0.02%)</title><rect x="1181.8" y="613" width="0.2" height="15.0" fill="rgb(234,164,47)" rx="2" ry="2" />
<text  x="1184.76" y="623.5" ></text>
</g>
<g >
<title>java/util/HashMap.getNode (8 samples, 0.02%)</title><rect x="1133.1" y="373" width="0.2" height="15.0" fill="rgb(241,194,36)" rx="2" ry="2" />
<text  x="1136.08" y="383.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (104 samples, 0.20%)</title><rect x="1175.7" y="581" width="2.3" height="15.0" fill="rgb(221,123,50)" rx="2" ry="2" />
<text  x="1178.72" y="591.5" ></text>
</g>
<g >
<title>aa_file_perm (5 samples, 0.01%)</title><rect x="55.2" y="69" width="0.1" height="15.0" fill="rgb(228,132,8)" rx="2" ry="2" />
<text  x="58.22" y="79.5" ></text>
</g>
<g >
<title>java/util/zip/ZipFile$ZipFileInputStream.read (81 samples, 0.15%)</title><rect x="54.1" y="293" width="1.8" height="15.0" fill="rgb(239,93,19)" rx="2" ry="2" />
<text  x="57.11" y="303.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.01%)</title><rect x="1188.5" y="373" width="0.1" height="15.0" fill="rgb(207,219,54)" rx="2" ry="2" />
<text  x="1191.47" y="383.5" ></text>
</g>
<g >
<title>java/util/zip/Inflater.inflateBytesBytes (968 samples, 1.82%)</title><rect x="32.5" y="293" width="21.5" height="15.0" fill="rgb(244,229,39)" rx="2" ry="2" />
<text  x="35.52" y="303.5" >j..</text>
</g>
<g >
<title>jdk/internal/icu/text/UCharacterIterator.moveCodePointIndex (1,261 samples, 2.37%)</title><rect x="913.2" y="357" width="28.0" height="15.0" fill="rgb(236,104,23)" rx="2" ry="2" />
<text  x="916.18" y="367.5" >j..</text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.newCapacity (120 samples, 0.23%)</title><rect x="671.3" y="261" width="2.6" height="15.0" fill="rgb(226,187,0)" rx="2" ry="2" />
<text  x="674.28" y="271.5" ></text>
</g>
<g >
<title>put_timespec64 (11 samples, 0.02%)</title><rect x="21.5" y="645" width="0.3" height="15.0" fill="rgb(212,187,39)" rx="2" ry="2" />
<text  x="24.53" y="655.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.append (455 samples, 0.86%)</title><rect x="714.3" y="325" width="10.1" height="15.0" fill="rgb(216,20,46)" rx="2" ry="2" />
<text  x="717.30" y="335.5" ></text>
</g>
<g >
<title>java/lang/StringBuffer.length (66 samples, 0.12%)</title><rect x="966.2" y="309" width="1.5" height="15.0" fill="rgb(243,196,35)" rx="2" ry="2" />
<text  x="969.22" y="319.5" ></text>
</g>
<g >
<title>G1RemSetScanState::G1ClearCardTableTask::work(unsigned int) (13 samples, 0.02%)</title><rect x="1185.5" y="661" width="0.3" height="15.0" fill="rgb(254,1,21)" rx="2" ry="2" />
<text  x="1188.47" y="671.5" ></text>
</g>
<g >
<title>java/lang/StringUTF16.putCharSB (44 samples, 0.08%)</title><rect x="602.1" y="373" width="1.0" height="15.0" fill="rgb(224,112,27)" rx="2" ry="2" />
<text  x="605.14" y="383.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.append (9 samples, 0.02%)</title><rect x="57.0" y="421" width="0.2" height="15.0" fill="rgb(217,86,22)" rx="2" ry="2" />
<text  x="60.04" y="431.5" ></text>
</g>
<g >
<title>java/io/RandomAccessFile.read (58 samples, 0.11%)</title><rect x="54.2" y="261" width="1.3" height="15.0" fill="rgb(240,83,2)" rx="2" ry="2" />
<text  x="57.17" y="271.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (50,096 samples, 94.29%)</title><rect x="21.9" y="629" width="1112.6" height="15.0" fill="rgb(208,33,1)" rx="2" ry="2" />
<text  x="24.88" y="639.5" >org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call</text>
</g>
<g >
<title>MemAllocator::allocate() const (8 samples, 0.02%)</title><rect x="995.4" y="341" width="0.2" height="15.0" fill="rgb(207,212,32)" rx="2" ry="2" />
<text  x="998.38" y="351.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.length (8 samples, 0.02%)</title><rect x="724.2" y="293" width="0.2" height="15.0" fill="rgb(248,97,9)" rx="2" ry="2" />
<text  x="727.23" y="303.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (16 samples, 0.03%)</title><rect x="1178.1" y="597" width="0.3" height="15.0" fill="rgb(251,169,51)" rx="2" ry="2" />
<text  x="1181.07" y="607.5" ></text>
</g>
<g >
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (64 samples, 0.12%)</title><rect x="1188.3" y="581" width="1.4" height="15.0" fill="rgb(220,81,28)" rx="2" ry="2" />
<text  x="1191.27" y="591.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.isLatin1 (42 samples, 0.08%)</title><rect x="940.3" y="261" width="0.9" height="15.0" fill="rgb(243,155,23)" rx="2" ry="2" />
<text  x="943.26" y="271.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (7 samples, 0.01%)</title><rect x="312.5" y="357" width="0.1" height="15.0" fill="rgb(216,163,4)" rx="2" ry="2" />
<text  x="315.49" y="367.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/NormalizerBase.&lt;init&gt; (2,988 samples, 5.62%)</title><rect x="998.0" y="357" width="66.3" height="15.0" fill="rgb(233,215,50)" rx="2" ry="2" />
<text  x="1000.98" y="367.5" >jdk/int..</text>
</g>
<g >
<title>java/util/TreeMap.getEntry (2,595 samples, 4.88%)</title><rect x="1071.4" y="389" width="57.6" height="15.0" fill="rgb(227,131,30)" rx="2" ry="2" />
<text  x="1074.36" y="399.5" >java/u..</text>
</g>
<g >
<title>java/lang/ref/SoftReference.get (64 samples, 0.12%)</title><rect x="310.8" y="405" width="1.4" height="15.0" fill="rgb(234,94,27)" rx="2" ry="2" />
<text  x="313.80" y="415.5" ></text>
</g>
<g >
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (8 samples, 0.02%)</title><rect x="634.8" y="277" width="0.2" height="15.0" fill="rgb(225,104,14)" rx="2" ry="2" />
<text  x="637.81" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="13.7" y="677" width="0.1" height="15.0" fill="rgb(235,115,3)" rx="2" ry="2" />
<text  x="16.66" y="687.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (12 samples, 0.02%)</title><rect x="634.7" y="325" width="0.3" height="15.0" fill="rgb(210,197,44)" rx="2" ry="2" />
<text  x="637.75" y="335.5" ></text>
</g>
<g >
<title>java/util/ArrayList.grow (33 samples, 0.06%)</title><rect x="92.8" y="357" width="0.8" height="15.0" fill="rgb(205,199,8)" rx="2" ry="2" />
<text  x="95.84" y="367.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2,364 samples, 4.45%)</title><rect x="860.7" y="309" width="52.5" height="15.0" fill="rgb(213,137,7)" rx="2" ry="2" />
<text  x="863.68" y="319.5" >java/..</text>
</g>
<g >
<title>jdk/internal/util/ArraysSupport.newLength (29 samples, 0.05%)</title><rect x="673.3" y="245" width="0.6" height="15.0" fill="rgb(240,175,27)" rx="2" ry="2" />
<text  x="676.30" y="255.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (7 samples, 0.01%)</title><rect x="1178.4" y="597" width="0.2" height="15.0" fill="rgb(252,105,35)" rx="2" ry="2" />
<text  x="1181.43" y="607.5" ></text>
</g>
<g >
<title>java/io/FilterInputStream.available (5 samples, 0.01%)</title><rect x="32.3" y="341" width="0.2" height="15.0" fill="rgb(212,18,42)" rx="2" ry="2" />
<text  x="35.34" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="11.9" y="693" width="0.2" height="15.0" fill="rgb(215,145,11)" rx="2" ry="2" />
<text  x="14.91" y="703.5" ></text>
</g>
<g >
<title>read_hpet.part.0 (282 samples, 0.53%)</title><rect x="15.2" y="597" width="6.3" height="15.0" fill="rgb(248,81,15)" rx="2" ry="2" />
<text  x="18.22" y="607.5" ></text>
</g>
<g >
<title>checkcast_arraycopy (86 samples, 0.16%)</title><rect x="71.3" y="437" width="1.9" height="15.0" fill="rgb(229,69,8)" rx="2" ry="2" />
<text  x="74.30" y="447.5" ></text>
</g>
<g >
<title>G1BarrierSet::invalidate(MemRegion) (9 samples, 0.02%)</title><rect x="12.1" y="709" width="0.2" height="15.0" fill="rgb(237,179,16)" rx="2" ry="2" />
<text  x="15.13" y="719.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.append (2,792 samples, 5.25%)</title><rect x="637.7" y="325" width="62.0" height="15.0" fill="rgb(225,105,20)" rx="2" ry="2" />
<text  x="640.66" y="335.5" >java/l..</text>
</g>
<g >
<title>G1MergeHeapRootsTask::work(unsigned int) (31 samples, 0.06%)</title><rect x="1183.9" y="661" width="0.7" height="15.0" fill="rgb(217,199,34)" rx="2" ry="2" />
<text  x="1186.91" y="671.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$Start.match (4,392 samples, 8.27%)</title><rect x="114.9" y="373" width="97.6" height="15.0" fill="rgb(219,210,37)" rx="2" ry="2" />
<text  x="117.94" y="383.5" >java/util/r..</text>
</g>
<g >
<title>G1FreeCollectionSetTask::work(unsigned int) (24 samples, 0.05%)</title><rect x="1183.4" y="661" width="0.5" height="15.0" fill="rgb(248,73,39)" rx="2" ry="2" />
<text  x="1186.36" y="671.5" ></text>
</g>
<g >
<title>G1ParScanThreadStateSet::state_for_worker(unsigned int) (8 samples, 0.02%)</title><rect x="1182.9" y="645" width="0.2" height="15.0" fill="rgb(228,223,12)" rx="2" ry="2" />
<text  x="1185.94" y="655.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (90 samples, 0.17%)</title><rect x="1156.7" y="597" width="2.0" height="15.0" fill="rgb(230,122,1)" rx="2" ry="2" />
<text  x="1159.73" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_futex (5 samples, 0.01%)</title><rect x="11.0" y="645" width="0.1" height="15.0" fill="rgb(210,225,29)" rx="2" ry="2" />
<text  x="14.00" y="655.5" ></text>
</g>
<g >
<title>java/util/regex/CharPredicates$$Lambda$54.0x0000000800b7b5d8.is (343 samples, 0.65%)</title><rect x="201.8" y="325" width="7.7" height="15.0" fill="rgb(246,86,32)" rx="2" ry="2" />
<text  x="204.84" y="335.5" ></text>
</g>
<g >
<title>HeapRegionRemSet::clear_locked(bool) (5 samples, 0.01%)</title><rect x="1183.6" y="597" width="0.1" height="15.0" fill="rgb(207,184,31)" rx="2" ry="2" />
<text  x="1186.58" y="607.5" ></text>
</g>
<g >
<title>[not_walkable_Java] (11 samples, 0.02%)</title><rect x="10.4" y="725" width="0.2" height="15.0" fill="rgb(222,104,29)" rx="2" ry="2" />
<text  x="13.38" y="735.5" ></text>
</g>
<g >
<title>java/lang/StringUTF16.putCharSB (266 samples, 0.50%)</title><rect x="693.8" y="277" width="5.9" height="15.0" fill="rgb(220,155,43)" rx="2" ry="2" />
<text  x="696.76" y="287.5" ></text>
</g>
<g >
<title>java/lang/StringBuffer.&lt;init&gt; (7 samples, 0.01%)</title><rect x="1063.2" y="293" width="0.2" height="15.0" fill="rgb(229,209,44)" rx="2" ry="2" />
<text  x="1066.21" y="303.5" ></text>
</g>
<g >
<title>java/text/CollationElementIterator.next (11 samples, 0.02%)</title><rect x="77.7" y="405" width="0.3" height="15.0" fill="rgb(250,137,36)" rx="2" ry="2" />
<text  x="80.72" y="415.5" ></text>
</g>
<g >
<title>java/lang/String.toLowerCase (172 samples, 0.32%)</title><rect x="73.3" y="421" width="3.8" height="15.0" fill="rgb(223,30,27)" rx="2" ry="2" />
<text  x="76.27" y="431.5" ></text>
</g>
<g >
<title>G1ParScanThreadStateSet::flush() (5 samples, 0.01%)</title><rect x="1188.9" y="549" width="0.1" height="15.0" fill="rgb(247,14,30)" rx="2" ry="2" />
<text  x="1191.93" y="559.5" ></text>
</g>
<g >
<title>all (53,131 samples, 100%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(218,20,33)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.newCapacity (151 samples, 0.28%)</title><rect x="720.9" y="277" width="3.3" height="15.0" fill="rgb(209,205,4)" rx="2" ry="2" />
<text  x="723.87" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%)</title><rect x="55.7" y="197" width="0.2" height="15.0" fill="rgb(240,132,38)" rx="2" ry="2" />
<text  x="58.73" y="207.5" ></text>
</g>
<g >
<title>clock_gettime (364 samples, 0.69%)</title><rect x="13.8" y="725" width="8.1" height="15.0" fill="rgb(215,206,38)" rx="2" ry="2" />
<text  x="16.80" y="735.5" ></text>
</g>
<g >
<title>copy_user_generic_string (13 samples, 0.02%)</title><rect x="54.6" y="37" width="0.3" height="15.0" fill="rgb(229,15,6)" rx="2" ry="2" />
<text  x="57.64" y="47.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.02%)</title><rect x="1186.5" y="629" width="0.1" height="15.0" fill="rgb(243,205,42)" rx="2" ry="2" />
<text  x="1189.47" y="639.5" ></text>
</g>
<g >
<title>java/lang/String.checkIndex (36 samples, 0.07%)</title><rect x="695.0" y="245" width="0.8" height="15.0" fill="rgb(243,131,10)" rx="2" ry="2" />
<text  x="697.96" y="255.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountReducer.reduce (247 samples, 0.46%)</title><rect x="1129.0" y="453" width="5.5" height="15.0" fill="rgb(209,97,21)" rx="2" ry="2" />
<text  x="1131.99" y="463.5" ></text>
</g>
<g >
<title>java/lang/Character.isBmpCodePoint (35 samples, 0.07%)</title><rect x="636.9" y="325" width="0.8" height="15.0" fill="rgb(210,215,33)" rx="2" ry="2" />
<text  x="639.88" y="335.5" ></text>
</g>
<g >
<title>Java_java_util_zip_Inflater_inflateBytesBytes (10 samples, 0.02%)</title><rect x="49.6" y="277" width="0.2" height="15.0" fill="rgb(225,186,41)" rx="2" ry="2" />
<text  x="52.60" y="287.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (2,487 samples, 4.68%)</title><rect x="1134.8" y="709" width="55.2" height="15.0" fill="rgb(222,181,24)" rx="2" ry="2" />
<text  x="1137.77" y="719.5" >threa..</text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput$$Lambda$56.0x0000000800bbd0c8.apply (1,014 samples, 1.91%)</title><rect x="285.4" y="405" width="22.5" height="15.0" fill="rgb(247,28,44)" rx="2" ry="2" />
<text  x="288.39" y="415.5" >p..</text>
</g>
<g >
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (5 samples, 0.01%)</title><rect x="995.4" y="309" width="0.1" height="15.0" fill="rgb(224,34,23)" rx="2" ry="2" />
<text  x="998.38" y="319.5" ></text>
</g>
<g >
<title>vfs_read (40 samples, 0.08%)</title><rect x="54.5" y="133" width="0.9" height="15.0" fill="rgb(223,119,52)" rx="2" ry="2" />
<text  x="57.46" y="143.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.search (16 samples, 0.03%)</title><rect x="23.5" y="469" width="0.4" height="15.0" fill="rgb(206,96,38)" rx="2" ry="2" />
<text  x="26.55" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="1179.2" y="581" width="0.1" height="15.0" fill="rgb(240,59,10)" rx="2" ry="2" />
<text  x="1182.16" y="591.5" ></text>
</g>
<g >
<title>java/lang/String.&lt;init&gt; (11 samples, 0.02%)</title><rect x="607.4" y="373" width="0.2" height="15.0" fill="rgb(207,152,37)" rx="2" ry="2" />
<text  x="610.36" y="383.5" ></text>
</g>
<g >
<title>try_to_wake_up (5 samples, 0.01%)</title><rect x="1186.5" y="549" width="0.1" height="15.0" fill="rgb(209,135,33)" rx="2" ry="2" />
<text  x="1189.54" y="559.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput.emit (4,091 samples, 7.70%)</title><rect x="217.1" y="437" width="90.8" height="15.0" fill="rgb(211,63,31)" rx="2" ry="2" />
<text  x="220.06" y="447.5" >pl/symenti..</text>
</g>
<g >
<title>do_futex (6 samples, 0.01%)</title><rect x="1179.2" y="533" width="0.1" height="15.0" fill="rgb(250,228,38)" rx="2" ry="2" />
<text  x="1182.16" y="543.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (7 samples, 0.01%)</title><rect x="1063.2" y="229" width="0.2" height="15.0" fill="rgb(231,40,19)" rx="2" ry="2" />
<text  x="1066.21" y="239.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (76 samples, 0.14%)</title><rect x="996.2" y="373" width="1.7" height="15.0" fill="rgb(226,218,20)" rx="2" ry="2" />
<text  x="999.22" y="383.5" ></text>
</g>
<g >
<title>readBytes (53 samples, 0.10%)</title><rect x="54.3" y="229" width="1.2" height="15.0" fill="rgb(213,126,18)" rx="2" ry="2" />
<text  x="57.29" y="239.5" ></text>
</g>
<g >
<title>java/text/Collator.setStrength (513 samples, 0.97%)</title><rect x="341.5" y="373" width="11.3" height="15.0" fill="rgb(214,161,7)" rx="2" ry="2" />
<text  x="344.45" y="383.5" ></text>
</g>
<g >
<title>java/lang/String.substring (476 samples, 0.90%)</title><rect x="80.4" y="389" width="10.6" height="15.0" fill="rgb(248,101,7)" rx="2" ry="2" />
<text  x="83.40" y="399.5" ></text>
</g>
<g >
<title>SafepointSynchronize::do_cleanup_tasks() (6 samples, 0.01%)</title><rect x="1188.0" y="629" width="0.2" height="15.0" fill="rgb(253,218,50)" rx="2" ry="2" />
<text  x="1191.02" y="639.5" ></text>
</g>
<g >
<title>try_to_wake_up (6 samples, 0.01%)</title><rect x="1188.5" y="389" width="0.1" height="15.0" fill="rgb(214,57,19)" rx="2" ry="2" />
<text  x="1191.47" y="399.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.01%)</title><rect x="32.6" y="277" width="0.1" height="15.0" fill="rgb(210,2,45)" rx="2" ry="2" />
<text  x="35.59" y="287.5" ></text>
</g>
<g >
<title>java/io/InputStreamReader.read (1,179 samples, 2.22%)</title><rect x="29.7" y="405" width="26.2" height="15.0" fill="rgb(241,127,49)" rx="2" ry="2" />
<text  x="32.74" y="415.5" >j..</text>
</g>
<g >
<title>Compilation::emit_lir() (6 samples, 0.01%)</title><rect x="1187.6" y="565" width="0.1" height="15.0" fill="rgb(243,117,19)" rx="2" ry="2" />
<text  x="1190.60" y="575.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOf (785 samples, 1.48%)</title><rect x="673.9" y="261" width="17.5" height="15.0" fill="rgb(249,57,39)" rx="2" ry="2" />
<text  x="676.95" y="271.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/ReplaceableString.length (93 samples, 0.18%)</title><rect x="856.0" y="341" width="2.0" height="15.0" fill="rgb(232,100,6)" rx="2" ry="2" />
<text  x="858.95" y="351.5" ></text>
</g>
<g >
<title>java/lang/CharacterDataLatin1.toLowerCase (7 samples, 0.01%)</title><rect x="76.9" y="389" width="0.1" height="15.0" fill="rgb(207,200,22)" rx="2" ry="2" />
<text  x="79.87" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.01%)</title><rect x="11.7" y="677" width="0.1" height="15.0" fill="rgb(230,195,28)" rx="2" ry="2" />
<text  x="14.71" y="687.5" ></text>
</g>
<g >
<title>java/io/RandomAccessFile.seek0 (18 samples, 0.03%)</title><rect x="55.5" y="245" width="0.4" height="15.0" fill="rgb(209,159,15)" rx="2" ry="2" />
<text  x="58.46" y="255.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.search (5 samples, 0.01%)</title><rect x="78.0" y="437" width="0.1" height="15.0" fill="rgb(208,151,10)" rx="2" ry="2" />
<text  x="80.96" y="447.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/jmh_generated/SequentialMapReduceWordCountBenchmark_countWords_jmhTest.countWords_Throughput (50,096 samples, 94.29%)</title><rect x="21.9" y="533" width="1112.6" height="15.0" fill="rgb(239,127,18)" rx="2" ry="2" />
<text  x="24.88" y="543.5" >pl/symentis/wordcount/jmh_generated/SequentialMapReduceWordCountBenchmark_countWords_jmhTest.countWords_Throughput</text>
</g>
<g >
<title>ConcurrentGCThread::run() (7 samples, 0.01%)</title><rect x="1134.8" y="677" width="0.1" height="15.0" fill="rgb(207,134,0)" rx="2" ry="2" />
<text  x="1137.77" y="687.5" ></text>
</g>
<g >
<title>java/util/ArrayList.grow (101 samples, 0.19%)</title><rect x="305.7" y="325" width="2.2" height="15.0" fill="rgb(253,26,18)" rx="2" ry="2" />
<text  x="308.67" y="335.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.toLowerCase (171 samples, 0.32%)</title><rect x="73.3" y="405" width="3.8" height="15.0" fill="rgb(250,165,23)" rx="2" ry="2" />
<text  x="76.30" y="415.5" ></text>
</g>
<g >
<title>copy_user_generic_string (9 samples, 0.02%)</title><rect x="21.6" y="629" width="0.2" height="15.0" fill="rgb(241,150,2)" rx="2" ry="2" />
<text  x="24.57" y="639.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.newString (333 samples, 0.63%)</title><rect x="606.9" y="389" width="7.4" height="15.0" fill="rgb(225,32,10)" rx="2" ry="2" />
<text  x="609.90" y="399.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/NormalizerBase.&lt;init&gt; (2,991 samples, 5.63%)</title><rect x="997.9" y="373" width="66.4" height="15.0" fill="rgb(226,211,52)" rx="2" ry="2" />
<text  x="1000.91" y="383.5" >jdk/int..</text>
</g>
<g >
<title>HeapRegion::hr_clear(bool) (6 samples, 0.01%)</title><rect x="1183.6" y="613" width="0.1" height="15.0" fill="rgb(242,136,47)" rx="2" ry="2" />
<text  x="1186.56" y="623.5" ></text>
</g>
<g >
<title>CompileBroker::compiler_thread_loop() (45 samples, 0.08%)</title><rect x="1186.8" y="661" width="1.0" height="15.0" fill="rgb(214,218,41)" rx="2" ry="2" />
<text  x="1189.78" y="671.5" ></text>
</g>
<g >
<title>java/lang/StringUTF16.compress (39 samples, 0.07%)</title><rect x="56.2" y="389" width="0.8" height="15.0" fill="rgb(205,27,32)" rx="2" ry="2" />
<text  x="59.15" y="399.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOf (912 samples, 1.72%)</title><rect x="892.9" y="293" width="20.3" height="15.0" fill="rgb(211,40,13)" rx="2" ry="2" />
<text  x="895.93" y="303.5" ></text>
</g>
<g >
<title>wake_up_q (5 samples, 0.01%)</title><rect x="13.7" y="629" width="0.1" height="15.0" fill="rgb(224,205,2)" rx="2" ry="2" />
<text  x="16.69" y="639.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (290 samples, 0.55%)</title><rect x="15.0" y="629" width="6.5" height="15.0" fill="rgb(247,3,54)" rx="2" ry="2" />
<text  x="18.04" y="639.5" ></text>
</g>
<g >
<title>JavaThread::pd_last_frame() (5 samples, 0.01%)</title><rect x="1182.4" y="549" width="0.1" height="15.0" fill="rgb(239,141,20)" rx="2" ry="2" />
<text  x="1185.40" y="559.5" ></text>
</g>
<g >
<title>WorkGang::run_task(AbstractGangTask*, unsigned int, bool) (6 samples, 0.01%)</title><rect x="1188.5" y="533" width="0.1" height="15.0" fill="rgb(208,110,24)" rx="2" ry="2" />
<text  x="1191.47" y="543.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (27 samples, 0.05%)</title><rect x="54.6" y="101" width="0.6" height="15.0" fill="rgb(252,72,47)" rx="2" ry="2" />
<text  x="57.55" y="111.5" ></text>
</g>
<g >
<title>java/util/ArrayList.grow (33 samples, 0.06%)</title><rect x="92.8" y="373" width="0.8" height="15.0" fill="rgb(229,118,48)" rx="2" ry="2" />
<text  x="95.84" y="383.5" ></text>
</g>
<g >
<title>sem_post@@GLIBC_2.2.5 (9 samples, 0.02%)</title><rect x="1186.4" y="661" width="0.2" height="15.0" fill="rgb(236,86,53)" rx="2" ry="2" />
<text  x="1189.45" y="671.5" ></text>
</g>
<g >
<title>java/util/concurrent/FutureTask.run (50,096 samples, 94.29%)</title><rect x="21.9" y="645" width="1112.6" height="15.0" fill="rgb(225,185,8)" rx="2" ry="2" />
<text  x="24.88" y="655.5" >java/util/concurrent/FutureTask.run</text>
</g>
<g >
<title>futex_wait (6 samples, 0.01%)</title><rect x="1179.2" y="517" width="0.1" height="15.0" fill="rgb(223,119,44)" rx="2" ry="2" />
<text  x="1182.16" y="527.5" ></text>
</g>
<g >
<title>java/lang/String.equals (399 samples, 0.75%)</title><rect x="269.8" y="405" width="8.8" height="15.0" fill="rgb(243,24,31)" rx="2" ry="2" />
<text  x="272.76" y="415.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,999 samples, 3.76%)</title><rect x="755.0" y="309" width="44.4" height="15.0" fill="rgb(205,198,2)" rx="2" ry="2" />
<text  x="757.99" y="319.5" >java..</text>
</g>
<g >
<title>do_futex (5 samples, 0.01%)</title><rect x="11.6" y="645" width="0.1" height="15.0" fill="rgb(211,83,23)" rx="2" ry="2" />
<text  x="14.55" y="655.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (869 samples, 1.64%)</title><rect x="1158.7" y="597" width="19.3" height="15.0" fill="rgb(217,178,39)" rx="2" ry="2" />
<text  x="1161.73" y="607.5" ></text>
</g>
<g >
<title>java/util/TreeMap.containsKey (2,595 samples, 4.88%)</title><rect x="1071.4" y="405" width="57.6" height="15.0" fill="rgb(225,156,23)" rx="2" ry="2" />
<text  x="1074.36" y="415.5" >java/u..</text>
</g>
<g >
<title>ksys_lseek (5 samples, 0.01%)</title><rect x="55.8" y="165" width="0.1" height="15.0" fill="rgb(211,131,35)" rx="2" ry="2" />
<text  x="58.75" y="175.5" ></text>
</g>
<g >
<title>java/util/ArrayList.elementData (12 samples, 0.02%)</title><rect x="93.9" y="389" width="0.3" height="15.0" fill="rgb(240,134,5)" rx="2" ry="2" />
<text  x="96.93" y="399.5" ></text>
</g>
</g>
</svg>
