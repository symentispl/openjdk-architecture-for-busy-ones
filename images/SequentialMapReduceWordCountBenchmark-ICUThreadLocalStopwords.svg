<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="806.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="789" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="789" > </text>
<g id="frames">
<g >
<title>java/util/ArrayList.grow (235 samples, 0.44%)</title><rect x="795.3" y="341" width="5.2" height="15.0" fill="rgb(229,112,4)" rx="2" ry="2" />
<text  x="798.34" y="351.5" ></text>
</g>
<g >
<title>com/ibm/icu/text/RuleBasedCollator.getCollationKey (14,224 samples, 26.59%)</title><rect x="801.0" y="421" width="313.7" height="15.0" fill="rgb(210,181,36)" rx="2" ry="2" />
<text  x="804.00" y="431.5" >com/ibm/icu/text/RuleBasedCollator.getColl..</text>
</g>
<g >
<title>com/ibm/icu/text/RuleBasedCollator.getCollationKey (14,231 samples, 26.60%)</title><rect x="800.8" y="437" width="313.9" height="15.0" fill="rgb(216,8,35)" rx="2" ry="2" />
<text  x="803.85" y="447.5" >com/ibm/icu/text/RuleBasedCollator.getColl..</text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationKeys$SortKeyLevel.appendByte (296 samples, 0.55%)</title><rect x="961.7" y="357" width="6.5" height="15.0" fill="rgb(238,158,22)" rx="2" ry="2" />
<text  x="964.70" y="367.5" ></text>
</g>
<g >
<title>java/util/ArrayList.grow (236 samples, 0.44%)</title><rect x="795.3" y="357" width="5.2" height="15.0" fill="rgb(241,118,4)" rx="2" ry="2" />
<text  x="798.31" y="367.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/ForkedMain.main (5 samples, 0.01%)</title><rect x="1132.1" y="741" width="0.2" height="15.0" fill="rgb(226,197,17)" rx="2" ry="2" />
<text  x="1135.15" y="751.5" ></text>
</g>
<g >
<title>java/util/HashMap.resize (219 samples, 0.41%)</title><rect x="756.2" y="421" width="4.8" height="15.0" fill="rgb(240,20,36)" rx="2" ry="2" />
<text  x="759.21" y="431.5" ></text>
</g>
<g >
<title>try_to_wake_up (5 samples, 0.01%)</title><rect x="1189.4" y="405" width="0.1" height="15.0" fill="rgb(248,181,29)" rx="2" ry="2" />
<text  x="1192.38" y="415.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationKeys$SortKeyByteSink.Append (28 samples, 0.05%)</title><rect x="848.0" y="373" width="0.6" height="15.0" fill="rgb(222,20,9)" rx="2" ry="2" />
<text  x="851.00" y="383.5" ></text>
</g>
<g >
<title>java/io/BufferedReader.fill (2,706 samples, 5.06%)</title><rect x="38.3" y="437" width="59.6" height="15.0" fill="rgb(248,224,53)" rx="2" ry="2" />
<text  x="41.25" y="447.5" >java/i..</text>
</g>
<g >
<title>MemAllocator::allocate() const (14 samples, 0.03%)</title><rect x="1017.3" y="309" width="0.3" height="15.0" fill="rgb(253,23,34)" rx="2" ry="2" />
<text  x="1020.26" y="319.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationSettings.isNumeric (62 samples, 0.12%)</title><rect x="1090.6" y="373" width="1.3" height="15.0" fill="rgb(235,82,24)" rx="2" ry="2" />
<text  x="1093.57" y="383.5" ></text>
</g>
<g >
<title>Thread::call_run() (2,618 samples, 4.89%)</title><rect x="1132.3" y="709" width="57.7" height="15.0" fill="rgb(220,104,39)" rx="2" ry="2" />
<text  x="1135.26" y="719.5" >Thread..</text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput.lambda$emit$0 (15 samples, 0.03%)</title><rect x="800.5" y="421" width="0.3" height="15.0" fill="rgb(247,209,53)" rx="2" ry="2" />
<text  x="803.52" y="431.5" ></text>
</g>
<g >
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (50,354 samples, 94.12%)</title><rect x="21.4" y="597" width="1110.6" height="15.0" fill="rgb(225,144,18)" rx="2" ry="2" />
<text  x="24.42" y="607.5" >jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g >
<title>ext4_file_read_iter (48 samples, 0.09%)</title><rect x="96.1" y="117" width="1.1" height="15.0" fill="rgb(234,2,15)" rx="2" ry="2" />
<text  x="99.15" y="127.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 0.01%)</title><rect x="1187.5" y="437" width="0.1" height="15.0" fill="rgb(225,67,43)" rx="2" ry="2" />
<text  x="1190.46" y="447.5" ></text>
</g>
<g >
<title>java/util/HashMap.compute (43 samples, 0.08%)</title><rect x="274.6" y="453" width="0.9" height="15.0" fill="rgb(212,192,7)" rx="2" ry="2" />
<text  x="277.56" y="463.5" ></text>
</g>
<g >
<title>java/lang/String.substring (546 samples, 1.02%)</title><rect x="285.3" y="405" width="12.0" height="15.0" fill="rgb(211,54,44)" rx="2" ry="2" />
<text  x="288.28" y="415.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmark (5 samples, 0.01%)</title><rect x="1132.1" y="661" width="0.2" height="15.0" fill="rgb(246,181,14)" rx="2" ry="2" />
<text  x="1135.15" y="671.5" ></text>
</g>
<g >
<title>Compile::Optimize() (13 samples, 0.02%)</title><rect x="1187.0" y="613" width="0.3" height="15.0" fill="rgb(214,37,5)" rx="2" ry="2" />
<text  x="1190.04" y="623.5" ></text>
</g>
<g >
<title>java/net/URL.openStream (7 samples, 0.01%)</title><rect x="21.5" y="469" width="0.1" height="15.0" fill="rgb(231,204,38)" rx="2" ry="2" />
<text  x="24.49" y="479.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2,451 samples, 4.58%)</title><rect x="1132.5" y="693" width="54.1" height="15.0" fill="rgb(217,61,5)" rx="2" ry="2" />
<text  x="1135.52" y="703.5" >GangW..</text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.01%)</title><rect x="95.9" y="229" width="0.1" height="15.0" fill="rgb(249,173,17)" rx="2" ry="2" />
<text  x="98.93" y="239.5" ></text>
</g>
<g >
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (29 samples, 0.05%)</title><rect x="1185.0" y="661" width="0.7" height="15.0" fill="rgb(228,56,12)" rx="2" ry="2" />
<text  x="1188.04" y="671.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountReducer.reduce (604 samples, 1.13%)</title><rect x="1118.6" y="485" width="13.4" height="15.0" fill="rgb(251,33,23)" rx="2" ry="2" />
<text  x="1121.65" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.01%)</title><rect x="97.7" y="213" width="0.2" height="15.0" fill="rgb(208,149,36)" rx="2" ry="2" />
<text  x="100.74" y="223.5" ></text>
</g>
<g >
<title>jni_GetPrimitiveArrayCritical (9 samples, 0.02%)</title><rect x="86.2" y="277" width="0.2" height="15.0" fill="rgb(214,75,31)" rx="2" ry="2" />
<text  x="89.25" y="287.5" ></text>
</g>
<g >
<title>[vdso] (269 samples, 0.50%)</title><rect x="15.5" y="725" width="5.9" height="15.0" fill="rgb(230,89,32)" rx="2" ry="2" />
<text  x="18.49" y="735.5" ></text>
</g>
<g >
<title>security_file_permission (7 samples, 0.01%)</title><rect x="97.2" y="117" width="0.2" height="15.0" fill="rgb(227,221,25)" rx="2" ry="2" />
<text  x="100.23" y="127.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (69 samples, 0.13%)</title><rect x="1186.6" y="693" width="1.5" height="15.0" fill="rgb(211,69,21)" rx="2" ry="2" />
<text  x="1189.58" y="703.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/SharedObject$Reference.readOnly (94 samples, 0.18%)</title><rect x="1091.9" y="373" width="2.1" height="15.0" fill="rgb(234,225,24)" rx="2" ry="2" />
<text  x="1094.94" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (57 samples, 0.11%)</title><rect x="96.1" y="197" width="1.3" height="15.0" fill="rgb(210,158,47)" rx="2" ry="2" />
<text  x="99.15" y="207.5" ></text>
</g>
<g >
<title>wake_up_q (5 samples, 0.01%)</title><rect x="1188.3" y="501" width="0.1" height="15.0" fill="rgb(219,99,49)" rx="2" ry="2" />
<text  x="1191.26" y="511.5" ></text>
</g>
<g >
<title>SafepointSynchronize::do_cleanup_tasks() (8 samples, 0.01%)</title><rect x="1188.2" y="645" width="0.2" height="15.0" fill="rgb(216,228,35)" rx="2" ry="2" />
<text  x="1191.21" y="655.5" ></text>
</g>
<g >
<title>java/io/RandomAccessFile.seek (16 samples, 0.03%)</title><rect x="97.5" y="277" width="0.4" height="15.0" fill="rgb(213,27,44)" rx="2" ry="2" />
<text  x="100.54" y="287.5" ></text>
</g>
<g >
<title>frame::sender(RegisterMap*) const (5 samples, 0.01%)</title><rect x="10.4" y="693" width="0.1" height="15.0" fill="rgb(224,149,47)" rx="2" ry="2" />
<text  x="13.37" y="703.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (787 samples, 1.47%)</title><rect x="1161.3" y="613" width="17.4" height="15.0" fill="rgb(246,32,15)" rx="2" ry="2" />
<text  x="1164.33" y="623.5" ></text>
</g>
<g >
<title>void WeakProcessor::Task::work&lt;G1STWIsAliveClosure, G1KeepAliveClosure&gt;(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*) (8 samples, 0.01%)</title><rect x="1186.4" y="677" width="0.2" height="15.0" fill="rgb(205,3,46)" rx="2" ry="2" />
<text  x="1189.40" y="687.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput.lambda$emit$0 (1,763 samples, 3.30%)</title><rect x="761.6" y="405" width="38.9" height="15.0" fill="rgb(211,7,34)" rx="2" ry="2" />
<text  x="764.63" y="415.5" >pl/..</text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (50,355 samples, 94.12%)</title><rect x="21.4" y="709" width="1110.6" height="15.0" fill="rgb(213,193,23)" rx="2" ry="2" />
<text  x="24.42" y="719.5" >java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g >
<title>java/util/HashMap.hash (589 samples, 1.10%)</title><rect x="743.2" y="421" width="12.9" height="15.0" fill="rgb(240,53,12)" rx="2" ry="2" />
<text  x="746.15" y="431.5" ></text>
</g>
<g >
<title>HeapRegionRemSet::clear_locked(bool) (7 samples, 0.01%)</title><rect x="1184.3" y="613" width="0.2" height="15.0" fill="rgb(233,187,19)" rx="2" ry="2" />
<text  x="1187.31" y="623.5" ></text>
</g>
<g >
<title>put_timespec64 (8 samples, 0.01%)</title><rect x="21.1" y="661" width="0.2" height="15.0" fill="rgb(206,93,3)" rx="2" ry="2" />
<text  x="24.14" y="671.5" ></text>
</g>
<g >
<title>__lock_text_start (5 samples, 0.01%)</title><rect x="1188.3" y="469" width="0.1" height="15.0" fill="rgb(237,186,29)" rx="2" ry="2" />
<text  x="1191.26" y="479.5" ></text>
</g>
<g >
<title>com/ibm/icu/text/RuleBasedCollator$CollationKeyByteSink.&lt;init&gt; (14 samples, 0.03%)</title><rect x="831.5" y="389" width="0.3" height="15.0" fill="rgb(221,61,42)" rx="2" ry="2" />
<text  x="834.49" y="399.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.01%)</title><rect x="592.6" y="389" width="0.1" height="15.0" fill="rgb(243,204,42)" rx="2" ry="2" />
<text  x="595.56" y="399.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (18 samples, 0.03%)</title><rect x="1183.7" y="645" width="0.4" height="15.0" fill="rgb(218,79,44)" rx="2" ry="2" />
<text  x="1186.67" y="655.5" ></text>
</g>
<g >
<title>Compilation::compile_method() (24 samples, 0.04%)</title><rect x="1187.4" y="613" width="0.6" height="15.0" fill="rgb(251,44,46)" rx="2" ry="2" />
<text  x="1190.44" y="623.5" ></text>
</g>
<g >
<title>IR::IR(Compilation*, ciMethod*, int) (6 samples, 0.01%)</title><rect x="1187.5" y="565" width="0.1" height="15.0" fill="rgb(250,23,40)" rx="2" ry="2" />
<text  x="1190.46" y="575.5" ></text>
</g>
<g >
<title>VM_Operation::evaluate() (63 samples, 0.12%)</title><rect x="1188.4" y="645" width="1.4" height="15.0" fill="rgb(254,0,23)" rx="2" ry="2" />
<text  x="1191.39" y="655.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmark (5 samples, 0.01%)</title><rect x="1132.1" y="677" width="0.2" height="15.0" fill="rgb(244,16,35)" rx="2" ry="2" />
<text  x="1135.15" y="687.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/SequentialMapReduceWordCountBenchmark.countWords (50,353 samples, 94.12%)</title><rect x="21.4" y="517" width="1110.6" height="15.0" fill="rgb(232,49,49)" rx="2" ry="2" />
<text  x="24.45" y="527.5" >pl/symentis/wordcount/SequentialMapReduceWordCountBenchmark.countWords</text>
</g>
<g >
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (63 samples, 0.12%)</title><rect x="1181.9" y="661" width="1.4" height="15.0" fill="rgb(213,204,30)" rx="2" ry="2" />
<text  x="1184.95" y="671.5" ></text>
</g>
<g >
<title>java/util/regex/CharPredicates.lambda$ctype$17 (230 samples, 0.43%)</title><rect x="576.7" y="325" width="5.0" height="15.0" fill="rgb(252,165,25)" rx="2" ry="2" />
<text  x="579.65" y="335.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountMapper.map (19 samples, 0.04%)</title><rect x="1131.6" y="453" width="0.4" height="15.0" fill="rgb(241,61,26)" rx="2" ry="2" />
<text  x="1134.55" y="463.5" ></text>
</g>
<g >
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWordImpl**, unsigned long) (10 samples, 0.02%)</title><rect x="259.0" y="453" width="0.2" height="15.0" fill="rgb(243,203,26)" rx="2" ry="2" />
<text  x="262.01" y="463.5" ></text>
</g>
<g >
<title>sem_post@@GLIBC_2.2.5 (6 samples, 0.01%)</title><rect x="1188.3" y="597" width="0.1" height="15.0" fill="rgb(215,34,46)" rx="2" ry="2" />
<text  x="1191.26" y="607.5" ></text>
</g>
<g >
<title>com/ibm/icu/util/ByteArrayWrapper.releaseBytes (60 samples, 0.11%)</title><rect x="804.8" y="389" width="1.4" height="15.0" fill="rgb(217,109,50)" rx="2" ry="2" />
<text  x="807.84" y="399.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (13 samples, 0.02%)</title><rect x="798.5" y="309" width="0.3" height="15.0" fill="rgb(247,11,2)" rx="2" ry="2" />
<text  x="801.49" y="319.5" ></text>
</g>
<g >
<title>getFD (5 samples, 0.01%)</title><rect x="97.6" y="229" width="0.1" height="15.0" fill="rgb(246,208,23)" rx="2" ry="2" />
<text  x="100.56" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (254 samples, 0.47%)</title><rect x="15.8" y="693" width="5.6" height="15.0" fill="rgb(252,128,32)" rx="2" ry="2" />
<text  x="18.82" y="703.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.01%)</title><rect x="1188.3" y="533" width="0.1" height="15.0" fill="rgb(210,61,30)" rx="2" ry="2" />
<text  x="1191.26" y="543.5" ></text>
</g>
<g >
<title>read_hpet.part.0 (14 samples, 0.03%)</title><rect x="16.4" y="629" width="0.3" height="15.0" fill="rgb(246,220,50)" rx="2" ry="2" />
<text  x="19.42" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (5 samples, 0.01%)</title><rect x="97.8" y="197" width="0.1" height="15.0" fill="rgb(236,16,9)" rx="2" ry="2" />
<text  x="100.78" y="207.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (8 samples, 0.01%)</title><rect x="15.2" y="741" width="0.2" height="15.0" fill="rgb(206,207,8)" rx="2" ry="2" />
<text  x="18.23" y="751.5" ></text>
</g>
<g >
<title>G1PrepareEvacuationTask::work(unsigned int) (29 samples, 0.05%)</title><rect x="1185.0" y="677" width="0.7" height="15.0" fill="rgb(239,157,26)" rx="2" ry="2" />
<text  x="1188.04" y="687.5" ></text>
</g>
<g >
<title>java/util/TreeMap.containsKey (178 samples, 0.33%)</title><rect x="1114.7" y="421" width="3.9" height="15.0" fill="rgb(216,27,49)" rx="2" ry="2" />
<text  x="1117.72" y="431.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.01%)</title><rect x="831.2" y="389" width="0.1" height="15.0" fill="rgb(247,191,35)" rx="2" ry="2" />
<text  x="834.15" y="399.5" ></text>
</g>
<g >
<title>java/util/HashMap$HashIterator.nextNode (132 samples, 0.25%)</title><rect x="21.8" y="469" width="2.9" height="15.0" fill="rgb(206,225,30)" rx="2" ry="2" />
<text  x="24.76" y="479.5" ></text>
</g>
<g >
<title>java/lang/String.hashCode (477 samples, 0.89%)</title><rect x="745.6" y="405" width="10.5" height="15.0" fill="rgb(207,44,44)" rx="2" ry="2" />
<text  x="748.62" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%)</title><rect x="1188.3" y="565" width="0.1" height="15.0" fill="rgb(251,221,22)" rx="2" ry="2" />
<text  x="1191.26" y="575.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/stopwords/ICUThreadLocalStopwords.contains (14,409 samples, 26.93%)</title><rect x="800.8" y="453" width="317.8" height="15.0" fill="rgb(239,182,13)" rx="2" ry="2" />
<text  x="803.85" y="463.5" >pl/symentis/wordcount/stopwords/ICUThreadL..</text>
</g>
<g >
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (5 samples, 0.01%)</title><rect x="1188.0" y="677" width="0.1" height="15.0" fill="rgb(242,1,52)" rx="2" ry="2" />
<text  x="1190.99" y="687.5" ></text>
</g>
<g >
<title>java/util/ArrayList.add (15 samples, 0.03%)</title><rect x="800.5" y="389" width="0.3" height="15.0" fill="rgb(245,104,43)" rx="2" ry="2" />
<text  x="803.52" y="399.5" ></text>
</g>
<g >
<title>java/lang/StringUTF16.compress (126 samples, 0.24%)</title><rect x="98.2" y="405" width="2.8" height="15.0" fill="rgb(207,182,49)" rx="2" ry="2" />
<text  x="101.24" y="415.5" ></text>
</g>
<g >
<title>G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (18 samples, 0.03%)</title><rect x="1183.7" y="661" width="0.4" height="15.0" fill="rgb(245,189,47)" rx="2" ry="2" />
<text  x="1186.67" y="671.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern.split (14,551 samples, 27.20%)</title><rect x="277.0" y="437" width="320.9" height="15.0" fill="rgb(228,83,12)" rx="2" ry="2" />
<text  x="280.01" y="447.5" >java/util/regex/Pattern.split</text>
</g>
<g >
<title>do_futex_wait.constprop.0 (10 samples, 0.02%)</title><rect x="10.7" y="709" width="0.2" height="15.0" fill="rgb(214,204,30)" rx="2" ry="2" />
<text  x="13.71" y="719.5" ></text>
</g>
<g >
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (104 samples, 0.19%)</title><rect x="95.6" y="325" width="2.3" height="15.0" fill="rgb(217,145,45)" rx="2" ry="2" />
<text  x="98.64" y="335.5" ></text>
</g>
<g >
<title>java/lang/reflect/Method.invoke (50,354 samples, 94.12%)</title><rect x="21.4" y="613" width="1110.6" height="15.0" fill="rgb(241,214,28)" rx="2" ry="2" />
<text  x="24.42" y="623.5" >java/lang/reflect/Method.invoke</text>
</g>
<g >
<title>java/io/BufferedReader.ensureOpen (5 samples, 0.01%)</title><rect x="38.1" y="437" width="0.2" height="15.0" fill="rgb(213,157,22)" rx="2" ry="2" />
<text  x="41.14" y="447.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationKeys$SortKeyLevel.appendWeight16 (16 samples, 0.03%)</title><rect x="968.2" y="357" width="0.4" height="15.0" fill="rgb(252,214,30)" rx="2" ry="2" />
<text  x="971.23" y="367.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (17 samples, 0.03%)</title><rect x="1140.4" y="613" width="0.4" height="15.0" fill="rgb(229,199,16)" rx="2" ry="2" />
<text  x="1143.42" y="623.5" ></text>
</g>
<g >
<title>java/lang/String.isLatin1 (13 samples, 0.02%)</title><rect x="952.4" y="309" width="0.2" height="15.0" fill="rgb(215,7,5)" rx="2" ry="2" />
<text  x="955.35" y="319.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmarksForked (5 samples, 0.01%)</title><rect x="1132.1" y="709" width="0.2" height="15.0" fill="rgb(210,49,21)" rx="2" ry="2" />
<text  x="1135.15" y="719.5" ></text>
</g>
<g >
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool, unsigned int) (5 samples, 0.01%)</title><rect x="1078.6" y="213" width="0.2" height="15.0" fill="rgb(244,166,35)" rx="2" ry="2" />
<text  x="1081.64" y="223.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (13 samples, 0.02%)</title><rect x="798.5" y="293" width="0.3" height="15.0" fill="rgb(230,215,30)" rx="2" ry="2" />
<text  x="801.49" y="303.5" ></text>
</g>
<g >
<title>G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&amp;, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*) (21 samples, 0.04%)</title><rect x="1188.9" y="581" width="0.4" height="15.0" fill="rgb(228,133,9)" rx="2" ry="2" />
<text  x="1191.88" y="591.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.end (24 samples, 0.04%)</title><rect x="303.9" y="421" width="0.5" height="15.0" fill="rgb(234,139,17)" rx="2" ry="2" />
<text  x="306.91" y="431.5" ></text>
</g>
<g >
<title>java/util/HashMap$KeyIterator.next (134 samples, 0.25%)</title><rect x="21.7" y="485" width="3.0" height="15.0" fill="rgb(205,61,17)" rx="2" ry="2" />
<text  x="24.71" y="495.5" ></text>
</g>
<g >
<title>G1CollectedHeap::pre_evacuate_collection_set(G1EvacuationInfo&amp;, G1ParScanThreadStateSet*) (7 samples, 0.01%)</title><rect x="1189.3" y="581" width="0.2" height="15.0" fill="rgb(248,168,40)" rx="2" ry="2" />
<text  x="1192.34" y="591.5" ></text>
</g>
<g >
<title>wake_up_q (6 samples, 0.01%)</title><rect x="11.0" y="629" width="0.1" height="15.0" fill="rgb(209,183,18)" rx="2" ry="2" />
<text  x="14.01" y="639.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationIterator.clearCEs (17 samples, 0.03%)</title><rect x="901.4" y="341" width="0.3" height="15.0" fill="rgb(247,221,47)" rx="2" ry="2" />
<text  x="904.36" y="351.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationIterator.clearCEsIfNoneRemaining (293 samples, 0.55%)</title><rect x="895.3" y="357" width="6.4" height="15.0" fill="rgb(206,68,51)" rx="2" ry="2" />
<text  x="898.27" y="367.5" ></text>
</g>
<g >
<title>HeapRegionClaimer::claim_region(unsigned int) (9 samples, 0.02%)</title><rect x="1184.8" y="645" width="0.1" height="15.0" fill="rgb(225,136,26)" rx="2" ry="2" />
<text  x="1187.75" y="655.5" ></text>
</g>
<g >
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (38 samples, 0.07%)</title><rect x="1182.5" y="645" width="0.8" height="15.0" fill="rgb(213,109,27)" rx="2" ry="2" />
<text  x="1185.50" y="655.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationIterator.nextCE (2,719 samples, 5.08%)</title><rect x="901.7" y="357" width="60.0" height="15.0" fill="rgb(238,116,43)" rx="2" ry="2" />
<text  x="904.73" y="367.5" >com/ib..</text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.01%)</title><rect x="1189.9" y="645" width="0.1" height="15.0" fill="rgb(209,189,25)" rx="2" ry="2" />
<text  x="1192.87" y="655.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationIterator.reset (21 samples, 0.04%)</title><rect x="1114.2" y="357" width="0.5" height="15.0" fill="rgb(249,93,33)" rx="2" ry="2" />
<text  x="1117.24" y="367.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$LastNode.match (182 samples, 0.34%)</title><rect x="584.3" y="341" width="4.0" height="15.0" fill="rgb(233,32,28)" rx="2" ry="2" />
<text  x="587.33" y="351.5" ></text>
</g>
<g >
<title>do_futex_wait.constprop.0 (12 samples, 0.02%)</title><rect x="11.1" y="725" width="0.3" height="15.0" fill="rgb(233,205,40)" rx="2" ry="2" />
<text  x="14.15" y="735.5" ></text>
</g>
<g >
<title>VMThread::run() (74 samples, 0.14%)</title><rect x="1188.1" y="693" width="1.7" height="15.0" fill="rgb(219,219,7)" rx="2" ry="2" />
<text  x="1191.15" y="703.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOf (23 samples, 0.04%)</title><rect x="798.3" y="325" width="0.5" height="15.0" fill="rgb(239,72,4)" rx="2" ry="2" />
<text  x="801.27" y="335.5" ></text>
</g>
<g >
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (8 samples, 0.01%)</title><rect x="1183.1" y="581" width="0.2" height="15.0" fill="rgb(218,84,28)" rx="2" ry="2" />
<text  x="1186.10" y="591.5" ></text>
</g>
<g >
<title>void objArrayOopDesc::oop_iterate_range&lt;G1ScanEvacuatedObjClosure&gt;(G1ScanEvacuatedObjClosure*, int, int) (97 samples, 0.18%)</title><rect x="1179.7" y="629" width="2.2" height="15.0" fill="rgb(216,171,39)" rx="2" ry="2" />
<text  x="1182.74" y="639.5" ></text>
</g>
<g >
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (24 samples, 0.04%)</title><rect x="1187.4" y="629" width="0.6" height="15.0" fill="rgb(225,133,15)" rx="2" ry="2" />
<text  x="1190.44" y="639.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/SequentialMapReduce.lambda$run$0 (69 samples, 0.13%)</title><rect x="1127.5" y="437" width="1.5" height="15.0" fill="rgb(208,58,38)" rx="2" ry="2" />
<text  x="1130.45" y="447.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$LastNode.match (61 samples, 0.11%)</title><rect x="583.0" y="325" width="1.3" height="15.0" fill="rgb(220,216,40)" rx="2" ry="2" />
<text  x="585.98" y="335.5" ></text>
</g>
<g >
<title>jdk/internal/util/ArraysSupport.newLength (5 samples, 0.01%)</title><rect x="302.7" y="357" width="0.2" height="15.0" fill="rgb(214,48,40)" rx="2" ry="2" />
<text  x="305.74" y="367.5" ></text>
</g>
<g >
<title>HeapRegionClaimer::claim_region(unsigned int) (5 samples, 0.01%)</title><rect x="1184.5" y="645" width="0.1" height="15.0" fill="rgb(227,179,33)" rx="2" ry="2" />
<text  x="1187.51" y="655.5" ></text>
</g>
<g >
<title>java/lang/Thread.run (50,355 samples, 94.12%)</title><rect x="21.4" y="741" width="1110.6" height="15.0" fill="rgb(208,37,9)" rx="2" ry="2" />
<text  x="24.42" y="751.5" >java/lang/Thread.run</text>
</g>
<g >
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (28 samples, 0.05%)</title><rect x="1078.4" y="325" width="0.6" height="15.0" fill="rgb(238,21,33)" rx="2" ry="2" />
<text  x="1081.35" y="335.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.01%)</title><rect x="10.6" y="709" width="0.1" height="15.0" fill="rgb(243,228,6)" rx="2" ry="2" />
<text  x="13.57" y="719.5" ></text>
</g>
<g >
<title>java/util/ArrayList.get (28 samples, 0.05%)</title><rect x="302.9" y="421" width="0.6" height="15.0" fill="rgb(222,107,54)" rx="2" ry="2" />
<text  x="305.86" y="431.5" ></text>
</g>
<g >
<title>Compile::Code_Gen() (20 samples, 0.04%)</title><rect x="1186.6" y="613" width="0.4" height="15.0" fill="rgb(213,218,5)" rx="2" ry="2" />
<text  x="1189.58" y="623.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (14 samples, 0.03%)</title><rect x="1017.3" y="293" width="0.3" height="15.0" fill="rgb(253,123,17)" rx="2" ry="2" />
<text  x="1020.26" y="303.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.reset (238 samples, 0.44%)</title><rect x="592.7" y="389" width="5.2" height="15.0" fill="rgb(228,74,22)" rx="2" ry="2" />
<text  x="595.69" y="399.5" ></text>
</g>
<g >
<title>java/util/regex/ASCII.isSpace (295 samples, 0.55%)</title><rect x="555.7" y="309" width="6.5" height="15.0" fill="rgb(250,29,31)" rx="2" ry="2" />
<text  x="558.72" y="319.5" ></text>
</g>
<g >
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (5 samples, 0.01%)</title><rect x="1182.7" y="581" width="0.1" height="15.0" fill="rgb(230,126,10)" rx="2" ry="2" />
<text  x="1185.70" y="591.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (528 samples, 0.99%)</title><rect x="599.0" y="453" width="11.6" height="15.0" fill="rgb(228,125,3)" rx="2" ry="2" />
<text  x="601.97" y="463.5" ></text>
</g>
<g >
<title>PhaseChaitin::Register_Allocate() (12 samples, 0.02%)</title><rect x="1186.7" y="597" width="0.3" height="15.0" fill="rgb(249,25,20)" rx="2" ry="2" />
<text  x="1189.69" y="607.5" ></text>
</g>
<g >
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (24 samples, 0.04%)</title><rect x="1187.4" y="645" width="0.6" height="15.0" fill="rgb(209,23,6)" rx="2" ry="2" />
<text  x="1190.44" y="655.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (5 samples, 0.01%)</title><rect x="831.4" y="357" width="0.1" height="15.0" fill="rgb(249,16,11)" rx="2" ry="2" />
<text  x="834.35" y="367.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (224 samples, 0.42%)</title><rect x="16.2" y="661" width="4.9" height="15.0" fill="rgb(224,143,0)" rx="2" ry="2" />
<text  x="19.20" y="671.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$BmpCharProperty.match (8,825 samples, 16.50%)</title><rect x="393.7" y="357" width="194.6" height="15.0" fill="rgb(205,223,6)" rx="2" ry="2" />
<text  x="396.70" y="367.5" >java/util/regex/Pattern$B..</text>
</g>
<g >
<title>java/util/ArrayList.grow (15 samples, 0.03%)</title><rect x="800.5" y="357" width="0.3" height="15.0" fill="rgb(236,84,54)" rx="2" ry="2" />
<text  x="803.52" y="367.5" ></text>
</g>
<g >
<title>copy_user_generic_string (6 samples, 0.01%)</title><rect x="21.2" y="645" width="0.1" height="15.0" fill="rgb(219,59,27)" rx="2" ry="2" />
<text  x="24.18" y="655.5" ></text>
</g>
<g >
<title>G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*) (14 samples, 0.03%)</title><rect x="1188.6" y="581" width="0.3" height="15.0" fill="rgb(218,62,45)" rx="2" ry="2" />
<text  x="1191.57" y="591.5" ></text>
</g>
<g >
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int, bool) (7 samples, 0.01%)</title><rect x="1189.3" y="533" width="0.2" height="15.0" fill="rgb(238,131,53)" rx="2" ry="2" />
<text  x="1192.34" y="543.5" ></text>
</g>
<g >
<title>sun/nio/cs/UTF_8$Decoder.decodeArrayLoop (251 samples, 0.47%)</title><rect x="38.4" y="341" width="5.6" height="15.0" fill="rgb(226,119,8)" rx="2" ry="2" />
<text  x="41.43" y="351.5" ></text>
</g>
<g >
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (63 samples, 0.12%)</title><rect x="1186.6" y="661" width="1.4" height="15.0" fill="rgb(247,182,48)" rx="2" ry="2" />
<text  x="1189.58" y="671.5" ></text>
</g>
<g >
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (50,354 samples, 94.12%)</title><rect x="21.4" y="581" width="1110.6" height="15.0" fill="rgb(226,134,26)" rx="2" ry="2" />
<text  x="24.42" y="591.5" >jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="1189.8" y="661" width="0.2" height="15.0" fill="rgb(234,62,54)" rx="2" ry="2" />
<text  x="1192.85" y="671.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/UTF16CollationIterator.setText (939 samples, 1.76%)</title><rect x="1094.0" y="373" width="20.7" height="15.0" fill="rgb(222,106,8)" rx="2" ry="2" />
<text  x="1097.01" y="383.5" ></text>
</g>
<g >
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (8 samples, 0.01%)</title><rect x="831.2" y="325" width="0.1" height="15.0" fill="rgb(252,28,33)" rx="2" ry="2" />
<text  x="834.15" y="335.5" ></text>
</g>
<g >
<title>jbyte_arraycopy (12 samples, 0.02%)</title><rect x="958.1" y="341" width="0.3" height="15.0" fill="rgb(211,44,47)" rx="2" ry="2" />
<text  x="961.13" y="351.5" ></text>
</g>
<g >
<title>java/util/HashMap$Node.&lt;init&gt; (5 samples, 0.01%)</title><rect x="1129.7" y="389" width="0.1" height="15.0" fill="rgb(235,206,47)" rx="2" ry="2" />
<text  x="1132.72" y="399.5" ></text>
</g>
<g >
<title>ConcurrentGCThread::run() (8 samples, 0.01%)</title><rect x="1132.3" y="693" width="0.1" height="15.0" fill="rgb(230,24,8)" rx="2" ry="2" />
<text  x="1135.26" y="703.5" ></text>
</g>
<g >
<title>java/util/ArrayList.&lt;init&gt; (54 samples, 0.10%)</title><rect x="297.3" y="421" width="1.2" height="15.0" fill="rgb(215,178,50)" rx="2" ry="2" />
<text  x="300.32" y="431.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern.matcher (435 samples, 0.81%)</title><rect x="588.3" y="421" width="9.6" height="15.0" fill="rgb(236,220,36)" rx="2" ry="2" />
<text  x="591.34" y="431.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.canEncode (9 samples, 0.02%)</title><rect x="274.4" y="405" width="0.2" height="15.0" fill="rgb(237,103,41)" rx="2" ry="2" />
<text  x="277.36" y="415.5" ></text>
</g>
<g >
<title>com/ibm/icu/text/RuleBasedCollator.getCollationKey (60 samples, 0.11%)</title><rect x="264.1" y="453" width="1.4" height="15.0" fill="rgb(244,132,9)" rx="2" ry="2" />
<text  x="267.15" y="463.5" ></text>
</g>
<g >
<title>apparmor_file_permission (6 samples, 0.01%)</title><rect x="97.3" y="101" width="0.1" height="15.0" fill="rgb(250,124,42)" rx="2" ry="2" />
<text  x="100.25" y="111.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.01%)</title><rect x="11.7" y="645" width="0.2" height="15.0" fill="rgb(250,216,49)" rx="2" ry="2" />
<text  x="14.74" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.01%)</title><rect x="10.8" y="677" width="0.1" height="15.0" fill="rgb(238,189,1)" rx="2" ry="2" />
<text  x="13.77" y="687.5" ></text>
</g>
<g >
<title>java/util/concurrent/FutureTask.run (50,354 samples, 94.12%)</title><rect x="21.4" y="693" width="1110.6" height="15.0" fill="rgb(228,3,19)" rx="2" ry="2" />
<text  x="24.42" y="703.5" >java/util/concurrent/FutureTask.run</text>
</g>
<g >
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (10 samples, 0.02%)</title><rect x="1078.6" y="245" width="0.3" height="15.0" fill="rgb(246,23,7)" rx="2" ry="2" />
<text  x="1081.64" y="255.5" ></text>
</g>
<g >
<title>java/util/HashMap.putVal (106 samples, 0.20%)</title><rect x="1129.2" y="421" width="2.4" height="15.0" fill="rgb(226,70,54)" rx="2" ry="2" />
<text  x="1132.21" y="431.5" ></text>
</g>
<g >
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (7 samples, 0.01%)</title><rect x="1017.4" y="277" width="0.1" height="15.0" fill="rgb(237,171,13)" rx="2" ry="2" />
<text  x="1020.37" y="287.5" ></text>
</g>
<g >
<title>do_futex (7 samples, 0.01%)</title><rect x="15.2" y="677" width="0.2" height="15.0" fill="rgb(250,149,47)" rx="2" ry="2" />
<text  x="18.25" y="687.5" ></text>
</g>
<g >
<title>java/util/ArrayList.add (194 samples, 0.36%)</title><rect x="298.6" y="405" width="4.3" height="15.0" fill="rgb(241,206,12)" rx="2" ry="2" />
<text  x="301.58" y="415.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (9 samples, 0.02%)</title><rect x="802.7" y="405" width="0.2" height="15.0" fill="rgb(241,112,32)" rx="2" ry="2" />
<text  x="805.70" y="415.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (50,354 samples, 94.12%)</title><rect x="21.4" y="629" width="1110.6" height="15.0" fill="rgb(207,123,45)" rx="2" ry="2" />
<text  x="24.42" y="639.5" >org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call</text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationIterator.nextCEFromCE32 (20 samples, 0.04%)</title><rect x="908.3" y="341" width="0.5" height="15.0" fill="rgb(238,196,42)" rx="2" ry="2" />
<text  x="911.35" y="351.5" ></text>
</g>
<g >
<title>java/util/HashMap.getNode (27 samples, 0.05%)</title><rect x="1128.4" y="389" width="0.6" height="15.0" fill="rgb(206,102,44)" rx="2" ry="2" />
<text  x="1131.38" y="399.5" ></text>
</g>
<g >
<title>inflate (102 samples, 0.19%)</title><rect x="93.1" y="277" width="2.3" height="15.0" fill="rgb(248,222,38)" rx="2" ry="2" />
<text  x="96.15" y="287.5" ></text>
</g>
<g >
<title>all (53,501 samples, 100%)</title><rect x="10.0" y="757" width="1180.0" height="15.0" fill="rgb(213,177,49)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (6 samples, 0.01%)</title><rect x="1187.5" y="549" width="0.1" height="15.0" fill="rgb(238,121,10)" rx="2" ry="2" />
<text  x="1190.46" y="559.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (43 samples, 0.08%)</title><rect x="96.3" y="85" width="0.9" height="15.0" fill="rgb(234,63,1)" rx="2" ry="2" />
<text  x="99.26" y="95.5" ></text>
</g>
<g >
<title>java/util/AbstractList.&lt;init&gt; (44 samples, 0.08%)</title><rect x="297.5" y="405" width="1.0" height="15.0" fill="rgb(249,53,1)" rx="2" ry="2" />
<text  x="300.54" y="415.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.01%)</title><rect x="831.3" y="389" width="0.2" height="15.0" fill="rgb(244,106,36)" rx="2" ry="2" />
<text  x="834.33" y="399.5" ></text>
</g>
<g >
<title>java/lang/String.toLowerCase (386 samples, 0.72%)</title><rect x="266.0" y="437" width="8.6" height="15.0" fill="rgb(211,121,53)" rx="2" ry="2" />
<text  x="269.04" y="447.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::optimize(PhaseIterGVN&amp;, LoopOptsMode) (10 samples, 0.02%)</title><rect x="1187.1" y="597" width="0.2" height="15.0" fill="rgb(241,8,2)" rx="2" ry="2" />
<text  x="1190.07" y="607.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.01%)</title><rect x="1178.7" y="613" width="0.1" height="15.0" fill="rgb(245,227,18)" rx="2" ry="2" />
<text  x="1181.71" y="623.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationKeys.getSortKeyLevel (5,231 samples, 9.78%)</title><rect x="968.6" y="357" width="115.4" height="15.0" fill="rgb(239,130,35)" rx="2" ry="2" />
<text  x="971.58" y="367.5" >com/ibm/icu/im..</text>
</g>
<g >
<title>[unknown] (64 samples, 0.12%)</title><rect x="10.5" y="741" width="1.4" height="15.0" fill="rgb(212,191,29)" rx="2" ry="2" />
<text  x="13.51" y="751.5" ></text>
</g>
<g >
<title>java/lang/Class.getResourceAsStream (9 samples, 0.02%)</title><rect x="21.4" y="501" width="0.2" height="15.0" fill="rgb(232,75,27)" rx="2" ry="2" />
<text  x="24.45" y="511.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (193 samples, 0.36%)</title><rect x="1085.1" y="341" width="4.3" height="15.0" fill="rgb(247,54,31)" rx="2" ry="2" />
<text  x="1088.10" y="351.5" ></text>
</g>
<g >
<title>ksys_read (57 samples, 0.11%)</title><rect x="96.1" y="165" width="1.3" height="15.0" fill="rgb(235,22,7)" rx="2" ry="2" />
<text  x="99.15" y="175.5" ></text>
</g>
<g >
<title>WorkGang::run_task(AbstractGangTask*) (6 samples, 0.01%)</title><rect x="1188.3" y="629" width="0.1" height="15.0" fill="rgb(248,117,30)" rx="2" ry="2" />
<text  x="1191.26" y="639.5" ></text>
</g>
<g >
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (12 samples, 0.02%)</title><rect x="1078.6" y="261" width="0.3" height="15.0" fill="rgb(212,16,43)" rx="2" ry="2" />
<text  x="1081.64" y="271.5" ></text>
</g>
<g >
<title>sun/nio/cs/UTF_8$Decoder.decodeLoop (251 samples, 0.47%)</title><rect x="38.4" y="357" width="5.6" height="15.0" fill="rgb(207,61,54)" rx="2" ry="2" />
<text  x="41.43" y="367.5" ></text>
</g>
<g >
<title>G1CollectedHeap::free_collection_set(G1CollectionSet*, G1EvacuationInfo&amp;, unsigned long const*) (5 samples, 0.01%)</title><rect x="1188.9" y="565" width="0.1" height="15.0" fill="rgb(233,121,2)" rx="2" ry="2" />
<text  x="1191.92" y="575.5" ></text>
</g>
<g >
<title>Compilation::emit_code_body() (5 samples, 0.01%)</title><rect x="1187.6" y="581" width="0.1" height="15.0" fill="rgb(209,87,17)" rx="2" ry="2" />
<text  x="1190.60" y="591.5" ></text>
</g>
<g >
<title>Compilation::compile_java_method() (21 samples, 0.04%)</title><rect x="1187.4" y="597" width="0.5" height="15.0" fill="rgb(240,57,45)" rx="2" ry="2" />
<text  x="1190.44" y="607.5" ></text>
</g>
<g >
<title>java/lang/String.&lt;init&gt; (144 samples, 0.27%)</title><rect x="97.9" y="437" width="3.2" height="15.0" fill="rgb(244,76,35)" rx="2" ry="2" />
<text  x="100.94" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (236 samples, 0.44%)</title><rect x="16.1" y="677" width="5.2" height="15.0" fill="rgb(238,142,41)" rx="2" ry="2" />
<text  x="19.13" y="687.5" ></text>
</g>
<g >
<title>java/util/zip/ZipFile$Source.readAt (97 samples, 0.18%)</title><rect x="95.8" y="293" width="2.1" height="15.0" fill="rgb(238,191,27)" rx="2" ry="2" />
<text  x="98.75" y="303.5" ></text>
</g>
<g >
<title>sun/net/www/protocol/jar/JarURLConnection.getInputStream (5 samples, 0.01%)</title><rect x="21.5" y="453" width="0.1" height="15.0" fill="rgb(222,52,33)" rx="2" ry="2" />
<text  x="24.54" y="463.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (6 samples, 0.01%)</title><rect x="1187.5" y="501" width="0.1" height="15.0" fill="rgb(214,55,41)" rx="2" ry="2" />
<text  x="1190.46" y="511.5" ></text>
</g>
<g >
<title>futex_wake (7 samples, 0.01%)</title><rect x="15.2" y="661" width="0.2" height="15.0" fill="rgb(218,135,16)" rx="2" ry="2" />
<text  x="18.25" y="671.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput$$Lambda$52.0x0000000800bd68b8.apply (1,790 samples, 3.35%)</title><rect x="761.0" y="421" width="39.5" height="15.0" fill="rgb(210,116,41)" rx="2" ry="2" />
<text  x="764.04" y="431.5" >pl/..</text>
</g>
<g >
<title>G1ParScanThreadStateSet::state_for_worker(unsigned int) (11 samples, 0.02%)</title><rect x="1183.4" y="661" width="0.3" height="15.0" fill="rgb(254,219,32)" rx="2" ry="2" />
<text  x="1186.43" y="671.5" ></text>
</g>
<g >
<title>rw_verify_area (8 samples, 0.01%)</title><rect x="97.2" y="133" width="0.2" height="15.0" fill="rgb(254,175,10)" rx="2" ry="2" />
<text  x="100.21" y="143.5" ></text>
</g>
<g >
<title>G1ParEvacuateFollowersClosure::do_void() (2,235 samples, 4.18%)</title><rect x="1132.6" y="645" width="49.3" height="15.0" fill="rgb(246,48,40)" rx="2" ry="2" />
<text  x="1135.59" y="655.5" >G1Pa..</text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (109 samples, 0.20%)</title><rect x="1158.9" y="613" width="2.4" height="15.0" fill="rgb(252,103,20)" rx="2" ry="2" />
<text  x="1161.92" y="623.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.01%)</title><rect x="831.4" y="373" width="0.1" height="15.0" fill="rgb(212,185,50)" rx="2" ry="2" />
<text  x="834.35" y="383.5" ></text>
</g>
<g >
<title>java/lang/String.isLatin1 (21 samples, 0.04%)</title><rect x="537.2" y="325" width="0.5" height="15.0" fill="rgb(220,102,15)" rx="2" ry="2" />
<text  x="540.20" y="335.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (2,618 samples, 4.89%)</title><rect x="1132.3" y="725" width="57.7" height="15.0" fill="rgb(240,34,21)" rx="2" ry="2" />
<text  x="1135.26" y="735.5" >thread..</text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="1189.4" y="469" width="0.1" height="15.0" fill="rgb(213,39,27)" rx="2" ry="2" />
<text  x="1192.36" y="479.5" ></text>
</g>
<g >
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (2,335 samples, 4.36%)</title><rect x="1132.6" y="677" width="51.5" height="15.0" fill="rgb(221,63,36)" rx="2" ry="2" />
<text  x="1135.57" y="687.5" >G1Eva..</text>
</g>
<g >
<title>com/ibm/icu/text/RuleBasedCollator.simpleKeyLengthEstimate (33 samples, 0.06%)</title><rect x="831.8" y="389" width="0.7" height="15.0" fill="rgb(207,80,52)" rx="2" ry="2" />
<text  x="834.79" y="399.5" ></text>
</g>
<g >
<title>java/util/TreeSet.contains (178 samples, 0.33%)</title><rect x="1114.7" y="437" width="3.9" height="15.0" fill="rgb(234,106,6)" rx="2" ry="2" />
<text  x="1117.72" y="447.5" ></text>
</g>
<g >
<title>G1FromCardCache::clear(unsigned int) (5 samples, 0.01%)</title><rect x="1184.3" y="597" width="0.1" height="15.0" fill="rgb(233,136,53)" rx="2" ry="2" />
<text  x="1187.33" y="607.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.01%)</title><rect x="831.4" y="341" width="0.1" height="15.0" fill="rgb(226,139,27)" rx="2" ry="2" />
<text  x="834.35" y="351.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (244 samples, 0.46%)</title><rect x="1171.2" y="597" width="5.4" height="15.0" fill="rgb(210,63,3)" rx="2" ry="2" />
<text  x="1174.19" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (57 samples, 0.11%)</title><rect x="96.1" y="213" width="1.3" height="15.0" fill="rgb(229,127,8)" rx="2" ry="2" />
<text  x="99.15" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="11.7" y="709" width="0.2" height="15.0" fill="rgb(209,45,8)" rx="2" ry="2" />
<text  x="14.70" y="719.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11 (300 samples, 0.56%)</title><rect x="86.5" y="277" width="6.6" height="15.0" fill="rgb(218,209,31)" rx="2" ry="2" />
<text  x="89.53" y="287.5" ></text>
</g>
<g >
<title>[unknown_Java] (136 samples, 0.25%)</title><rect x="11.9" y="741" width="3.0" height="15.0" fill="rgb(212,184,38)" rx="2" ry="2" />
<text  x="14.92" y="751.5" ></text>
</g>
<g >
<title>__tls_get_addr (6 samples, 0.01%)</title><rect x="1186.2" y="677" width="0.1" height="15.0" fill="rgb(252,153,54)" rx="2" ry="2" />
<text  x="1189.18" y="687.5" ></text>
</g>
<g >
<title>java/util/HashMap.newNode (6 samples, 0.01%)</title><rect x="1129.7" y="405" width="0.1" height="15.0" fill="rgb(242,224,43)" rx="2" ry="2" />
<text  x="1132.70" y="415.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (150 samples, 0.28%)</title><rect x="958.4" y="341" width="3.3" height="15.0" fill="rgb(222,64,35)" rx="2" ry="2" />
<text  x="961.39" y="351.5" ></text>
</g>
<g >
<title>vfs_read (57 samples, 0.11%)</title><rect x="96.1" y="149" width="1.3" height="15.0" fill="rgb(251,106,9)" rx="2" ry="2" />
<text  x="99.15" y="159.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 0.01%)</title><rect x="1187.5" y="421" width="0.1" height="15.0" fill="rgb(250,77,3)" rx="2" ry="2" />
<text  x="1190.46" y="431.5" ></text>
</g>
<g >
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (7 samples, 0.01%)</title><rect x="831.2" y="309" width="0.1" height="15.0" fill="rgb(252,125,54)" rx="2" ry="2" />
<text  x="834.18" y="319.5" ></text>
</g>
<g >
<title>VM_G1CollectForAllocation::doit() (63 samples, 0.12%)</title><rect x="1188.4" y="629" width="1.4" height="15.0" fill="rgb(238,41,24)" rx="2" ry="2" />
<text  x="1191.39" y="639.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (12 samples, 0.02%)</title><rect x="798.5" y="261" width="0.3" height="15.0" fill="rgb(217,84,32)" rx="2" ry="2" />
<text  x="801.49" y="271.5" ></text>
</g>
<g >
<title>xas_load (8 samples, 0.01%)</title><rect x="97.0" y="37" width="0.2" height="15.0" fill="rgb(252,80,11)" rx="2" ry="2" />
<text  x="99.99" y="47.5" ></text>
</g>
<g >
<title>LinearScan::do_linear_scan() (7 samples, 0.01%)</title><rect x="1187.7" y="565" width="0.2" height="15.0" fill="rgb(209,162,43)" rx="2" ry="2" />
<text  x="1190.73" y="575.5" ></text>
</g>
<g >
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (5 samples, 0.01%)</title><rect x="1078.6" y="229" width="0.2" height="15.0" fill="rgb(224,24,7)" rx="2" ry="2" />
<text  x="1081.64" y="239.5" ></text>
</g>
<g >
<title>[unknown] (402 samples, 0.75%)</title><rect x="86.5" y="293" width="8.9" height="15.0" fill="rgb(241,82,6)" rx="2" ry="2" />
<text  x="89.53" y="303.5" ></text>
</g>
<g >
<title>java/nio/charset/CharsetDecoder.decode (251 samples, 0.47%)</title><rect x="38.4" y="373" width="5.6" height="15.0" fill="rgb(206,209,6)" rx="2" ry="2" />
<text  x="41.43" y="383.5" ></text>
</g>
<g >
<title>com/ibm/icu/text/RuleBasedCollator.writeSortKey (12,795 samples, 23.92%)</title><rect x="832.5" y="389" width="282.2" height="15.0" fill="rgb(227,196,10)" rx="2" ry="2" />
<text  x="835.52" y="399.5" >com/ibm/icu/text/RuleBasedCollator.wr..</text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationKeys$SortKeyLevel.&lt;init&gt; (3,006 samples, 5.62%)</title><rect x="1017.7" y="341" width="66.3" height="15.0" fill="rgb(210,82,3)" rx="2" ry="2" />
<text  x="1020.66" y="351.5" >com/ibm..</text>
</g>
<g >
<title>java/util/regex/CharPredicates.lambda$ASCII_SPACE$20 (295 samples, 0.55%)</title><rect x="555.7" y="325" width="6.5" height="15.0" fill="rgb(206,24,21)" rx="2" ry="2" />
<text  x="558.72" y="335.5" ></text>
</g>
<g >
<title>java/nio/CharBuffer.&lt;init&gt; (7 samples, 0.01%)</title><rect x="38.3" y="341" width="0.1" height="15.0" fill="rgb(207,6,43)" rx="2" ry="2" />
<text  x="41.28" y="351.5" ></text>
</g>
<g >
<title>com/ibm/icu/text/RuleBasedCollator.getRawCollationKey (13,990 samples, 26.15%)</title><rect x="806.2" y="405" width="308.5" height="15.0" fill="rgb(210,189,6)" rx="2" ry="2" />
<text  x="809.17" y="415.5" >com/ibm/icu/text/RuleBasedCollator.getRaw..</text>
</g>
<g >
<title>read_hpet (200 samples, 0.37%)</title><rect x="16.7" y="629" width="4.4" height="15.0" fill="rgb(220,125,12)" rx="2" ry="2" />
<text  x="19.73" y="639.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.01%)</title><rect x="297.1" y="357" width="0.2" height="15.0" fill="rgb(209,167,53)" rx="2" ry="2" />
<text  x="300.14" y="367.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.find (12,872 samples, 24.06%)</title><rect x="304.4" y="421" width="283.9" height="15.0" fill="rgb(233,210,8)" rx="2" ry="2" />
<text  x="307.44" y="431.5" >java/util/regex/Matcher.find</text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.append (11 samples, 0.02%)</title><rect x="101.2" y="421" width="0.2" height="15.0" fill="rgb(216,217,16)" rx="2" ry="2" />
<text  x="104.16" y="431.5" ></text>
</g>
<g >
<title>java/io/FilterInputStream.read (2,447 samples, 4.57%)</title><rect x="44.0" y="357" width="53.9" height="15.0" fill="rgb(216,56,33)" rx="2" ry="2" />
<text  x="46.97" y="367.5" >java/..</text>
</g>
<g >
<title>futex_wake (5 samples, 0.01%)</title><rect x="1188.3" y="517" width="0.1" height="15.0" fill="rgb(251,38,46)" rx="2" ry="2" />
<text  x="1191.26" y="527.5" ></text>
</g>
<g >
<title>java/lang/Long.valueOf (15 samples, 0.03%)</title><rect x="1126.8" y="453" width="0.3" height="15.0" fill="rgb(232,5,49)" rx="2" ry="2" />
<text  x="1129.79" y="463.5" ></text>
</g>
<g >
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (7 samples, 0.01%)</title><rect x="1017.4" y="261" width="0.1" height="15.0" fill="rgb(237,85,46)" rx="2" ry="2" />
<text  x="1020.37" y="271.5" ></text>
</g>
<g >
<title>java/util/ArrayList$Itr.hasNext (6 samples, 0.01%)</title><rect x="1127.1" y="453" width="0.2" height="15.0" fill="rgb(251,174,12)" rx="2" ry="2" />
<text  x="1130.12" y="463.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountReducer.reduce (604 samples, 1.13%)</title><rect x="1118.6" y="469" width="13.4" height="15.0" fill="rgb(237,162,8)" rx="2" ry="2" />
<text  x="1121.65" y="479.5" ></text>
</g>
<g >
<title>java/util/ArrayList.grow (15 samples, 0.03%)</title><rect x="800.5" y="373" width="0.3" height="15.0" fill="rgb(250,34,38)" rx="2" ry="2" />
<text  x="803.52" y="383.5" ></text>
</g>
<g >
<title>GraphBuilder::invoke(Bytecodes::Code) (6 samples, 0.01%)</title><rect x="1187.5" y="485" width="0.1" height="15.0" fill="rgb(243,79,33)" rx="2" ry="2" />
<text  x="1190.46" y="495.5" ></text>
</g>
<g >
<title>G1FreeCollectionSetTask::FreeCSetClosure::do_heap_region(HeapRegion*) (17 samples, 0.03%)</title><rect x="1184.1" y="645" width="0.4" height="15.0" fill="rgb(245,18,46)" rx="2" ry="2" />
<text  x="1187.11" y="655.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOf (17 samples, 0.03%)</title><rect x="302.4" y="357" width="0.3" height="15.0" fill="rgb(215,209,34)" rx="2" ry="2" />
<text  x="305.37" y="367.5" ></text>
</g>
<g >
<title>SafepointSynchronize::begin() (8 samples, 0.01%)</title><rect x="1188.2" y="661" width="0.2" height="15.0" fill="rgb(222,185,52)" rx="2" ry="2" />
<text  x="1191.21" y="671.5" ></text>
</g>
<g >
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (2,239 samples, 4.18%)</title><rect x="1132.6" y="661" width="49.3" height="15.0" fill="rgb(242,6,17)" rx="2" ry="2" />
<text  x="1135.57" y="671.5" >G1Ev..</text>
</g>
<g >
<title>__libc_lseek (10 samples, 0.02%)</title><rect x="97.7" y="245" width="0.2" height="15.0" fill="rgb(205,81,52)" rx="2" ry="2" />
<text  x="100.67" y="255.5" ></text>
</g>
<g >
<title>java/util/HashMap.put (109 samples, 0.20%)</title><rect x="1129.1" y="437" width="2.5" height="15.0" fill="rgb(215,160,12)" rx="2" ry="2" />
<text  x="1132.15" y="447.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (96 samples, 0.18%)</title><rect x="1176.6" y="597" width="2.1" height="15.0" fill="rgb(227,182,49)" rx="2" ry="2" />
<text  x="1179.57" y="607.5" ></text>
</g>
<g >
<title>VMThread::loop() (73 samples, 0.14%)</title><rect x="1188.2" y="677" width="1.6" height="15.0" fill="rgb(218,51,47)" rx="2" ry="2" />
<text  x="1191.17" y="687.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.01%)</title><rect x="10.6" y="725" width="0.1" height="15.0" fill="rgb(205,126,45)" rx="2" ry="2" />
<text  x="13.55" y="735.5" ></text>
</g>
<g >
<title>java/io/InputStreamReader.read (2,705 samples, 5.06%)</title><rect x="38.3" y="421" width="59.6" height="15.0" fill="rgb(221,56,7)" rx="2" ry="2" />
<text  x="41.28" y="431.5" >java/i..</text>
</g>
<g >
<title>java/util/concurrent/FutureTask.run (50,354 samples, 94.12%)</title><rect x="21.4" y="661" width="1110.6" height="15.0" fill="rgb(222,122,29)" rx="2" ry="2" />
<text  x="24.42" y="671.5" >java/util/concurrent/FutureTask.run</text>
</g>
<g >
<title>java/util/ArrayList.add (431 samples, 0.81%)</title><rect x="791.0" y="373" width="9.5" height="15.0" fill="rgb(209,226,25)" rx="2" ry="2" />
<text  x="794.01" y="383.5" ></text>
</g>
<g >
<title>java/io/BufferedReader.readLine (3,466 samples, 6.48%)</title><rect x="25.0" y="453" width="76.4" height="15.0" fill="rgb(230,42,29)" rx="2" ry="2" />
<text  x="28.00" y="463.5" >java/io/..</text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="11.0" y="677" width="0.1" height="15.0" fill="rgb(214,74,42)" rx="2" ry="2" />
<text  x="14.01" y="687.5" ></text>
</g>
<g >
<title>G1ScanCollectionSetRegionClosure::do_heap_region(HeapRegion*) (16 samples, 0.03%)</title><rect x="1183.7" y="629" width="0.4" height="15.0" fill="rgb(233,87,8)" rx="2" ry="2" />
<text  x="1186.71" y="639.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$BranchConn.match (118 samples, 0.22%)</title><rect x="581.7" y="341" width="2.6" height="15.0" fill="rgb(247,106,4)" rx="2" ry="2" />
<text  x="584.73" y="351.5" ></text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (50,355 samples, 94.12%)</title><rect x="21.4" y="725" width="1110.6" height="15.0" fill="rgb(228,152,48)" rx="2" ry="2" />
<text  x="24.42" y="735.5" >java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationIterator$CEBuffer.incLength (53 samples, 0.10%)</title><rect x="905.8" y="341" width="1.2" height="15.0" fill="rgb(231,116,17)" rx="2" ry="2" />
<text  x="908.81" y="351.5" ></text>
</g>
<g >
<title>java/util/zip/InflaterInputStream.read (2,447 samples, 4.57%)</title><rect x="44.0" y="341" width="53.9" height="15.0" fill="rgb(231,34,36)" rx="2" ry="2" />
<text  x="46.97" y="351.5" >java/..</text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.02%)</title><rect x="1078.4" y="261" width="0.2" height="15.0" fill="rgb(248,10,14)" rx="2" ry="2" />
<text  x="1081.44" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="1189.4" y="501" width="0.1" height="15.0" fill="rgb(244,189,33)" rx="2" ry="2" />
<text  x="1192.36" y="511.5" ></text>
</g>
<g >
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (27 samples, 0.05%)</title><rect x="1078.4" y="309" width="0.6" height="15.0" fill="rgb(207,30,2)" rx="2" ry="2" />
<text  x="1081.38" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%)</title><rect x="11.0" y="693" width="0.1" height="15.0" fill="rgb(241,229,15)" rx="2" ry="2" />
<text  x="14.01" y="703.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (8 samples, 0.01%)</title><rect x="831.2" y="357" width="0.1" height="15.0" fill="rgb(213,185,44)" rx="2" ry="2" />
<text  x="834.15" y="367.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$BmpCharProperty.match (77 samples, 0.14%)</title><rect x="366.3" y="373" width="1.7" height="15.0" fill="rgb(240,157,3)" rx="2" ry="2" />
<text  x="369.27" y="383.5" ></text>
</g>
<g >
<title>jint_disjoint_arraycopy (24 samples, 0.04%)</title><rect x="610.6" y="453" width="0.5" height="15.0" fill="rgb(235,21,14)" rx="2" ry="2" />
<text  x="613.62" y="463.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.toLowerCase (384 samples, 0.72%)</title><rect x="266.1" y="421" width="8.5" height="15.0" fill="rgb(242,211,34)" rx="2" ry="2" />
<text  x="269.09" y="431.5" ></text>
</g>
<g >
<title>pagecache_get_page (8 samples, 0.01%)</title><rect x="97.0" y="69" width="0.2" height="15.0" fill="rgb(207,101,54)" rx="2" ry="2" />
<text  x="99.99" y="79.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="11.0" y="709" width="0.1" height="15.0" fill="rgb(211,111,44)" rx="2" ry="2" />
<text  x="13.99" y="719.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (8 samples, 0.01%)</title><rect x="802.7" y="373" width="0.2" height="15.0" fill="rgb(216,119,10)" rx="2" ry="2" />
<text  x="805.72" y="383.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.01%)</title><rect x="10.8" y="645" width="0.1" height="15.0" fill="rgb(219,69,6)" rx="2" ry="2" />
<text  x="13.79" y="655.5" ></text>
</g>
<g >
<title>java/lang/String.equals (1,292 samples, 2.41%)</title><rect x="714.7" y="421" width="28.5" height="15.0" fill="rgb(242,78,42)" rx="2" ry="2" />
<text  x="717.66" y="431.5" >ja..</text>
</g>
<g >
<title>java/nio/CharBuffer.wrap (7 samples, 0.01%)</title><rect x="38.3" y="373" width="0.1" height="15.0" fill="rgb(215,224,25)" rx="2" ry="2" />
<text  x="41.28" y="383.5" ></text>
</g>
<g >
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (29 samples, 0.05%)</title><rect x="1182.7" y="597" width="0.6" height="15.0" fill="rgb(219,119,42)" rx="2" ry="2" />
<text  x="1185.66" y="607.5" ></text>
</g>
<g >
<title>CompileBroker::compiler_thread_loop() (64 samples, 0.12%)</title><rect x="1186.6" y="677" width="1.4" height="15.0" fill="rgb(254,16,45)" rx="2" ry="2" />
<text  x="1189.58" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.01%)</title><rect x="15.2" y="709" width="0.2" height="15.0" fill="rgb(209,21,11)" rx="2" ry="2" />
<text  x="18.23" y="719.5" ></text>
</g>
<g >
<title>java/util/ArrayList.grow (94 samples, 0.18%)</title><rect x="300.8" y="373" width="2.1" height="15.0" fill="rgb(234,163,45)" rx="2" ry="2" />
<text  x="303.78" y="383.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (14 samples, 0.03%)</title><rect x="1017.3" y="325" width="0.3" height="15.0" fill="rgb(225,86,1)" rx="2" ry="2" />
<text  x="1020.26" y="335.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationKeys$SortKeyByteSink.&lt;init&gt; (13 samples, 0.02%)</title><rect x="831.5" y="373" width="0.3" height="15.0" fill="rgb(234,194,23)" rx="2" ry="2" />
<text  x="834.51" y="383.5" ></text>
</g>
<g >
<title>java/nio/HeapCharBuffer.&lt;init&gt; (7 samples, 0.01%)</title><rect x="38.3" y="357" width="0.1" height="15.0" fill="rgb(238,183,52)" rx="2" ry="2" />
<text  x="41.28" y="367.5" ></text>
</g>
<g >
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (24 samples, 0.04%)</title><rect x="1184.1" y="661" width="0.5" height="15.0" fill="rgb(211,165,45)" rx="2" ry="2" />
<text  x="1187.11" y="671.5" ></text>
</g>
<g >
<title>SpinPause (15 samples, 0.03%)</title><rect x="1179.2" y="613" width="0.3" height="15.0" fill="rgb(212,208,33)" rx="2" ry="2" />
<text  x="1182.17" y="623.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$Start.match (10,553 samples, 19.72%)</title><rect x="355.6" y="389" width="232.7" height="15.0" fill="rgb(231,200,32)" rx="2" ry="2" />
<text  x="358.59" y="399.5" >java/util/regex/Pattern$Start...</text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (6 samples, 0.01%)</title><rect x="1187.5" y="517" width="0.1" height="15.0" fill="rgb(213,101,35)" rx="2" ry="2" />
<text  x="1190.46" y="527.5" ></text>
</g>
<g >
<title>WatcherThread::run() (10 samples, 0.02%)</title><rect x="1189.8" y="693" width="0.2" height="15.0" fill="rgb(207,7,46)" rx="2" ry="2" />
<text  x="1192.78" y="703.5" ></text>
</g>
<g >
<title>java/util/regex/ASCII.isType (230 samples, 0.43%)</title><rect x="576.7" y="309" width="5.0" height="15.0" fill="rgb(231,24,0)" rx="2" ry="2" />
<text  x="579.65" y="319.5" ></text>
</g>
<g >
<title>sun/nio/cs/StreamDecoder.readBytes (2,447 samples, 4.57%)</title><rect x="44.0" y="373" width="53.9" height="15.0" fill="rgb(219,173,31)" rx="2" ry="2" />
<text  x="46.97" y="383.5" >sun/n..</text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput.emit (8,601 samples, 16.08%)</title><rect x="611.1" y="453" width="189.7" height="15.0" fill="rgb(221,43,34)" rx="2" ry="2" />
<text  x="614.15" y="463.5" >pl/symentis/mapreduce/ma..</text>
</g>
<g >
<title>java/lang/Object.&lt;init&gt; (224 samples, 0.42%)</title><rect x="1079.0" y="325" width="5.0" height="15.0" fill="rgb(226,201,13)" rx="2" ry="2" />
<text  x="1082.02" y="335.5" ></text>
</g>
<g >
<title>sun/nio/cs/StreamDecoder.read (2,705 samples, 5.06%)</title><rect x="38.3" y="405" width="59.6" height="15.0" fill="rgb(229,154,1)" rx="2" ry="2" />
<text  x="41.28" y="415.5" >sun/ni..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (7 samples, 0.01%)</title><rect x="11.0" y="725" width="0.1" height="15.0" fill="rgb(235,144,46)" rx="2" ry="2" />
<text  x="13.99" y="735.5" ></text>
</g>
<g >
<title>G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*) (22 samples, 0.04%)</title><rect x="1182.0" y="629" width="0.5" height="15.0" fill="rgb(224,49,20)" rx="2" ry="2" />
<text  x="1185.02" y="639.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.charAt (129 samples, 0.24%)</title><rect x="537.7" y="325" width="2.8" height="15.0" fill="rgb(221,200,46)" rx="2" ry="2" />
<text  x="540.66" y="335.5" ></text>
</g>
<g >
<title>java/io/RandomAccessFile.readBytes (77 samples, 0.14%)</title><rect x="95.8" y="261" width="1.7" height="15.0" fill="rgb(231,62,54)" rx="2" ry="2" />
<text  x="98.82" y="271.5" ></text>
</g>
<g >
<title>checkcast_arraycopy (51 samples, 0.10%)</title><rect x="13.8" y="725" width="1.1" height="15.0" fill="rgb(253,177,14)" rx="2" ry="2" />
<text  x="16.79" y="735.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (13 samples, 0.02%)</title><rect x="798.5" y="277" width="0.3" height="15.0" fill="rgb(213,163,52)" rx="2" ry="2" />
<text  x="801.49" y="287.5" ></text>
</g>
<g >
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int, bool) (6 samples, 0.01%)</title><rect x="1188.3" y="613" width="0.1" height="15.0" fill="rgb(241,107,34)" rx="2" ry="2" />
<text  x="1191.26" y="623.5" ></text>
</g>
<g >
<title>checkcast_arraycopy (219 samples, 0.41%)</title><rect x="259.3" y="453" width="4.8" height="15.0" fill="rgb(212,42,24)" rx="2" ry="2" />
<text  x="262.32" y="463.5" ></text>
</g>
<g >
<title>G1BarrierSet::invalidate(MemRegion) (24 samples, 0.04%)</title><rect x="11.9" y="725" width="0.5" height="15.0" fill="rgb(254,180,53)" rx="2" ry="2" />
<text  x="14.92" y="735.5" ></text>
</g>
<g >
<title>wake_up_q (5 samples, 0.01%)</title><rect x="1189.4" y="421" width="0.1" height="15.0" fill="rgb(236,202,0)" rx="2" ry="2" />
<text  x="1192.38" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="11.7" y="677" width="0.2" height="15.0" fill="rgb(213,177,17)" rx="2" ry="2" />
<text  x="14.72" y="687.5" ></text>
</g>
<g >
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.01%)</title><rect x="831.2" y="373" width="0.1" height="15.0" fill="rgb(250,118,31)" rx="2" ry="2" />
<text  x="834.15" y="383.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$FileLineInput.hasNext (3,480 samples, 6.50%)</title><rect x="24.7" y="485" width="76.7" height="15.0" fill="rgb(206,104,21)" rx="2" ry="2" />
<text  x="27.69" y="495.5" >pl/symen..</text>
</g>
<g >
<title>nmethod::oops_do_process_weak(nmethod::OopsDoProcessor*) (5 samples, 0.01%)</title><rect x="1182.7" y="565" width="0.1" height="15.0" fill="rgb(247,161,2)" rx="2" ry="2" />
<text  x="1185.70" y="575.5" ></text>
</g>
<g >
<title>java/util/regex/ASCII.isType (295 samples, 0.55%)</title><rect x="555.7" y="293" width="6.5" height="15.0" fill="rgb(246,90,42)" rx="2" ry="2" />
<text  x="558.72" y="303.5" ></text>
</g>
<g >
<title>GCIdMark::GCIdMark(unsigned int) (5 samples, 0.01%)</title><rect x="1185.8" y="677" width="0.1" height="15.0" fill="rgb(240,27,54)" rx="2" ry="2" />
<text  x="1188.83" y="687.5" ></text>
</g>
<g >
<title>java/lang/String.subSequence (546 samples, 1.02%)</title><rect x="285.3" y="421" width="12.0" height="15.0" fill="rgb(221,140,50)" rx="2" ry="2" />
<text  x="288.28" y="431.5" ></text>
</g>
<g >
<title>G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (25 samples, 0.05%)</title><rect x="1181.9" y="645" width="0.6" height="15.0" fill="rgb(251,120,13)" rx="2" ry="2" />
<text  x="1184.95" y="655.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 0.01%)</title><rect x="1187.5" y="453" width="0.1" height="15.0" fill="rgb(210,133,0)" rx="2" ry="2" />
<text  x="1190.46" y="463.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (10 samples, 0.02%)</title><rect x="1184.7" y="661" width="0.2" height="15.0" fill="rgb(246,142,48)" rx="2" ry="2" />
<text  x="1187.73" y="671.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.01%)</title><rect x="1189.4" y="453" width="0.1" height="15.0" fill="rgb(213,100,3)" rx="2" ry="2" />
<text  x="1192.36" y="463.5" ></text>
</g>
<g >
<title>java/util/regex/ASCII.getType (291 samples, 0.54%)</title><rect x="555.8" y="277" width="6.4" height="15.0" fill="rgb(225,162,3)" rx="2" ry="2" />
<text  x="558.81" y="287.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::do_partial_array(PartialArrayScanTask) (26 samples, 0.05%)</title><rect x="1170.6" y="597" width="0.6" height="15.0" fill="rgb(207,97,2)" rx="2" ry="2" />
<text  x="1173.61" y="607.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.01%)</title><rect x="802.7" y="389" width="0.2" height="15.0" fill="rgb(246,198,49)" rx="2" ry="2" />
<text  x="805.72" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="10.8" y="693" width="0.1" height="15.0" fill="rgb(242,11,21)" rx="2" ry="2" />
<text  x="13.77" y="703.5" ></text>
</g>
<g >
<title>futex_wake (6 samples, 0.01%)</title><rect x="11.0" y="645" width="0.1" height="15.0" fill="rgb(235,103,33)" rx="2" ry="2" />
<text  x="14.01" y="655.5" ></text>
</g>
<g >
<title>jint_disjoint_arraycopy (75 samples, 0.14%)</title><rect x="798.9" y="325" width="1.6" height="15.0" fill="rgb(221,192,49)" rx="2" ry="2" />
<text  x="801.86" y="335.5" ></text>
</g>
<g >
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (38 samples, 0.07%)</title><rect x="1182.5" y="629" width="0.8" height="15.0" fill="rgb(246,77,49)" rx="2" ry="2" />
<text  x="1185.50" y="639.5" ></text>
</g>
<g >
<title>java/io/BufferedReader.readLine (3,474 samples, 6.49%)</title><rect x="24.8" y="469" width="76.6" height="15.0" fill="rgb(217,159,33)" rx="2" ry="2" />
<text  x="27.82" y="479.5" >java/io/..</text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%)</title><rect x="1189.4" y="485" width="0.1" height="15.0" fill="rgb(226,156,45)" rx="2" ry="2" />
<text  x="1192.36" y="495.5" ></text>
</g>
<g >
<title>java/util/regex/CharPredicates$$Lambda$50.0x0000000800b76e10.is (884 samples, 1.65%)</title><rect x="562.2" y="341" width="19.5" height="15.0" fill="rgb(222,177,25)" rx="2" ry="2" />
<text  x="565.23" y="351.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountMapper.map (46,117 samples, 86.20%)</title><rect x="101.5" y="469" width="1017.1" height="15.0" fill="rgb(236,144,10)" rx="2" ry="2" />
<text  x="104.51" y="479.5" >pl/symentis/wordcount/WordCount$WordCountMapper.map</text>
</g>
<g >
<title>pl/symentis/wordcount/jmh_generated/SequentialMapReduceWordCountBenchmark_countWords_jmhTest.countWords_Throughput (50,354 samples, 94.12%)</title><rect x="21.4" y="549" width="1110.6" height="15.0" fill="rgb(231,140,10)" rx="2" ry="2" />
<text  x="24.42" y="559.5" >pl/symentis/wordcount/jmh_generated/SequentialMapReduceWordCountBenchmark_countWords_jmhTest.countWords_Throughput</text>
</g>
<g >
<title>do_futex (5 samples, 0.01%)</title><rect x="11.7" y="661" width="0.2" height="15.0" fill="rgb(249,121,43)" rx="2" ry="2" />
<text  x="14.74" y="671.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::G1ParScanThreadState(G1CollectedHeap*, G1RedirtyCardsQueueSet*, unsigned int, unsigned long, unsigned long) (6 samples, 0.01%)</title><rect x="1183.5" y="645" width="0.2" height="15.0" fill="rgb(250,180,53)" rx="2" ry="2" />
<text  x="1186.54" y="655.5" ></text>
</g>
<g >
<title>jbyte_arraycopy (19 samples, 0.04%)</title><rect x="1084.7" y="341" width="0.4" height="15.0" fill="rgb(228,54,44)" rx="2" ry="2" />
<text  x="1087.68" y="351.5" ></text>
</g>
<g >
<title>java/lang/String.charAt (293 samples, 0.55%)</title><rect x="534.0" y="341" width="6.5" height="15.0" fill="rgb(252,4,23)" rx="2" ry="2" />
<text  x="537.04" y="351.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOfRange (353 samples, 0.66%)</title><rect x="289.5" y="373" width="7.8" height="15.0" fill="rgb(216,107,53)" rx="2" ry="2" />
<text  x="292.53" y="383.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.append (11 samples, 0.02%)</title><rect x="101.2" y="437" width="0.2" height="15.0" fill="rgb(249,194,2)" rx="2" ry="2" />
<text  x="104.16" y="447.5" ></text>
</g>
<g >
<title>java/util/HashMap.compute (8,576 samples, 16.03%)</title><rect x="611.4" y="437" width="189.1" height="15.0" fill="rgb(223,219,19)" rx="2" ry="2" />
<text  x="614.37" y="447.5" >java/util/HashMap.compute</text>
</g>
<g >
<title>G1PLABAllocator::allocate_direct_or_new_plab(G1HeapRegionAttr, unsigned long, bool*, unsigned int) (6 samples, 0.01%)</title><rect x="1170.5" y="597" width="0.1" height="15.0" fill="rgb(230,109,32)" rx="2" ry="2" />
<text  x="1173.48" y="607.5" ></text>
</g>
<g >
<title>java/util/ArrayList$Itr.next (6 samples, 0.01%)</title><rect x="1127.3" y="453" width="0.1" height="15.0" fill="rgb(218,217,3)" rx="2" ry="2" />
<text  x="1130.25" y="463.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput$$Lambda$52.0x0000000800bd68b8.apply (15 samples, 0.03%)</title><rect x="800.5" y="437" width="0.3" height="15.0" fill="rgb(242,173,29)" rx="2" ry="2" />
<text  x="803.52" y="447.5" ></text>
</g>
<g >
<title>java/util/ArrayList.add (1,680 samples, 3.14%)</title><rect x="763.5" y="389" width="37.0" height="15.0" fill="rgb(226,10,24)" rx="2" ry="2" />
<text  x="766.47" y="399.5" >jav..</text>
</g>
<g >
<title>MemAllocator::allocate() const (27 samples, 0.05%)</title><rect x="1078.4" y="293" width="0.6" height="15.0" fill="rgb(214,12,33)" rx="2" ry="2" />
<text  x="1081.38" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7 samples, 0.01%)</title><rect x="15.2" y="693" width="0.2" height="15.0" fill="rgb(236,126,40)" rx="2" ry="2" />
<text  x="18.25" y="703.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.appendChars (8 samples, 0.01%)</title><rect x="101.2" y="405" width="0.2" height="15.0" fill="rgb(236,24,22)" rx="2" ry="2" />
<text  x="104.18" y="415.5" ></text>
</g>
<g >
<title>G1RemSet::merge_heap_roots(bool) (5 samples, 0.01%)</title><rect x="1188.7" y="565" width="0.1" height="15.0" fill="rgb(224,45,48)" rx="2" ry="2" />
<text  x="1191.68" y="575.5" ></text>
</g>
<g >
<title>com/ibm/icu/text/CollationKey.&lt;init&gt; (148 samples, 0.28%)</title><rect x="802.9" y="405" width="3.3" height="15.0" fill="rgb(225,143,0)" rx="2" ry="2" />
<text  x="805.90" y="415.5" ></text>
</g>
<g >
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (5 samples, 0.01%)</title><rect x="1182.5" y="613" width="0.1" height="15.0" fill="rgb(209,140,29)" rx="2" ry="2" />
<text  x="1185.50" y="623.5" ></text>
</g>
<g >
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (8 samples, 0.01%)</title><rect x="10.3" y="709" width="0.2" height="15.0" fill="rgb(245,130,21)" rx="2" ry="2" />
<text  x="13.31" y="719.5" ></text>
</g>
<g >
<title>clock_gettime (273 samples, 0.51%)</title><rect x="15.4" y="741" width="6.0" height="15.0" fill="rgb(210,13,44)" rx="2" ry="2" />
<text  x="18.40" y="751.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountMapper.map (46,117 samples, 86.20%)</title><rect x="101.5" y="485" width="1017.1" height="15.0" fill="rgb(230,207,25)" rx="2" ry="2" />
<text  x="104.51" y="495.5" >pl/symentis/wordcount/WordCount$WordCountMapper.map</text>
</g>
<g >
<title>java/util/zip/Inflater.inflate (2,338 samples, 4.37%)</title><rect x="44.1" y="325" width="51.5" height="15.0" fill="rgb(213,43,43)" rx="2" ry="2" />
<text  x="47.05" y="335.5" >java/..</text>
</g>
<g >
<title>[unknown] (11 samples, 0.02%)</title><rect x="10.7" y="725" width="0.2" height="15.0" fill="rgb(212,217,11)" rx="2" ry="2" />
<text  x="13.68" y="735.5" ></text>
</g>
<g >
<title>__read (59 samples, 0.11%)</title><rect x="96.1" y="229" width="1.3" height="15.0" fill="rgb(208,190,15)" rx="2" ry="2" />
<text  x="99.11" y="239.5" ></text>
</g>
<g >
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (5 samples, 0.01%)</title><rect x="1185.9" y="661" width="0.2" height="15.0" fill="rgb(237,24,12)" rx="2" ry="2" />
<text  x="1188.94" y="671.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationSettings.getStrength (53 samples, 0.10%)</title><rect x="1089.4" y="373" width="1.2" height="15.0" fill="rgb(234,5,45)" rx="2" ry="2" />
<text  x="1092.40" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_read (57 samples, 0.11%)</title><rect x="96.1" y="181" width="1.3" height="15.0" fill="rgb(226,119,9)" rx="2" ry="2" />
<text  x="99.15" y="191.5" ></text>
</g>
<g >
<title>java/util/concurrent/Executors$RunnableAdapter.call (50,354 samples, 94.12%)</title><rect x="21.4" y="677" width="1110.6" height="15.0" fill="rgb(243,193,27)" rx="2" ry="2" />
<text  x="24.42" y="687.5" >java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g >
<title>java/util/regex/Matcher.search (12,812 samples, 23.95%)</title><rect x="305.8" y="405" width="282.5" height="15.0" fill="rgb(243,88,40)" rx="2" ry="2" />
<text  x="308.77" y="415.5" >java/util/regex/Matcher.search</text>
</g>
<g >
<title>HeapRegion::hr_clear(bool) (8 samples, 0.01%)</title><rect x="1184.3" y="629" width="0.2" height="15.0" fill="rgb(225,208,3)" rx="2" ry="2" />
<text  x="1187.29" y="639.5" ></text>
</g>
<g >
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (39 samples, 0.07%)</title><rect x="1186.6" y="645" width="0.8" height="15.0" fill="rgb(225,121,9)" rx="2" ry="2" />
<text  x="1189.58" y="655.5" ></text>
</g>
<g >
<title>futex_wake (6 samples, 0.01%)</title><rect x="1189.4" y="437" width="0.1" height="15.0" fill="rgb(253,208,35)" rx="2" ry="2" />
<text  x="1192.36" y="447.5" ></text>
</g>
<g >
<title>java/io/RandomAccessFile.read (77 samples, 0.14%)</title><rect x="95.8" y="277" width="1.7" height="15.0" fill="rgb(215,107,12)" rx="2" ry="2" />
<text  x="98.82" y="287.5" ></text>
</g>
<g >
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (50,354 samples, 94.12%)</title><rect x="21.4" y="565" width="1110.6" height="15.0" fill="rgb(226,8,31)" rx="2" ry="2" />
<text  x="24.42" y="575.5" >jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g >
<title>TaskTerminator::offer_termination(TerminatorTerminator*) (26 samples, 0.05%)</title><rect x="1179.1" y="629" width="0.6" height="15.0" fill="rgb(242,56,38)" rx="2" ry="2" />
<text  x="1182.08" y="639.5" ></text>
</g>
<g >
<title>copy_page_to_iter (31 samples, 0.06%)</title><rect x="96.3" y="69" width="0.7" height="15.0" fill="rgb(233,195,47)" rx="2" ry="2" />
<text  x="99.30" y="79.5" ></text>
</g>
<g >
<title>G1RemSetScanState::G1ClearCardTableTask::work(unsigned int) (5 samples, 0.01%)</title><rect x="1185.7" y="677" width="0.1" height="15.0" fill="rgb(234,28,5)" rx="2" ry="2" />
<text  x="1188.72" y="687.5" ></text>
</g>
<g >
<title>java/util/TreeMap.getEntry (178 samples, 0.33%)</title><rect x="1114.7" y="405" width="3.9" height="15.0" fill="rgb(245,50,6)" rx="2" ry="2" />
<text  x="1117.72" y="415.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/UTF16CollationIterator.handleNextCE32 (2,237 samples, 4.18%)</title><rect x="908.8" y="341" width="49.3" height="15.0" fill="rgb(233,26,7)" rx="2" ry="2" />
<text  x="911.79" y="351.5" >com/..</text>
</g>
<g >
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.74] (63 samples, 0.12%)</title><rect x="1188.4" y="661" width="1.4" height="15.0" fill="rgb(252,148,42)" rx="2" ry="2" />
<text  x="1191.39" y="671.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput.values (69 samples, 0.13%)</title><rect x="1127.5" y="421" width="1.5" height="15.0" fill="rgb(221,205,9)" rx="2" ry="2" />
<text  x="1130.45" y="431.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (50,354 samples, 94.12%)</title><rect x="21.4" y="645" width="1110.6" height="15.0" fill="rgb(207,73,43)" rx="2" ry="2" />
<text  x="24.42" y="655.5" >org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call</text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.01%)</title><rect x="11.0" y="597" width="0.1" height="15.0" fill="rgb(205,44,7)" rx="2" ry="2" />
<text  x="14.01" y="607.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (15 samples, 0.03%)</title><rect x="1017.3" y="341" width="0.3" height="15.0" fill="rgb(252,219,36)" rx="2" ry="2" />
<text  x="1020.26" y="351.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (15 samples, 0.03%)</title><rect x="44.1" y="293" width="0.3" height="15.0" fill="rgb(234,152,30)" rx="2" ry="2" />
<text  x="47.10" y="303.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (96 samples, 0.18%)</title><rect x="1138.7" y="629" width="2.1" height="15.0" fill="rgb(214,74,54)" rx="2" ry="2" />
<text  x="1141.68" y="639.5" ></text>
</g>
<g >
<title>java/util/zip/ZipFile$ZipFileInputStream.read (103 samples, 0.19%)</title><rect x="95.7" y="309" width="2.2" height="15.0" fill="rgb(206,31,28)" rx="2" ry="2" />
<text  x="98.66" y="319.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.&lt;init&gt; (414 samples, 0.77%)</title><rect x="588.8" y="405" width="9.1" height="15.0" fill="rgb(233,10,51)" rx="2" ry="2" />
<text  x="591.81" y="415.5" ></text>
</g>
<g >
<title>wake_up_q (6 samples, 0.01%)</title><rect x="15.3" y="645" width="0.1" height="15.0" fill="rgb(231,145,30)" rx="2" ry="2" />
<text  x="18.27" y="655.5" ></text>
</g>
<g >
<title>ParallelSPCleanupTask::work(unsigned int) (5 samples, 0.01%)</title><rect x="1185.9" y="677" width="0.2" height="15.0" fill="rgb(251,229,42)" rx="2" ry="2" />
<text  x="1188.94" y="687.5" ></text>
</g>
<g >
<title>G1MergeHeapRootsTask::work(unsigned int) (15 samples, 0.03%)</title><rect x="1184.7" y="677" width="0.3" height="15.0" fill="rgb(242,223,7)" rx="2" ry="2" />
<text  x="1187.68" y="687.5" ></text>
</g>
<g >
<title>Compilation::build_hir() [clone .part.95] (7 samples, 0.01%)</title><rect x="1187.4" y="581" width="0.2" height="15.0" fill="rgb(213,95,16)" rx="2" ry="2" />
<text  x="1190.44" y="591.5" ></text>
</g>
<g >
<title>__lock_text_start (5 samples, 0.01%)</title><rect x="1189.4" y="389" width="0.1" height="15.0" fill="rgb(221,69,6)" rx="2" ry="2" />
<text  x="1192.38" y="399.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.01%)</title><rect x="15.3" y="613" width="0.1" height="15.0" fill="rgb(220,91,29)" rx="2" ry="2" />
<text  x="18.27" y="623.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/SequentialMapReduceWordCountBenchmark$$Lambda$51.0x0000000800bd6690.emit (117 samples, 0.22%)</title><rect x="1129.0" y="453" width="2.6" height="15.0" fill="rgb(215,149,15)" rx="2" ry="2" />
<text  x="1131.97" y="463.5" ></text>
</g>
<g >
<title>Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (39 samples, 0.07%)</title><rect x="1186.6" y="629" width="0.8" height="15.0" fill="rgb(240,120,16)" rx="2" ry="2" />
<text  x="1189.58" y="639.5" ></text>
</g>
<g >
<title>start_thread (2,618 samples, 4.89%)</title><rect x="1132.3" y="741" width="57.7" height="15.0" fill="rgb(235,228,38)" rx="2" ry="2" />
<text  x="1135.26" y="751.5" >start_..</text>
</g>
<g >
<title>readBytes (73 samples, 0.14%)</title><rect x="95.9" y="245" width="1.6" height="15.0" fill="rgb(211,39,53)" rx="2" ry="2" />
<text  x="98.91" y="255.5" ></text>
</g>
<g >
<title>java/util/ArrayList.grow (94 samples, 0.18%)</title><rect x="300.8" y="389" width="2.1" height="15.0" fill="rgb(230,223,6)" rx="2" ry="2" />
<text  x="303.78" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%)</title><rect x="11.7" y="693" width="0.2" height="15.0" fill="rgb(224,188,47)" rx="2" ry="2" />
<text  x="14.72" y="703.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$Branch.match (9,992 samples, 18.68%)</title><rect x="368.0" y="373" width="220.3" height="15.0" fill="rgb(222,104,29)" rx="2" ry="2" />
<text  x="370.96" y="383.5" >java/util/regex/Pattern$Branc..</text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.01%)</title><rect x="10.0" y="741" width="0.2" height="15.0" fill="rgb(242,208,46)" rx="2" ry="2" />
<text  x="13.04" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.01%)</title><rect x="15.2" y="725" width="0.2" height="15.0" fill="rgb(253,22,6)" rx="2" ry="2" />
<text  x="18.23" y="735.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 0.01%)</title><rect x="1187.5" y="469" width="0.1" height="15.0" fill="rgb(229,199,12)" rx="2" ry="2" />
<text  x="1190.46" y="479.5" ></text>
</g>
<g >
<title>java/util/ArrayList.add (197 samples, 0.37%)</title><rect x="298.5" y="421" width="4.4" height="15.0" fill="rgb(251,114,2)" rx="2" ry="2" />
<text  x="301.51" y="431.5" ></text>
</g>
<g >
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (6 samples, 0.01%)</title><rect x="1187.5" y="533" width="0.1" height="15.0" fill="rgb(234,148,35)" rx="2" ry="2" />
<text  x="1190.46" y="543.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (6 samples, 0.01%)</title><rect x="1189.8" y="677" width="0.2" height="15.0" fill="rgb(243,177,12)" rx="2" ry="2" />
<text  x="1192.85" y="687.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (19 samples, 0.04%)</title><rect x="11.4" y="725" width="0.5" height="15.0" fill="rgb(230,104,37)" rx="2" ry="2" />
<text  x="14.43" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="1188.3" y="581" width="0.1" height="15.0" fill="rgb(253,215,8)" rx="2" ry="2" />
<text  x="1191.26" y="591.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.01%)</title><rect x="11.0" y="661" width="0.1" height="15.0" fill="rgb(227,17,18)" rx="2" ry="2" />
<text  x="14.01" y="671.5" ></text>
</g>
<g >
<title>java/lang/String.&lt;init&gt; (140 samples, 0.26%)</title><rect x="97.9" y="421" width="3.1" height="15.0" fill="rgb(254,98,48)" rx="2" ry="2" />
<text  x="100.94" y="431.5" ></text>
</g>
<g >
<title>java/util/regex/ASCII.getType (229 samples, 0.43%)</title><rect x="576.7" y="293" width="5.0" height="15.0" fill="rgb(219,110,21)" rx="2" ry="2" />
<text  x="579.68" y="303.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (10 samples, 0.02%)</title><rect x="10.3" y="725" width="0.2" height="15.0" fill="rgb(246,141,25)" rx="2" ry="2" />
<text  x="13.29" y="735.5" ></text>
</g>
<g >
<title>G1FreeCollectionSetTask::work(unsigned int) (25 samples, 0.05%)</title><rect x="1184.1" y="677" width="0.5" height="15.0" fill="rgb(250,101,5)" rx="2" ry="2" />
<text  x="1187.09" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="10.8" y="661" width="0.1" height="15.0" fill="rgb(219,180,13)" rx="2" ry="2" />
<text  x="13.79" y="671.5" ></text>
</g>
<g >
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (57 samples, 0.11%)</title><rect x="1188.5" y="597" width="1.2" height="15.0" fill="rgb(225,211,3)" rx="2" ry="2" />
<text  x="1191.48" y="607.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11 (1,893 samples, 3.54%)</title><rect x="44.4" y="293" width="41.8" height="15.0" fill="rgb(244,19,22)" rx="2" ry="2" />
<text  x="47.43" y="303.5" >/us..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (256 samples, 0.48%)</title><rect x="15.8" y="709" width="5.6" height="15.0" fill="rgb(216,111,0)" rx="2" ry="2" />
<text  x="18.78" y="719.5" ></text>
</g>
<g >
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (59 samples, 0.11%)</title><rect x="1188.5" y="613" width="1.3" height="15.0" fill="rgb(207,146,4)" rx="2" ry="2" />
<text  x="1191.48" y="623.5" ></text>
</g>
<g >
<title>try_to_wake_up (5 samples, 0.01%)</title><rect x="1188.3" y="485" width="0.1" height="15.0" fill="rgb(212,106,28)" rx="2" ry="2" />
<text  x="1191.26" y="495.5" ></text>
</g>
<g >
<title>read_hpet.part.0 (200 samples, 0.37%)</title><rect x="16.7" y="613" width="4.4" height="15.0" fill="rgb(222,211,23)" rx="2" ry="2" />
<text  x="19.73" y="623.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationSettings.hasReordering (245 samples, 0.46%)</title><rect x="1084.0" y="357" width="5.4" height="15.0" fill="rgb(231,22,48)" rx="2" ry="2" />
<text  x="1086.96" y="367.5" ></text>
</g>
<g >
<title>WorkGang::run_task(AbstractGangTask*, unsigned int, bool) (7 samples, 0.01%)</title><rect x="1189.3" y="549" width="0.2" height="15.0" fill="rgb(242,71,9)" rx="2" ry="2" />
<text  x="1192.34" y="559.5" ></text>
</g>
<g >
<title>sun/nio/cs/StreamDecoder.implRead (2,705 samples, 5.06%)</title><rect x="38.3" y="389" width="59.6" height="15.0" fill="rgb(225,85,33)" rx="2" ry="2" />
<text  x="41.28" y="399.5" >sun/ni..</text>
</g>
<g >
<title>pl/symentis/mapreduce/SequentialMapReduce$$Lambda$53.0x0000000800bd6cf8.iterator (69 samples, 0.13%)</title><rect x="1127.5" y="453" width="1.5" height="15.0" fill="rgb(207,50,44)" rx="2" ry="2" />
<text  x="1130.45" y="463.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (8 samples, 0.01%)</title><rect x="1178.8" y="613" width="0.2" height="15.0" fill="rgb(254,94,1)" rx="2" ry="2" />
<text  x="1181.82" y="623.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationIterator.appendCEsFromCE32 (16 samples, 0.03%)</title><rect x="908.4" y="325" width="0.4" height="15.0" fill="rgb(249,105,39)" rx="2" ry="2" />
<text  x="911.44" y="335.5" ></text>
</g>
<g >
<title>generic_file_read_iter (43 samples, 0.08%)</title><rect x="96.3" y="101" width="0.9" height="15.0" fill="rgb(241,57,14)" rx="2" ry="2" />
<text  x="99.26" y="111.5" ></text>
</g>
<g >
<title>java/util/ArrayList.subList (20 samples, 0.04%)</title><rect x="303.5" y="421" width="0.4" height="15.0" fill="rgb(207,163,27)" rx="2" ry="2" />
<text  x="306.47" y="431.5" ></text>
</g>
<g >
<title>sem_post@@GLIBC_2.2.5 (6 samples, 0.01%)</title><rect x="1189.4" y="517" width="0.1" height="15.0" fill="rgb(224,15,49)" rx="2" ry="2" />
<text  x="1192.36" y="527.5" ></text>
</g>
<g >
<title>G1CollectedHeap::run_task(AbstractGangTask*) (7 samples, 0.01%)</title><rect x="1189.3" y="565" width="0.2" height="15.0" fill="rgb(233,195,44)" rx="2" ry="2" />
<text  x="1192.34" y="575.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/jmh_generated/SequentialMapReduceWordCountBenchmark_countWords_jmhTest.countWords_thrpt_jmhStub (50,354 samples, 94.12%)</title><rect x="21.4" y="533" width="1110.6" height="15.0" fill="rgb(254,59,5)" rx="2" ry="2" />
<text  x="24.42" y="543.5" >pl/symentis/wordcount/jmh_generated/SequentialMapReduceWordCountBenchmark_countWords_jmhTest.countWords_thrpt_jmhStub</text>
</g>
<g >
<title>G1ParScanThreadState::trim_queue() (1,736 samples, 3.24%)</title><rect x="1140.8" y="629" width="38.3" height="15.0" fill="rgb(218,169,21)" rx="2" ry="2" />
<text  x="1143.79" y="639.5" >G1P..</text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationSettings.getStrength (53 samples, 0.10%)</title><rect x="1089.4" y="357" width="1.2" height="15.0" fill="rgb(228,73,39)" rx="2" ry="2" />
<text  x="1092.40" y="367.5" ></text>
</g>
<g >
<title>java/io/RandomAccessFile.seek0 (16 samples, 0.03%)</title><rect x="97.5" y="261" width="0.4" height="15.0" fill="rgb(245,203,7)" rx="2" ry="2" />
<text  x="100.54" y="271.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/Trie2_32.getFromU16SingleLead (203 samples, 0.38%)</title><rect x="944.2" y="325" width="4.5" height="15.0" fill="rgb(207,145,27)" rx="2" ry="2" />
<text  x="947.19" y="335.5" ></text>
</g>
<g >
<title>try_to_wake_up (6 samples, 0.01%)</title><rect x="15.3" y="629" width="0.1" height="15.0" fill="rgb(225,137,45)" rx="2" ry="2" />
<text  x="18.27" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="1188.3" y="549" width="0.1" height="15.0" fill="rgb(211,187,12)" rx="2" ry="2" />
<text  x="1191.26" y="559.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern.split (14,558 samples, 27.21%)</title><rect x="276.9" y="453" width="321.0" height="15.0" fill="rgb(227,208,8)" rx="2" ry="2" />
<text  x="279.85" y="463.5" >java/util/regex/Pattern.split</text>
</g>
<g >
<title>java/util/HashMap.resize (78 samples, 0.15%)</title><rect x="1129.8" y="405" width="1.8" height="15.0" fill="rgb(225,171,15)" rx="2" ry="2" />
<text  x="1132.83" y="415.5" ></text>
</g>
<g >
<title>java/util/ArrayList.add (15 samples, 0.03%)</title><rect x="800.5" y="405" width="0.3" height="15.0" fill="rgb(220,197,26)" rx="2" ry="2" />
<text  x="803.52" y="415.5" ></text>
</g>
<g >
<title>try_to_wake_up (6 samples, 0.01%)</title><rect x="11.0" y="613" width="0.1" height="15.0" fill="rgb(223,89,3)" rx="2" ry="2" />
<text  x="14.01" y="623.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationIterator.reset (5 samples, 0.01%)</title><rect x="1114.6" y="341" width="0.1" height="15.0" fill="rgb(231,69,44)" rx="2" ry="2" />
<text  x="1117.59" y="351.5" ></text>
</g>
<g >
<title>Java_java_io_RandomAccessFile_seek0 (5 samples, 0.01%)</title><rect x="97.6" y="245" width="0.1" height="15.0" fill="rgb(237,100,47)" rx="2" ry="2" />
<text  x="100.56" y="255.5" ></text>
</g>
<g >
<title>Java_java_util_zip_Inflater_inflateBytesBytes (16 samples, 0.03%)</title><rect x="86.2" y="293" width="0.3" height="15.0" fill="rgb(220,215,27)" rx="2" ry="2" />
<text  x="89.18" y="303.5" ></text>
</g>
<g >
<title>InterpreterOopMap::iterate_oop(OffsetClosure*) const (5 samples, 0.01%)</title><rect x="1183.2" y="565" width="0.1" height="15.0" fill="rgb(224,97,21)" rx="2" ry="2" />
<text  x="1186.16" y="575.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/SequentialMapReduce.run (50,342 samples, 94.10%)</title><rect x="21.6" y="501" width="1110.4" height="15.0" fill="rgb(234,193,45)" rx="2" ry="2" />
<text  x="24.65" y="511.5" >pl/symentis/mapreduce/SequentialMapReduce.run</text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationKeys.writeSortKeyUpToQuaternary (10,915 samples, 20.40%)</title><rect x="848.6" y="373" width="240.8" height="15.0" fill="rgb(210,171,43)" rx="2" ry="2" />
<text  x="851.62" y="383.5" >com/ibm/icu/impl/coll/CollationK..</text>
</g>
<g >
<title>java/lang/String.toLowerCase (412 samples, 0.77%)</title><rect x="265.5" y="453" width="9.1" height="15.0" fill="rgb(240,24,24)" rx="2" ry="2" />
<text  x="268.47" y="463.5" ></text>
</g>
<g >
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (33 samples, 0.06%)</title><rect x="1182.6" y="613" width="0.7" height="15.0" fill="rgb(231,174,38)" rx="2" ry="2" />
<text  x="1185.61" y="623.5" ></text>
</g>
<g >
<title>itable stub (4,596 samples, 8.59%)</title><rect x="432.7" y="341" width="101.3" height="15.0" fill="rgb(208,172,7)" rx="2" ry="2" />
<text  x="435.67" y="351.5" >itable stub</text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.doSingle (5 samples, 0.01%)</title><rect x="1132.1" y="693" width="0.2" height="15.0" fill="rgb(211,179,35)" rx="2" ry="2" />
<text  x="1135.15" y="703.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/ForkedRunner.run (5 samples, 0.01%)</title><rect x="1132.1" y="725" width="0.2" height="15.0" fill="rgb(219,187,54)" rx="2" ry="2" />
<text  x="1135.15" y="735.5" ></text>
</g>
<g >
<title>java/lang/String.charAt (429 samples, 0.80%)</title><rect x="948.7" y="325" width="9.4" height="15.0" fill="rgb(252,217,28)" rx="2" ry="2" />
<text  x="951.67" y="335.5" ></text>
</g>
<g >
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWordImpl**, HeapWordImpl**, void const*) (10 samples, 0.02%)</title><rect x="1182.1" y="613" width="0.2" height="15.0" fill="rgb(217,123,18)" rx="2" ry="2" />
<text  x="1185.06" y="623.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (10 samples, 0.02%)</title><rect x="1187.1" y="581" width="0.2" height="15.0" fill="rgb(218,58,27)" rx="2" ry="2" />
<text  x="1190.07" y="591.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.search (58 samples, 0.11%)</title><rect x="275.5" y="453" width="1.3" height="15.0" fill="rgb(249,107,44)" rx="2" ry="2" />
<text  x="278.51" y="463.5" ></text>
</g>
<g >
<title>Compilation::emit_lir() (8 samples, 0.01%)</title><rect x="1187.7" y="581" width="0.2" height="15.0" fill="rgb(247,151,44)" rx="2" ry="2" />
<text  x="1190.71" y="591.5" ></text>
</g>
<g >
<title>java/util/ArrayList$SubList.&lt;init&gt; (20 samples, 0.04%)</title><rect x="303.5" y="405" width="0.4" height="15.0" fill="rgb(218,169,28)" rx="2" ry="2" />
<text  x="306.47" y="415.5" ></text>
</g>
<g >
<title>find_get_entry (8 samples, 0.01%)</title><rect x="97.0" y="53" width="0.2" height="15.0" fill="rgb(221,164,24)" rx="2" ry="2" />
<text  x="99.99" y="63.5" ></text>
</g>
<g >
<title>com/ibm/icu/impl/coll/CollationIterator$CEBuffer.set (62 samples, 0.12%)</title><rect x="907.0" y="341" width="1.3" height="15.0" fill="rgb(223,144,0)" rx="2" ry="2" />
<text  x="909.98" y="351.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (219 samples, 0.41%)</title><rect x="16.3" y="645" width="4.8" height="15.0" fill="rgb(246,135,28)" rx="2" ry="2" />
<text  x="19.31" y="655.5" ></text>
</g>
<g >
<title>java/lang/ClassLoader.getResourceAsStream (9 samples, 0.02%)</title><rect x="21.4" y="485" width="0.2" height="15.0" fill="rgb(237,112,4)" rx="2" ry="2" />
<text  x="24.45" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="97.7" y="229" width="0.2" height="15.0" fill="rgb(218,221,6)" rx="2" ry="2" />
<text  x="100.74" y="239.5" ></text>
</g>
<g >
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.01%)</title><rect x="297.2" y="341" width="0.1" height="15.0" fill="rgb(224,76,44)" rx="2" ry="2" />
<text  x="300.16" y="351.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.charAt (249 samples, 0.47%)</title><rect x="952.6" y="309" width="5.5" height="15.0" fill="rgb(245,49,13)" rx="2" ry="2" />
<text  x="955.64" y="319.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.hashCode (323 samples, 0.60%)</title><rect x="749.0" y="389" width="7.1" height="15.0" fill="rgb(247,56,28)" rx="2" ry="2" />
<text  x="752.02" y="399.5" ></text>
</g>
<g >
<title>[vdso] (7 samples, 0.01%)</title><rect x="14.9" y="741" width="0.2" height="15.0" fill="rgb(221,26,48)" rx="2" ry="2" />
<text  x="17.92" y="751.5" ></text>
</g>
<g >
<title>java/util/HashMap.get (31 samples, 0.06%)</title><rect x="1128.3" y="405" width="0.7" height="15.0" fill="rgb(250,98,14)" rx="2" ry="2" />
<text  x="1131.29" y="415.5" ></text>
</g>
<g >
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWordImpl**, unsigned long) (55 samples, 0.10%)</title><rect x="12.4" y="725" width="1.3" height="15.0" fill="rgb(241,99,42)" rx="2" ry="2" />
<text  x="15.45" y="735.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (8 samples, 0.01%)</title><rect x="831.2" y="341" width="0.1" height="15.0" fill="rgb(205,200,50)" rx="2" ry="2" />
<text  x="834.15" y="351.5" ></text>
</g>
<g >
<title>copy_user_generic_string (30 samples, 0.06%)</title><rect x="96.3" y="53" width="0.7" height="15.0" fill="rgb(210,45,36)" rx="2" ry="2" />
<text  x="99.33" y="63.5" ></text>
</g>
<g >
<title>java/util/regex/CharPredicates$$Lambda$49.0x0000000800b76b88.is (985 samples, 1.84%)</title><rect x="540.5" y="341" width="21.7" height="15.0" fill="rgb(239,131,37)" rx="2" ry="2" />
<text  x="543.50" y="351.5" >j..</text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (22 samples, 0.04%)</title><rect x="1078.4" y="277" width="0.5" height="15.0" fill="rgb(252,40,39)" rx="2" ry="2" />
<text  x="1081.44" y="287.5" ></text>
</g>
<g >
<title>new_sync_read (48 samples, 0.09%)</title><rect x="96.1" y="133" width="1.1" height="15.0" fill="rgb(253,55,27)" rx="2" ry="2" />
<text  x="99.15" y="143.5" ></text>
</g>
<g >
<title>jbyte_arraycopy (47 samples, 0.09%)</title><rect x="597.9" y="453" width="1.1" height="15.0" fill="rgb(206,223,43)" rx="2" ry="2" />
<text  x="600.94" y="463.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.newString (461 samples, 0.86%)</title><rect x="287.2" y="389" width="10.1" height="15.0" fill="rgb(237,183,32)" rx="2" ry="2" />
<text  x="290.15" y="399.5" ></text>
</g>
<g >
<title>java/util/zip/Inflater.inflateBytesBytes (2,338 samples, 4.37%)</title><rect x="44.1" y="309" width="51.5" height="15.0" fill="rgb(210,14,40)" rx="2" ry="2" />
<text  x="47.05" y="319.5" >java/..</text>
</g>
<g >
<title>[not_walkable_Java] (11 samples, 0.02%)</title><rect x="10.3" y="741" width="0.2" height="15.0" fill="rgb(247,189,34)" rx="2" ry="2" />
<text  x="13.26" y="751.5" ></text>
</g>
<g >
<title>java/lang/String.&lt;init&gt; (37 samples, 0.07%)</title><rect x="288.7" y="373" width="0.8" height="15.0" fill="rgb(207,13,49)" rx="2" ry="2" />
<text  x="291.72" y="383.5" ></text>
</g>
</g>
</svg>
