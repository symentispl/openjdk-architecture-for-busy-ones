<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="790.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="773" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="773" > </text>
<g id="frames">
<g >
<title>java/lang/StringBuffer.append (1,247 samples, 2.28%)</title><rect x="531.3" y="405" width="26.8" height="15.0" fill="rgb(228,180,51)" rx="2" ry="2" />
<text  x="534.27" y="415.5" >j..</text>
</g>
<g >
<title>[vdso] (8 samples, 0.01%)</title><rect x="13.3" y="725" width="0.2" height="15.0" fill="rgb(243,228,0)" rx="2" ry="2" />
<text  x="16.30" y="735.5" ></text>
</g>
<g >
<title>java/util/HashMap.putVal (51 samples, 0.09%)</title><rect x="1144.4" y="405" width="1.1" height="15.0" fill="rgb(226,217,30)" rx="2" ry="2" />
<text  x="1147.37" y="415.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (12 samples, 0.02%)</title><rect x="705.2" y="341" width="0.2" height="15.0" fill="rgb(207,101,35)" rx="2" ry="2" />
<text  x="708.16" y="351.5" ></text>
</g>
<g >
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (1,786 samples, 3.26%)</title><rect x="1146.0" y="661" width="38.5" height="15.0" fill="rgb(217,97,17)" rx="2" ry="2" />
<text  x="1149.00" y="671.5" >G1E..</text>
</g>
<g >
<title>G1RemSetScanState::G1ClearCardTableTask::work(unsigned int) (10 samples, 0.02%)</title><rect x="1186.0" y="661" width="0.3" height="15.0" fill="rgb(249,108,9)" rx="2" ry="2" />
<text  x="1189.04" y="671.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (51 samples, 0.09%)</title><rect x="1150.9" y="613" width="1.1" height="15.0" fill="rgb(222,73,8)" rx="2" ry="2" />
<text  x="1153.92" y="623.5" ></text>
</g>
<g >
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (52,306 samples, 95.50%)</title><rect x="18.7" y="581" width="1127.0" height="15.0" fill="rgb(245,127,38)" rx="2" ry="2" />
<text  x="21.70" y="591.5" >jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke</text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput.emit (3,953 samples, 7.22%)</title><rect x="285.0" y="437" width="85.2" height="15.0" fill="rgb(208,53,43)" rx="2" ry="2" />
<text  x="287.98" y="447.5" >pl/symenti..</text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.setLength (2,750 samples, 5.02%)</title><rect x="937.4" y="325" width="59.2" height="15.0" fill="rgb(248,1,53)" rx="2" ry="2" />
<text  x="940.36" y="335.5" >java/l..</text>
</g>
<g >
<title>Compilation::build_hir() [clone .part.95] (10 samples, 0.02%)</title><rect x="1187.8" y="565" width="0.2" height="15.0" fill="rgb(211,107,25)" rx="2" ry="2" />
<text  x="1190.82" y="575.5" ></text>
</g>
<g >
<title>java/lang/String.isLatin1 (21 samples, 0.04%)</title><rect x="248.8" y="309" width="0.5" height="15.0" fill="rgb(206,122,32)" rx="2" ry="2" />
<text  x="251.81" y="319.5" ></text>
</g>
<g >
<title>jdk/internal/util/ArraysSupport.newLength (20 samples, 0.04%)</title><rect x="647.0" y="341" width="0.4" height="15.0" fill="rgb(254,170,2)" rx="2" ry="2" />
<text  x="649.97" y="351.5" ></text>
</g>
<g >
<title>jbyte_arraycopy (21 samples, 0.04%)</title><rect x="657.9" y="341" width="0.5" height="15.0" fill="rgb(230,219,24)" rx="2" ry="2" />
<text  x="660.94" y="351.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.getTextLength (51 samples, 0.09%)</title><rect x="283.9" y="357" width="1.1" height="15.0" fill="rgb(225,4,45)" rx="2" ry="2" />
<text  x="286.86" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (5 samples, 0.01%)</title><rect x="1182.9" y="533" width="0.1" height="15.0" fill="rgb(228,107,47)" rx="2" ry="2" />
<text  x="1185.93" y="543.5" ></text>
</g>
<g >
<title>inflate (51 samples, 0.09%)</title><rect x="51.8" y="261" width="1.1" height="15.0" fill="rgb(224,2,52)" rx="2" ry="2" />
<text  x="54.76" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.01%)</title><rect x="54.1" y="197" width="0.2" height="15.0" fill="rgb(231,23,45)" rx="2" ry="2" />
<text  x="57.15" y="207.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/SequentialMapReduce$$Lambda$57.0x0000000800bbd558.iterator (27 samples, 0.05%)</title><rect x="1143.7" y="437" width="0.6" height="15.0" fill="rgb(246,87,9)" rx="2" ry="2" />
<text  x="1146.72" y="447.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11 (878 samples, 1.60%)</title><rect x="30.1" y="277" width="18.9" height="15.0" fill="rgb(229,53,9)" rx="2" ry="2" />
<text  x="33.12" y="287.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.append (17 samples, 0.03%)</title><rect x="55.5" y="405" width="0.4" height="15.0" fill="rgb(207,121,2)" rx="2" ry="2" />
<text  x="58.55" y="415.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmarksForked (6 samples, 0.01%)</title><rect x="1145.7" y="693" width="0.2" height="15.0" fill="rgb(232,191,47)" rx="2" ry="2" />
<text  x="1148.72" y="703.5" ></text>
</g>
<g >
<title>Compilation::emit_lir() (7 samples, 0.01%)</title><rect x="1188.1" y="565" width="0.2" height="15.0" fill="rgb(239,39,19)" rx="2" ry="2" />
<text  x="1191.10" y="575.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (7 samples, 0.01%)</title><rect x="369.0" y="277" width="0.1" height="15.0" fill="rgb(235,183,35)" rx="2" ry="2" />
<text  x="371.97" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="10.8" y="693" width="0.1" height="15.0" fill="rgb(236,228,27)" rx="2" ry="2" />
<text  x="13.75" y="703.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOf (567 samples, 1.04%)</title><rect x="647.4" y="357" width="12.2" height="15.0" fill="rgb(205,222,26)" rx="2" ry="2" />
<text  x="650.40" y="367.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.01%)</title><rect x="1187.9" y="357" width="0.1" height="15.0" fill="rgb(247,185,40)" rx="2" ry="2" />
<text  x="1190.87" y="367.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOf (989 samples, 1.81%)</title><rect x="743.8" y="261" width="21.3" height="15.0" fill="rgb(226,167,8)" rx="2" ry="2" />
<text  x="746.79" y="271.5" >j..</text>
</g>
<g >
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (6 samples, 0.01%)</title><rect x="705.5" y="261" width="0.1" height="15.0" fill="rgb(208,79,37)" rx="2" ry="2" />
<text  x="708.51" y="271.5" ></text>
</g>
<g >
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (48 samples, 0.09%)</title><rect x="1188.8" y="597" width="1.0" height="15.0" fill="rgb(212,0,45)" rx="2" ry="2" />
<text  x="1191.75" y="607.5" ></text>
</g>
<g >
<title>java/util/HashMap.compute (10 samples, 0.02%)</title><rect x="120.5" y="437" width="0.2" height="15.0" fill="rgb(210,214,20)" rx="2" ry="2" />
<text  x="123.51" y="447.5" ></text>
</g>
<g >
<title>java/text/RuleBasedCollator.getCollationKey (11 samples, 0.02%)</title><rect x="120.3" y="437" width="0.2" height="15.0" fill="rgb(223,73,39)" rx="2" ry="2" />
<text  x="123.27" y="447.5" ></text>
</g>
<g >
<title>java/util/zip/Inflater.inflateBytesBytes (1,065 samples, 1.94%)</title><rect x="30.0" y="293" width="22.9" height="15.0" fill="rgb(238,150,13)" rx="2" ry="2" />
<text  x="32.99" y="303.5" >j..</text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%)</title><rect x="10.8" y="677" width="0.1" height="15.0" fill="rgb(237,113,42)" rx="2" ry="2" />
<text  x="13.75" y="687.5" ></text>
</g>
<g >
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (6 samples, 0.01%)</title><rect x="1187.1" y="565" width="0.1" height="15.0" fill="rgb(250,47,34)" rx="2" ry="2" />
<text  x="1190.07" y="575.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (195 samples, 0.36%)</title><rect x="765.8" y="261" width="4.2" height="15.0" fill="rgb(236,20,50)" rx="2" ry="2" />
<text  x="768.79" y="271.5" ></text>
</g>
<g >
<title>sun/nio/cs/StreamDecoder.implRead (1,254 samples, 2.29%)</title><rect x="27.3" y="373" width="27.0" height="15.0" fill="rgb(241,67,24)" rx="2" ry="2" />
<text  x="30.28" y="383.5" >s..</text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (172 samples, 0.31%)</title><rect x="1174.6" y="581" width="3.7" height="15.0" fill="rgb(248,135,2)" rx="2" ry="2" />
<text  x="1177.64" y="591.5" ></text>
</g>
<g >
<title>jbyte_arraycopy (52 samples, 0.09%)</title><rect x="127.6" y="341" width="1.1" height="15.0" fill="rgb(233,209,53)" rx="2" ry="2" />
<text  x="130.55" y="351.5" ></text>
</g>
<g >
<title>copy_user_generic_string (20 samples, 0.04%)</title><rect x="53.4" y="37" width="0.4" height="15.0" fill="rgb(228,78,49)" rx="2" ry="2" />
<text  x="56.41" y="47.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (2,049 samples, 3.74%)</title><rect x="1145.9" y="709" width="44.1" height="15.0" fill="rgb(215,147,0)" rx="2" ry="2" />
<text  x="1148.85" y="719.5" >thre..</text>
</g>
<g >
<title>pl/symentis/wordcount/stopwords/ThreadLocalStopwords.contains (35,712 samples, 65.21%)</title><rect x="370.2" y="437" width="769.4" height="15.0" fill="rgb(213,132,39)" rx="2" ry="2" />
<text  x="373.15" y="447.5" >pl/symentis/wordcount/stopwords/ThreadLocalStopwords.contains</text>
</g>
<g >
<title>java/util/ArrayList.grow (33 samples, 0.06%)</title><rect x="138.7" y="373" width="0.7" height="15.0" fill="rgb(251,26,12)" rx="2" ry="2" />
<text  x="141.71" y="383.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountMapper.map (50,276 samples, 91.80%)</title><rect x="56.4" y="453" width="1083.2" height="15.0" fill="rgb(247,66,34)" rx="2" ry="2" />
<text  x="59.37" y="463.5" >pl/symentis/wordcount/WordCount$WordCountMapper.map</text>
</g>
<g >
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (22 samples, 0.04%)</title><rect x="1187.8" y="613" width="0.5" height="15.0" fill="rgb(228,124,0)" rx="2" ry="2" />
<text  x="1190.82" y="623.5" ></text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (52,308 samples, 95.51%)</title><rect x="18.7" y="709" width="1127.0" height="15.0" fill="rgb(210,191,48)" rx="2" ry="2" />
<text  x="21.70" y="719.5" >java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2,721 samples, 4.97%)</title><rect x="938.0" y="309" width="58.6" height="15.0" fill="rgb(218,215,44)" rx="2" ry="2" />
<text  x="940.98" y="319.5" >java/l..</text>
</g>
<g >
<title>Method::mask_for(int, InterpreterOopMap*) (5 samples, 0.01%)</title><rect x="1183.8" y="549" width="0.1" height="15.0" fill="rgb(210,88,12)" rx="2" ry="2" />
<text  x="1186.75" y="559.5" ></text>
</g>
<g >
<title>G1ScanCollectionSetRegionClosure::do_heap_region(HeapRegion*) (8 samples, 0.01%)</title><rect x="1184.3" y="613" width="0.2" height="15.0" fill="rgb(250,167,16)" rx="2" ry="2" />
<text  x="1187.29" y="623.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.toLowerCase (388 samples, 0.71%)</title><rect x="111.9" y="405" width="8.3" height="15.0" fill="rgb(252,65,27)" rx="2" ry="2" />
<text  x="114.89" y="415.5" ></text>
</g>
<g >
<title>java/util/AbstractList.subListRangeCheck (5 samples, 0.01%)</title><rect x="139.9" y="389" width="0.1" height="15.0" fill="rgb(251,89,39)" rx="2" ry="2" />
<text  x="142.92" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%)</title><rect x="1186.7" y="629" width="0.1" height="15.0" fill="rgb(229,5,5)" rx="2" ry="2" />
<text  x="1189.66" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.03%)</title><rect x="11.7" y="693" width="0.3" height="15.0" fill="rgb(220,200,5)" rx="2" ry="2" />
<text  x="14.70" y="703.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (7 samples, 0.01%)</title><rect x="1184.9" y="645" width="0.2" height="15.0" fill="rgb(251,71,44)" rx="2" ry="2" />
<text  x="1187.92" y="655.5" ></text>
</g>
<g >
<title>java/lang/StringBuffer.setLength (4,710 samples, 8.60%)</title><rect x="558.1" y="405" width="101.5" height="15.0" fill="rgb(220,49,36)" rx="2" ry="2" />
<text  x="561.14" y="415.5" >java/lang/St..</text>
</g>
<g >
<title>do_filp_open (6 samples, 0.01%)</title><rect x="11.4" y="629" width="0.2" height="15.0" fill="rgb(231,109,9)" rx="2" ry="2" />
<text  x="14.42" y="639.5" ></text>
</g>
<g >
<title>jint_disjoint_arraycopy (38 samples, 0.07%)</title><rect x="369.2" y="309" width="0.8" height="15.0" fill="rgb(232,200,44)" rx="2" ry="2" />
<text  x="372.21" y="319.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$LastNode.match (28 samples, 0.05%)</title><rect x="270.9" y="309" width="0.6" height="15.0" fill="rgb(225,225,16)" rx="2" ry="2" />
<text  x="273.94" y="319.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/NormalizerBase.setText (1,926 samples, 3.52%)</title><rect x="1077.5" y="389" width="41.5" height="15.0" fill="rgb(220,45,35)" rx="2" ry="2" />
<text  x="1080.53" y="399.5" >jdk..</text>
</g>
<g >
<title>ext4_file_read_iter (28 samples, 0.05%)</title><rect x="53.3" y="101" width="0.7" height="15.0" fill="rgb(216,184,53)" rx="2" ry="2" />
<text  x="56.35" y="111.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.01%)</title><rect x="1186.1" y="645" width="0.1" height="15.0" fill="rgb(247,189,17)" rx="2" ry="2" />
<text  x="1189.10" y="655.5" ></text>
</g>
<g >
<title>java/lang/String.equals (408 samples, 0.74%)</title><rect x="328.7" y="405" width="8.8" height="15.0" fill="rgb(215,17,21)" rx="2" ry="2" />
<text  x="331.68" y="415.5" ></text>
</g>
<g >
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWordImpl**, HeapWordImpl**, void const*) (5 samples, 0.01%)</title><rect x="1183.2" y="597" width="0.1" height="15.0" fill="rgb(230,123,12)" rx="2" ry="2" />
<text  x="1186.21" y="607.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (7 samples, 0.01%)</title><rect x="1187.8" y="501" width="0.2" height="15.0" fill="rgb(205,18,26)" rx="2" ry="2" />
<text  x="1190.82" y="511.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/jmh_generated/SequentialMapReduceWordCountBenchmark_countWords_jmhTest.countWords_thrpt_jmhStub (52,306 samples, 95.50%)</title><rect x="18.7" y="517" width="1127.0" height="15.0" fill="rgb(239,174,3)" rx="2" ry="2" />
<text  x="21.70" y="527.5" >pl/symentis/wordcount/jmh_generated/SequentialMapReduceWordCountBenchmark_countWords_jmhTest.countWords_thrpt_jmhStub</text>
</g>
<g >
<title>TaskTerminator::offer_termination(TerminatorTerminator*) (27 samples, 0.05%)</title><rect x="1180.8" y="613" width="0.5" height="15.0" fill="rgb(206,66,17)" rx="2" ry="2" />
<text  x="1183.76" y="623.5" ></text>
</g>
<g >
<title>G1MergeHeapRootsTask::work(unsigned int) (11 samples, 0.02%)</title><rect x="1184.9" y="661" width="0.2" height="15.0" fill="rgb(208,70,3)" rx="2" ry="2" />
<text  x="1187.89" y="671.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.append (2,876 samples, 5.25%)</title><rect x="708.0" y="293" width="62.0" height="15.0" fill="rgb(253,1,12)" rx="2" ry="2" />
<text  x="711.03" y="303.5" >java/l..</text>
</g>
<g >
<title>java/util/AbstractCollection.&lt;init&gt; (8 samples, 0.01%)</title><rect x="140.0" y="357" width="0.2" height="15.0" fill="rgb(237,70,2)" rx="2" ry="2" />
<text  x="143.05" y="367.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (5 samples, 0.01%)</title><rect x="1187.7" y="533" width="0.1" height="15.0" fill="rgb(235,43,0)" rx="2" ry="2" />
<text  x="1190.72" y="543.5" ></text>
</g>
<g >
<title>java/lang/String.toLowerCase (397 samples, 0.72%)</title><rect x="111.7" y="437" width="8.6" height="15.0" fill="rgb(232,59,5)" rx="2" ry="2" />
<text  x="114.72" y="447.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 0.01%)</title><rect x="1187.9" y="405" width="0.1" height="15.0" fill="rgb(216,19,46)" rx="2" ry="2" />
<text  x="1190.87" y="415.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.doSingle (6 samples, 0.01%)</title><rect x="1145.7" y="677" width="0.2" height="15.0" fill="rgb(242,70,45)" rx="2" ry="2" />
<text  x="1148.72" y="687.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.01%)</title><rect x="1151.9" y="597" width="0.1" height="15.0" fill="rgb(210,99,37)" rx="2" ry="2" />
<text  x="1154.91" y="607.5" ></text>
</g>
<g >
<title>jlong_disjoint_arraycopy (110 samples, 0.20%)</title><rect x="554.3" y="341" width="2.4" height="15.0" fill="rgb(236,53,20)" rx="2" ry="2" />
<text  x="557.28" y="351.5" ></text>
</g>
<g >
<title>copy_user_generic_string (6 samples, 0.01%)</title><rect x="18.6" y="629" width="0.1" height="15.0" fill="rgb(222,120,54)" rx="2" ry="2" />
<text  x="21.55" y="639.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::G1ParScanThreadState(G1CollectedHeap*, G1RedirtyCardsQueueSet*, unsigned int, unsigned long, unsigned long) (10 samples, 0.02%)</title><rect x="1184.0" y="629" width="0.2" height="15.0" fill="rgb(215,118,42)" rx="2" ry="2" />
<text  x="1187.03" y="639.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (13 samples, 0.02%)</title><rect x="705.1" y="357" width="0.3" height="15.0" fill="rgb(247,211,37)" rx="2" ry="2" />
<text  x="708.14" y="367.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (15 samples, 0.03%)</title><rect x="1187.3" y="565" width="0.4" height="15.0" fill="rgb(246,151,48)" rx="2" ry="2" />
<text  x="1190.35" y="575.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.01%)</title><rect x="30.0" y="277" width="0.1" height="15.0" fill="rgb(219,62,2)" rx="2" ry="2" />
<text  x="33.02" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_futex (13 samples, 0.02%)</title><rect x="11.7" y="661" width="0.3" height="15.0" fill="rgb(228,197,40)" rx="2" ry="2" />
<text  x="14.70" y="671.5" ></text>
</g>
<g >
<title>Compile::Code_Gen() (19 samples, 0.03%)</title><rect x="1186.9" y="597" width="0.4" height="15.0" fill="rgb(245,176,31)" rx="2" ry="2" />
<text  x="1189.92" y="607.5" ></text>
</g>
<g >
<title>VMThread::loop() (58 samples, 0.11%)</title><rect x="1188.6" y="661" width="1.2" height="15.0" fill="rgb(218,229,3)" rx="2" ry="2" />
<text  x="1191.56" y="671.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.appendCodePoint (2,987 samples, 5.45%)</title><rect x="705.6" y="357" width="64.4" height="15.0" fill="rgb(221,111,42)" rx="2" ry="2" />
<text  x="708.64" y="367.5" >java/la..</text>
</g>
<g >
<title>IR::IR(Compilation*, ciMethod*, int) (7 samples, 0.01%)</title><rect x="1187.8" y="549" width="0.2" height="15.0" fill="rgb(246,184,45)" rx="2" ry="2" />
<text  x="1190.82" y="559.5" ></text>
</g>
<g >
<title>java/lang/String.&lt;init&gt; (53 samples, 0.10%)</title><rect x="54.4" y="405" width="1.1" height="15.0" fill="rgb(231,206,20)" rx="2" ry="2" />
<text  x="57.36" y="415.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.01%)</title><rect x="369.0" y="245" width="0.1" height="15.0" fill="rgb(227,61,2)" rx="2" ry="2" />
<text  x="371.99" y="255.5" ></text>
</g>
<g >
<title>do_anonymous_page (5 samples, 0.01%)</title><rect x="1182.9" y="501" width="0.1" height="15.0" fill="rgb(224,131,31)" rx="2" ry="2" />
<text  x="1185.93" y="511.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/NormalizerBase.clearBuffer (243 samples, 0.44%)</title><rect x="1103.6" y="357" width="5.2" height="15.0" fill="rgb(247,37,26)" rx="2" ry="2" />
<text  x="1106.56" y="367.5" ></text>
</g>
<g >
<title>java/lang/String.charAt (166 samples, 0.30%)</title><rect x="248.1" y="325" width="3.6" height="15.0" fill="rgb(208,68,25)" rx="2" ry="2" />
<text  x="251.12" y="335.5" ></text>
</g>
<g >
<title>VMThread::run() (58 samples, 0.11%)</title><rect x="1188.6" y="677" width="1.2" height="15.0" fill="rgb(247,14,49)" rx="2" ry="2" />
<text  x="1191.56" y="687.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/ReplaceableString.charAt (1,049 samples, 1.92%)</title><rect x="997.7" y="309" width="22.6" height="15.0" fill="rgb(226,85,12)" rx="2" ry="2" />
<text  x="1000.69" y="319.5" >j..</text>
</g>
<g >
<title>wake_up_q (6 samples, 0.01%)</title><rect x="1186.7" y="565" width="0.1" height="15.0" fill="rgb(231,99,13)" rx="2" ry="2" />
<text  x="1189.66" y="575.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (8 samples, 0.01%)</title><rect x="705.5" y="325" width="0.1" height="15.0" fill="rgb(233,140,26)" rx="2" ry="2" />
<text  x="708.46" y="335.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$BranchConn.match (57 samples, 0.10%)</title><rect x="270.3" y="325" width="1.2" height="15.0" fill="rgb(248,144,16)" rx="2" ry="2" />
<text  x="273.31" y="335.5" ></text>
</g>
<g >
<title>put_timespec64 (6 samples, 0.01%)</title><rect x="18.6" y="645" width="0.1" height="15.0" fill="rgb(232,48,47)" rx="2" ry="2" />
<text  x="21.55" y="655.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.01%)</title><rect x="1186.7" y="597" width="0.1" height="15.0" fill="rgb(237,2,10)" rx="2" ry="2" />
<text  x="1189.66" y="607.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (6 samples, 0.01%)</title><rect x="369.0" y="261" width="0.1" height="15.0" fill="rgb(213,83,34)" rx="2" ry="2" />
<text  x="371.99" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_read (33 samples, 0.06%)</title><rect x="53.3" y="165" width="0.7" height="15.0" fill="rgb(218,89,47)" rx="2" ry="2" />
<text  x="56.31" y="175.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.reset (74 samples, 0.14%)</title><rect x="283.4" y="373" width="1.6" height="15.0" fill="rgb(231,54,3)" rx="2" ry="2" />
<text  x="286.37" y="383.5" ></text>
</g>
<g >
<title>G1CollectedHeap::post_evacuate_collection_set(G1EvacuationInfo&amp;, G1RedirtyCardsQueueSet*, G1ParScanThreadStateSet*) (17 samples, 0.03%)</title><rect x="1189.0" y="565" width="0.4" height="15.0" fill="rgb(251,118,37)" rx="2" ry="2" />
<text  x="1192.03" y="575.5" ></text>
</g>
<g >
<title>do_futex (9 samples, 0.02%)</title><rect x="11.8" y="645" width="0.2" height="15.0" fill="rgb(251,153,23)" rx="2" ry="2" />
<text  x="14.77" y="655.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOf (14 samples, 0.03%)</title><rect x="368.8" y="309" width="0.3" height="15.0" fill="rgb(207,204,16)" rx="2" ry="2" />
<text  x="371.82" y="319.5" ></text>
</g>
<g >
<title>java/lang/Thread.run (52,308 samples, 95.51%)</title><rect x="18.7" y="725" width="1127.0" height="15.0" fill="rgb(233,91,15)" rx="2" ry="2" />
<text  x="21.70" y="735.5" >java/lang/Thread.run</text>
</g>
<g >
<title>java/lang/StringBuilder.append (2,903 samples, 5.30%)</title><rect x="707.4" y="325" width="62.6" height="15.0" fill="rgb(245,61,20)" rx="2" ry="2" />
<text  x="710.45" y="335.5" >java/l..</text>
</g>
<g >
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (6 samples, 0.01%)</title><rect x="1118.9" y="229" width="0.1" height="15.0" fill="rgb(219,195,2)" rx="2" ry="2" />
<text  x="1121.88" y="239.5" ></text>
</g>
<g >
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (22 samples, 0.04%)</title><rect x="1187.8" y="629" width="0.5" height="15.0" fill="rgb(228,22,29)" rx="2" ry="2" />
<text  x="1190.82" y="639.5" ></text>
</g>
<g >
<title>java/util/HashMap.compute (19 samples, 0.03%)</title><rect x="56.0" y="453" width="0.4" height="15.0" fill="rgb(227,39,45)" rx="2" ry="2" />
<text  x="58.96" y="463.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOf (1,115 samples, 2.04%)</title><rect x="972.6" y="293" width="24.0" height="15.0" fill="rgb(233,27,9)" rx="2" ry="2" />
<text  x="975.59" y="303.5" >j..</text>
</g>
<g >
<title>pl/symentis/mapreduce/SequentialMapReduce.run (52,296 samples, 95.49%)</title><rect x="18.9" y="485" width="1126.8" height="15.0" fill="rgb(249,172,29)" rx="2" ry="2" />
<text  x="21.92" y="495.5" >pl/symentis/mapreduce/SequentialMapReduce.run</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="10.5" y="677" width="0.2" height="15.0" fill="rgb(215,76,10)" rx="2" ry="2" />
<text  x="13.54" y="687.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$FileLineInput.hasNext (1,645 samples, 3.00%)</title><rect x="20.5" y="469" width="35.4" height="15.0" fill="rgb(221,164,7)" rx="2" ry="2" />
<text  x="23.49" y="479.5" >pl/..</text>
</g>
<g >
<title>java/lang/StringBuffer.charAt (1,049 samples, 1.92%)</title><rect x="997.7" y="293" width="22.6" height="15.0" fill="rgb(231,29,10)" rx="2" ry="2" />
<text  x="1000.69" y="303.5" >j..</text>
</g>
<g >
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (29 samples, 0.05%)</title><rect x="1183.4" y="629" width="0.6" height="15.0" fill="rgb(239,216,38)" rx="2" ry="2" />
<text  x="1186.39" y="639.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$Branch.match (12 samples, 0.02%)</title><rect x="139.4" y="357" width="0.3" height="15.0" fill="rgb(213,145,52)" rx="2" ry="2" />
<text  x="142.42" y="367.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (8 samples, 0.01%)</title><rect x="705.5" y="277" width="0.1" height="15.0" fill="rgb(251,116,14)" rx="2" ry="2" />
<text  x="708.46" y="287.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2,374 samples, 4.33%)</title><rect x="714.0" y="277" width="51.1" height="15.0" fill="rgb(232,62,3)" rx="2" ry="2" />
<text  x="716.95" y="287.5" >java/..</text>
</g>
<g >
<title>java/text/CollationElementIterator.next (16,787 samples, 30.65%)</title><rect x="685.7" y="405" width="361.7" height="15.0" fill="rgb(231,57,32)" rx="2" ry="2" />
<text  x="688.69" y="415.5" >java/text/CollationElementIterator.next</text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (234 samples, 0.43%)</title><rect x="128.7" y="341" width="5.0" height="15.0" fill="rgb(236,216,51)" rx="2" ry="2" />
<text  x="131.67" y="351.5" ></text>
</g>
<g >
<title>java/lang/ThreadLocal.get (68 samples, 0.12%)</title><rect x="371.9" y="421" width="1.5" height="15.0" fill="rgb(250,129,34)" rx="2" ry="2" />
<text  x="374.90" y="431.5" ></text>
</g>
<g >
<title>java/util/concurrent/FutureTask.run (52,306 samples, 95.50%)</title><rect x="18.7" y="677" width="1127.0" height="15.0" fill="rgb(240,170,20)" rx="2" ry="2" />
<text  x="21.70" y="687.5" >java/util/concurrent/FutureTask.run</text>
</g>
<g >
<title>java/lang/Object.&lt;init&gt; (15 samples, 0.03%)</title><rect x="1118.5" y="325" width="0.3" height="15.0" fill="rgb(254,150,13)" rx="2" ry="2" />
<text  x="1121.49" y="335.5" ></text>
</g>
<g >
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (9 samples, 0.02%)</title><rect x="705.2" y="277" width="0.2" height="15.0" fill="rgb(241,174,20)" rx="2" ry="2" />
<text  x="708.21" y="287.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.search (31 samples, 0.06%)</title><rect x="284.3" y="325" width="0.7" height="15.0" fill="rgb(229,35,20)" rx="2" ry="2" />
<text  x="287.29" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (5 samples, 0.01%)</title><rect x="1182.9" y="597" width="0.1" height="15.0" fill="rgb(234,181,44)" rx="2" ry="2" />
<text  x="1185.93" y="607.5" ></text>
</g>
<g >
<title>jdk/internal/icu/impl/ReplaceableUCharacterIterator.previous (1,049 samples, 1.92%)</title><rect x="997.7" y="325" width="22.6" height="15.0" fill="rgb(209,55,13)" rx="2" ry="2" />
<text  x="1000.69" y="335.5" >j..</text>
</g>
<g >
<title>futex_wake (6 samples, 0.01%)</title><rect x="1186.7" y="581" width="0.1" height="15.0" fill="rgb(223,165,37)" rx="2" ry="2" />
<text  x="1189.66" y="591.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.charAt (113 samples, 0.21%)</title><rect x="249.3" y="309" width="2.4" height="15.0" fill="rgb(205,42,41)" rx="2" ry="2" />
<text  x="252.26" y="319.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::do_partial_array(PartialArrayScanTask) (25 samples, 0.05%)</title><rect x="1174.1" y="581" width="0.5" height="15.0" fill="rgb(217,228,32)" rx="2" ry="2" />
<text  x="1177.06" y="591.5" ></text>
</g>
<g >
<title>do_sys_openat2 (7 samples, 0.01%)</title><rect x="11.4" y="645" width="0.2" height="15.0" fill="rgb(209,77,35)" rx="2" ry="2" />
<text  x="14.42" y="655.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmark (6 samples, 0.01%)</title><rect x="1145.7" y="661" width="0.2" height="15.0" fill="rgb(233,27,44)" rx="2" ry="2" />
<text  x="1148.72" y="671.5" ></text>
</g>
<g >
<title>java/util/HashMap$HashIterator.nextNode (72 samples, 0.13%)</title><rect x="18.9" y="453" width="1.6" height="15.0" fill="rgb(205,114,7)" rx="2" ry="2" />
<text  x="21.92" y="463.5" ></text>
</g>
<g >
<title>java/lang/StringUTF16.compress (47 samples, 0.09%)</title><rect x="54.5" y="389" width="1.0" height="15.0" fill="rgb(214,6,20)" rx="2" ry="2" />
<text  x="57.49" y="399.5" ></text>
</g>
<g >
<title>java/util/regex/CharPredicates.lambda$ASCII_SPACE$20 (147 samples, 0.27%)</title><rect x="258.3" y="309" width="3.2" height="15.0" fill="rgb(250,209,18)" rx="2" ry="2" />
<text  x="261.31" y="319.5" ></text>
</g>
<g >
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (5 samples, 0.01%)</title><rect x="1118.9" y="213" width="0.1" height="15.0" fill="rgb(211,66,33)" rx="2" ry="2" />
<text  x="1121.88" y="223.5" ></text>
</g>
<g >
<title>G1ParEvacuateFollowersClosure::do_void() (1,715 samples, 3.13%)</title><rect x="1146.1" y="629" width="36.9" height="15.0" fill="rgb(243,189,53)" rx="2" ry="2" />
<text  x="1149.09" y="639.5" >G1P..</text>
</g>
<g >
<title>do_futex_wait.constprop.0 (25 samples, 0.05%)</title><rect x="10.9" y="709" width="0.5" height="15.0" fill="rgb(232,204,6)" rx="2" ry="2" />
<text  x="13.88" y="719.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.01%)</title><rect x="1118.4" y="325" width="0.1" height="15.0" fill="rgb(212,166,52)" rx="2" ry="2" />
<text  x="1121.36" y="335.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/UCharacterIterator.previousCodePoint (1,049 samples, 1.92%)</title><rect x="997.7" y="341" width="22.6" height="15.0" fill="rgb(210,106,52)" rx="2" ry="2" />
<text  x="1000.69" y="351.5" >j..</text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.01%)</title><rect x="10.4" y="709" width="0.1" height="15.0" fill="rgb(228,11,6)" rx="2" ry="2" />
<text  x="13.39" y="719.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOf (117 samples, 0.21%)</title><rect x="1106.3" y="293" width="2.5" height="15.0" fill="rgb(252,62,8)" rx="2" ry="2" />
<text  x="1109.27" y="303.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/UCharacterIterator.nextCodePoint (1,257 samples, 2.30%)</title><rect x="1020.3" y="357" width="27.1" height="15.0" fill="rgb(213,27,19)" rx="2" ry="2" />
<text  x="1023.29" y="367.5" >j..</text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.appendChars (10 samples, 0.02%)</title><rect x="55.5" y="389" width="0.3" height="15.0" fill="rgb(210,13,49)" rx="2" ry="2" />
<text  x="58.55" y="399.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.setLength (243 samples, 0.44%)</title><rect x="1103.6" y="325" width="5.2" height="15.0" fill="rgb(243,52,20)" rx="2" ry="2" />
<text  x="1106.56" y="335.5" ></text>
</g>
<g >
<title>java/util/HashMap.getNode (11 samples, 0.02%)</title><rect x="1144.1" y="373" width="0.2" height="15.0" fill="rgb(252,16,11)" rx="2" ry="2" />
<text  x="1147.07" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (209 samples, 0.38%)</title><rect x="14.2" y="693" width="4.5" height="15.0" fill="rgb(252,48,45)" rx="2" ry="2" />
<text  x="17.20" y="703.5" ></text>
</g>
<g >
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (5 samples, 0.01%)</title><rect x="1183.4" y="565" width="0.1" height="15.0" fill="rgb(206,190,33)" rx="2" ry="2" />
<text  x="1186.43" y="575.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOfRange (99 samples, 0.18%)</title><rect x="133.7" y="357" width="2.1" height="15.0" fill="rgb(236,140,50)" rx="2" ry="2" />
<text  x="136.71" y="367.5" ></text>
</g>
<g >
<title>GangWorker::loop() (1,900 samples, 3.47%)</title><rect x="1146.0" y="677" width="40.9" height="15.0" fill="rgb(217,5,4)" rx="2" ry="2" />
<text  x="1148.98" y="687.5" >Gan..</text>
</g>
<g >
<title>[unknown] (82 samples, 0.15%)</title><rect x="10.3" y="725" width="1.7" height="15.0" fill="rgb(208,159,3)" rx="2" ry="2" />
<text  x="13.26" y="735.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$Branch.match (4,716 samples, 8.61%)</title><rect x="171.8" y="357" width="101.6" height="15.0" fill="rgb(254,193,50)" rx="2" ry="2" />
<text  x="174.76" y="367.5" >java/util/re..</text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountMapper.map (50,295 samples, 91.83%)</title><rect x="56.0" y="469" width="1083.6" height="15.0" fill="rgb(209,126,29)" rx="2" ry="2" />
<text  x="58.96" y="479.5" >pl/symentis/wordcount/WordCount$WordCountMapper.map</text>
</g>
<g >
<title>java/util/ArrayList.subList (25 samples, 0.05%)</title><rect x="139.7" y="405" width="0.5" height="15.0" fill="rgb(235,28,32)" rx="2" ry="2" />
<text  x="142.68" y="415.5" ></text>
</g>
<g >
<title>sun/nio/cs/StreamDecoder.readBytes (1,133 samples, 2.07%)</title><rect x="29.9" y="357" width="24.4" height="15.0" fill="rgb(247,160,14)" rx="2" ry="2" />
<text  x="32.89" y="367.5" >s..</text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 0.01%)</title><rect x="1187.9" y="421" width="0.1" height="15.0" fill="rgb(243,128,44)" rx="2" ry="2" />
<text  x="1190.87" y="431.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.isLatin1 (6 samples, 0.01%)</title><rect x="675.3" y="389" width="0.2" height="15.0" fill="rgb(207,40,45)" rx="2" ry="2" />
<text  x="678.34" y="399.5" ></text>
</g>
<g >
<title>java/io/RandomAccessFile.read (47 samples, 0.09%)</title><rect x="53.1" y="261" width="1.0" height="15.0" fill="rgb(238,156,26)" rx="2" ry="2" />
<text  x="56.07" y="271.5" ></text>
</g>
<g >
<title>java/io/RandomAccessFile.readBytes (47 samples, 0.09%)</title><rect x="53.1" y="245" width="1.0" height="15.0" fill="rgb(211,144,39)" rx="2" ry="2" />
<text  x="56.07" y="255.5" ></text>
</g>
<g >
<title>java/io/RandomAccessFile.seek (10 samples, 0.02%)</title><rect x="54.1" y="261" width="0.2" height="15.0" fill="rgb(219,122,54)" rx="2" ry="2" />
<text  x="57.08" y="271.5" ></text>
</g>
<g >
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (7 samples, 0.01%)</title><rect x="1187.8" y="517" width="0.2" height="15.0" fill="rgb(214,10,41)" rx="2" ry="2" />
<text  x="1190.82" y="527.5" ></text>
</g>
<g >
<title>java/text/CollationElementIterator.next (19 samples, 0.03%)</title><rect x="1112.0" y="341" width="0.4" height="15.0" fill="rgb(238,185,40)" rx="2" ry="2" />
<text  x="1114.98" y="351.5" ></text>
</g>
<g >
<title>java/lang/Class.getResourceAsStream (8 samples, 0.01%)</title><rect x="18.7" y="485" width="0.2" height="15.0" fill="rgb(243,115,11)" rx="2" ry="2" />
<text  x="21.75" y="495.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (14 samples, 0.03%)</title><rect x="1180.2" y="597" width="0.3" height="15.0" fill="rgb(233,217,15)" rx="2" ry="2" />
<text  x="1183.15" y="607.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::trim_queue() (1,333 samples, 2.43%)</title><rect x="1152.0" y="613" width="28.7" height="15.0" fill="rgb(239,26,34)" rx="2" ry="2" />
<text  x="1155.02" y="623.5" >G1..</text>
</g>
<g >
<title>VM_G1CollectForAllocation::doit() (53 samples, 0.10%)</title><rect x="1188.7" y="613" width="1.1" height="15.0" fill="rgb(230,205,31)" rx="2" ry="2" />
<text  x="1191.66" y="623.5" ></text>
</g>
<g >
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.01%)</title><rect x="705.5" y="309" width="0.1" height="15.0" fill="rgb(235,113,6)" rx="2" ry="2" />
<text  x="708.46" y="319.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (12 samples, 0.02%)</title><rect x="13.5" y="725" width="0.3" height="15.0" fill="rgb(219,5,1)" rx="2" ry="2" />
<text  x="16.51" y="735.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.01%)</title><rect x="1187.7" y="597" width="0.1" height="15.0" fill="rgb(206,99,15)" rx="2" ry="2" />
<text  x="1190.72" y="607.5" ></text>
</g>
<g >
<title>java/lang/StringBuffer.&lt;init&gt; (9 samples, 0.02%)</title><rect x="1118.8" y="325" width="0.2" height="15.0" fill="rgb(234,229,47)" rx="2" ry="2" />
<text  x="1121.81" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (206 samples, 0.38%)</title><rect x="14.3" y="677" width="4.4" height="15.0" fill="rgb(253,178,4)" rx="2" ry="2" />
<text  x="17.27" y="687.5" ></text>
</g>
<g >
<title>java/lang/String.checkIndex (54 samples, 0.10%)</title><rect x="1036.2" y="277" width="1.1" height="15.0" fill="rgb(206,175,19)" rx="2" ry="2" />
<text  x="1039.17" y="287.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (216 samples, 0.39%)</title><rect x="1104.1" y="309" width="4.7" height="15.0" fill="rgb(248,80,39)" rx="2" ry="2" />
<text  x="1107.14" y="319.5" ></text>
</g>
<g >
<title>sun/nio/cs/StreamDecoder.read (1,254 samples, 2.29%)</title><rect x="27.3" y="389" width="27.0" height="15.0" fill="rgb(239,142,7)" rx="2" ry="2" />
<text  x="30.28" y="399.5" >s..</text>
</g>
<g >
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (67 samples, 0.12%)</title><rect x="1186.9" y="645" width="1.5" height="15.0" fill="rgb(246,59,22)" rx="2" ry="2" />
<text  x="1189.92" y="655.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (153 samples, 0.28%)</title><rect x="771.2" y="293" width="3.3" height="15.0" fill="rgb(205,41,33)" rx="2" ry="2" />
<text  x="774.22" y="303.5" ></text>
</g>
<g >
<title>Java_java_util_zip_Inflater_inflateBytesBytes (5 samples, 0.01%)</title><rect x="49.0" y="277" width="0.1" height="15.0" fill="rgb(233,191,8)" rx="2" ry="2" />
<text  x="52.04" y="287.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (5 samples, 0.01%)</title><rect x="1118.4" y="293" width="0.1" height="15.0" fill="rgb(247,217,22)" rx="2" ry="2" />
<text  x="1121.36" y="303.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/ReplaceableString.length (72 samples, 0.13%)</title><rect x="934.5" y="341" width="1.5" height="15.0" fill="rgb(224,56,30)" rx="2" ry="2" />
<text  x="937.49" y="351.5" ></text>
</g>
<g >
<title>ConcurrentGCThread::run() (5 samples, 0.01%)</title><rect x="1145.9" y="677" width="0.1" height="15.0" fill="rgb(226,18,7)" rx="2" ry="2" />
<text  x="1148.85" y="687.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput.lambda$emit$0 (6 samples, 0.01%)</title><rect x="370.0" y="405" width="0.2" height="15.0" fill="rgb(217,17,21)" rx="2" ry="2" />
<text  x="373.02" y="415.5" ></text>
</g>
<g >
<title>java/util/zip/Inflater.inflate (1,067 samples, 1.95%)</title><rect x="30.0" y="309" width="22.9" height="15.0" fill="rgb(249,53,0)" rx="2" ry="2" />
<text  x="32.95" y="319.5" >j..</text>
</g>
<g >
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (7 samples, 0.01%)</title><rect x="1187.8" y="533" width="0.2" height="15.0" fill="rgb(210,179,14)" rx="2" ry="2" />
<text  x="1190.82" y="543.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (7 samples, 0.01%)</title><rect x="1187.8" y="485" width="0.2" height="15.0" fill="rgb(227,45,52)" rx="2" ry="2" />
<text  x="1190.82" y="495.5" ></text>
</g>
<g >
<title>java/io/BufferedReader.readLine (1,639 samples, 2.99%)</title><rect x="20.6" y="453" width="35.3" height="15.0" fill="rgb(225,106,33)" rx="2" ry="2" />
<text  x="23.62" y="463.5" >ja..</text>
</g>
<g >
<title>copy_page_to_iter (20 samples, 0.04%)</title><rect x="53.4" y="53" width="0.4" height="15.0" fill="rgb(250,134,48)" rx="2" ry="2" />
<text  x="56.41" y="63.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.append (990 samples, 1.81%)</title><rect x="536.8" y="389" width="21.3" height="15.0" fill="rgb(249,30,31)" rx="2" ry="2" />
<text  x="539.81" y="399.5" >j..</text>
</g>
<g >
<title>java/util/zip/InflaterInputStream.read (1,133 samples, 2.07%)</title><rect x="29.9" y="325" width="24.4" height="15.0" fill="rgb(251,212,9)" rx="2" ry="2" />
<text  x="32.89" y="335.5" >j..</text>
</g>
<g >
<title>do_futex_wait.constprop.0 (8 samples, 0.01%)</title><rect x="10.5" y="693" width="0.2" height="15.0" fill="rgb(206,151,10)" rx="2" ry="2" />
<text  x="13.52" y="703.5" ></text>
</g>
<g >
<title>java/text/RuleBasedCollationKey.&lt;init&gt; (295 samples, 0.54%)</title><rect x="1119.7" y="405" width="6.4" height="15.0" fill="rgb(213,7,3)" rx="2" ry="2" />
<text  x="1122.72" y="415.5" ></text>
</g>
<g >
<title>HeapRegion::hr_clear(bool) (5 samples, 0.01%)</title><rect x="1184.7" y="613" width="0.1" height="15.0" fill="rgb(220,147,38)" rx="2" ry="2" />
<text  x="1187.66" y="623.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (22 samples, 0.04%)</title><rect x="119.8" y="389" width="0.4" height="15.0" fill="rgb(220,57,3)" rx="2" ry="2" />
<text  x="122.77" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_lseek (6 samples, 0.01%)</title><rect x="54.2" y="181" width="0.1" height="15.0" fill="rgb(225,181,10)" rx="2" ry="2" />
<text  x="57.17" y="191.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.append (210 samples, 0.38%)</title><rect x="770.0" y="341" width="4.5" height="15.0" fill="rgb(221,208,38)" rx="2" ry="2" />
<text  x="772.99" y="351.5" ></text>
</g>
<g >
<title>java/lang/String.&lt;init&gt; (55 samples, 0.10%)</title><rect x="54.4" y="421" width="1.1" height="15.0" fill="rgb(232,155,29)" rx="2" ry="2" />
<text  x="57.36" y="431.5" ></text>
</g>
<g >
<title>CompileBroker::compiler_thread_loop() (68 samples, 0.12%)</title><rect x="1186.9" y="661" width="1.5" height="15.0" fill="rgb(253,94,46)" rx="2" ry="2" />
<text  x="1189.92" y="671.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.01%)</title><rect x="1118.4" y="277" width="0.1" height="15.0" fill="rgb(240,168,49)" rx="2" ry="2" />
<text  x="1121.36" y="287.5" ></text>
</g>
<g >
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.74] (53 samples, 0.10%)</title><rect x="1188.7" y="645" width="1.1" height="15.0" fill="rgb(216,86,31)" rx="2" ry="2" />
<text  x="1191.66" y="655.5" ></text>
</g>
<g >
<title>java/util/ArrayList.add (860 samples, 1.57%)</title><rect x="351.5" y="373" width="18.5" height="15.0" fill="rgb(246,217,19)" rx="2" ry="2" />
<text  x="354.50" y="383.5" ></text>
</g>
<g >
<title>java/text/RuleBasedCollationKey.compareTo (360 samples, 0.66%)</title><rect x="1131.8" y="357" width="7.8" height="15.0" fill="rgb(234,184,24)" rx="2" ry="2" />
<text  x="1134.83" y="367.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (51 samples, 0.09%)</title><rect x="1163.7" y="597" width="1.1" height="15.0" fill="rgb(208,222,0)" rx="2" ry="2" />
<text  x="1166.71" y="607.5" ></text>
</g>
<g >
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWordImpl**, unsigned long) (8 samples, 0.01%)</title><rect x="136.7" y="373" width="0.2" height="15.0" fill="rgb(245,203,43)" rx="2" ry="2" />
<text  x="139.71" y="383.5" ></text>
</g>
<g >
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (52,306 samples, 95.50%)</title><rect x="18.7" y="549" width="1127.0" height="15.0" fill="rgb(241,5,49)" rx="2" ry="2" />
<text  x="21.70" y="559.5" >jdk/internal/reflect/NativeMethodAccessorImpl.invoke0</text>
</g>
<g >
<title>void WeakProcessor::Task::work&lt;G1STWIsAliveClosure, G1KeepAliveClosure&gt;(unsigned int, G1STWIsAliveClosure*, G1KeepAliveClosure*) (6 samples, 0.01%)</title><rect x="1186.8" y="661" width="0.1" height="15.0" fill="rgb(221,63,11)" rx="2" ry="2" />
<text  x="1189.79" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.06%)</title><rect x="53.3" y="197" width="0.7" height="15.0" fill="rgb(230,63,38)" rx="2" ry="2" />
<text  x="56.31" y="207.5" ></text>
</g>
<g >
<title>java/text/RuleBasedCollationKey.compareTo (367 samples, 0.67%)</title><rect x="1131.7" y="373" width="7.9" height="15.0" fill="rgb(220,30,16)" rx="2" ry="2" />
<text  x="1134.68" y="383.5" ></text>
</g>
<g >
<title>java/lang/StringUTF16.length (7 samples, 0.01%)</title><rect x="558.0" y="341" width="0.1" height="15.0" fill="rgb(249,105,46)" rx="2" ry="2" />
<text  x="560.99" y="351.5" ></text>
</g>
<g >
<title>java/util/ArrayList.grow (6 samples, 0.01%)</title><rect x="370.0" y="357" width="0.2" height="15.0" fill="rgb(217,93,19)" rx="2" ry="2" />
<text  x="373.02" y="367.5" ></text>
</g>
<g >
<title>__read (36 samples, 0.07%)</title><rect x="53.2" y="213" width="0.8" height="15.0" fill="rgb(231,136,47)" rx="2" ry="2" />
<text  x="56.24" y="223.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOf (78 samples, 0.14%)</title><rect x="772.8" y="277" width="1.7" height="15.0" fill="rgb(213,81,34)" rx="2" ry="2" />
<text  x="775.84" y="287.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/SequentialMapReduceWordCountBenchmark$$Lambda$55.0x0000000800bbd0f8.emit (54 samples, 0.10%)</title><rect x="1144.3" y="437" width="1.2" height="15.0" fill="rgb(247,202,45)" rx="2" ry="2" />
<text  x="1147.30" y="447.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2,533 samples, 4.62%)</title><rect x="605.0" y="373" width="54.6" height="15.0" fill="rgb(249,126,39)" rx="2" ry="2" />
<text  x="608.04" y="383.5" >java/..</text>
</g>
<g >
<title>java/lang/StringLatin1.hashCode (287 samples, 0.52%)</title><rect x="342.0" y="373" width="6.2" height="15.0" fill="rgb(207,152,45)" rx="2" ry="2" />
<text  x="344.99" y="383.5" ></text>
</g>
<g >
<title>clock_gettime (229 samples, 0.42%)</title><rect x="13.8" y="725" width="4.9" height="15.0" fill="rgb(225,77,25)" rx="2" ry="2" />
<text  x="16.77" y="735.5" ></text>
</g>
<g >
<title>java/lang/Long.valueOf (6 samples, 0.01%)</title><rect x="1143.4" y="437" width="0.1" height="15.0" fill="rgb(217,145,52)" rx="2" ry="2" />
<text  x="1146.35" y="447.5" ></text>
</g>
<g >
<title>G1CollectedHeap::evacuate_initial_collection_set(G1ParScanThreadStateSet*) (10 samples, 0.02%)</title><rect x="1188.8" y="565" width="0.2" height="15.0" fill="rgb(239,68,13)" rx="2" ry="2" />
<text  x="1191.82" y="575.5" ></text>
</g>
<g >
<title>VM_Operation::evaluate() (53 samples, 0.10%)</title><rect x="1188.7" y="629" width="1.1" height="15.0" fill="rgb(254,116,11)" rx="2" ry="2" />
<text  x="1191.66" y="639.5" ></text>
</g>
<g >
<title>java/lang/CharacterDataLatin1.toLowerCase (240 samples, 0.44%)</title><rect x="114.6" y="389" width="5.2" height="15.0" fill="rgb(209,210,36)" rx="2" ry="2" />
<text  x="117.58" y="399.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/NormalizerBase.next (16,179 samples, 29.54%)</title><rect x="698.8" y="389" width="348.6" height="15.0" fill="rgb(250,201,52)" rx="2" ry="2" />
<text  x="701.79" y="399.5" >jdk/internal/icu/text/NormalizerBase.next</text>
</g>
<g >
<title>jdk/internal/icu/impl/ReplaceableUCharacterIterator.&lt;init&gt; (431 samples, 0.79%)</title><rect x="1109.7" y="357" width="9.3" height="15.0" fill="rgb(219,97,7)" rx="2" ry="2" />
<text  x="1112.74" y="367.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/NormalizerBase.nextNormalize (16,166 samples, 29.52%)</title><rect x="699.1" y="373" width="348.3" height="15.0" fill="rgb(217,206,27)" rx="2" ry="2" />
<text  x="702.07" y="383.5" >jdk/internal/icu/text/NormalizerBase.nextNormal..</text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="10.6" y="645" width="0.1" height="15.0" fill="rgb(216,219,15)" rx="2" ry="2" />
<text  x="13.56" y="655.5" ></text>
</g>
<g >
<title>java/util/HashMap.compute (3,926 samples, 7.17%)</title><rect x="285.4" y="421" width="84.6" height="15.0" fill="rgb(224,186,28)" rx="2" ry="2" />
<text  x="288.44" y="431.5" >java/util..</text>
</g>
<g >
<title>java/lang/StringBuffer.toString (1,210 samples, 2.21%)</title><rect x="659.6" y="405" width="26.1" height="15.0" fill="rgb(221,100,38)" rx="2" ry="2" />
<text  x="662.62" y="415.5" >j..</text>
</g>
<g >
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.01%)</title><rect x="1187.9" y="469" width="0.1" height="15.0" fill="rgb(224,83,6)" rx="2" ry="2" />
<text  x="1190.87" y="479.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$Start.match (12 samples, 0.02%)</title><rect x="139.4" y="373" width="0.3" height="15.0" fill="rgb(252,93,27)" rx="2" ry="2" />
<text  x="142.42" y="383.5" ></text>
</g>
<g >
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.03%)</title><rect x="285.1" y="421" width="0.3" height="15.0" fill="rgb(225,112,20)" rx="2" ry="2" />
<text  x="288.09" y="431.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.01%)</title><rect x="369.0" y="293" width="0.1" height="15.0" fill="rgb(207,24,18)" rx="2" ry="2" />
<text  x="371.97" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="10.8" y="661" width="0.1" height="15.0" fill="rgb(252,94,1)" rx="2" ry="2" />
<text  x="13.75" y="671.5" ></text>
</g>
<g >
<title>futex_wake (6 samples, 0.01%)</title><rect x="10.8" y="629" width="0.1" height="15.0" fill="rgb(239,49,40)" rx="2" ry="2" />
<text  x="13.75" y="639.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountMapper.map (9 samples, 0.02%)</title><rect x="1145.5" y="437" width="0.2" height="15.0" fill="rgb(218,127,27)" rx="2" ry="2" />
<text  x="1148.47" y="447.5" ></text>
</g>
<g >
<title>java/nio/charset/CharsetDecoder.decode (119 samples, 0.22%)</title><rect x="27.3" y="357" width="2.6" height="15.0" fill="rgb(227,24,2)" rx="2" ry="2" />
<text  x="30.30" y="367.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (5 samples, 0.01%)</title><rect x="1187.7" y="565" width="0.1" height="15.0" fill="rgb(213,2,16)" rx="2" ry="2" />
<text  x="1190.72" y="575.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.01%)</title><rect x="10.4" y="693" width="0.1" height="15.0" fill="rgb(239,157,54)" rx="2" ry="2" />
<text  x="13.39" y="703.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.append (17 samples, 0.03%)</title><rect x="55.5" y="421" width="0.4" height="15.0" fill="rgb(254,228,6)" rx="2" ry="2" />
<text  x="58.55" y="431.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.isLatin1 (12 samples, 0.02%)</title><rect x="1020.0" y="261" width="0.3" height="15.0" fill="rgb(234,169,45)" rx="2" ry="2" />
<text  x="1023.03" y="271.5" ></text>
</g>
<g >
<title>java/lang/StringUTF16.checkIndex (69 samples, 0.13%)</title><rect x="556.7" y="357" width="1.4" height="15.0" fill="rgb(239,116,25)" rx="2" ry="2" />
<text  x="559.65" y="367.5" ></text>
</g>
<g >
<title>G1PrepareEvacuationTask::work(unsigned int) (37 samples, 0.07%)</title><rect x="1185.1" y="661" width="0.8" height="15.0" fill="rgb(208,107,51)" rx="2" ry="2" />
<text  x="1188.13" y="671.5" ></text>
</g>
<g >
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (8 samples, 0.01%)</title><rect x="1183.7" y="565" width="0.2" height="15.0" fill="rgb(245,155,30)" rx="2" ry="2" />
<text  x="1186.69" y="575.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (9 samples, 0.02%)</title><rect x="1118.8" y="309" width="0.2" height="15.0" fill="rgb(233,83,33)" rx="2" ry="2" />
<text  x="1121.81" y="319.5" ></text>
</g>
<g >
<title>__lock_text_start (6 samples, 0.01%)</title><rect x="1186.7" y="533" width="0.1" height="15.0" fill="rgb(210,114,5)" rx="2" ry="2" />
<text  x="1189.66" y="543.5" ></text>
</g>
<g >
<title>G1ParScanThreadStateSet::state_for_worker(unsigned int) (11 samples, 0.02%)</title><rect x="1184.0" y="645" width="0.2" height="15.0" fill="rgb(206,34,46)" rx="2" ry="2" />
<text  x="1187.01" y="655.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.01%)</title><rect x="10.8" y="645" width="0.1" height="15.0" fill="rgb(223,25,54)" rx="2" ry="2" />
<text  x="13.75" y="655.5" ></text>
</g>
<g >
<title>jint_disjoint_arraycopy (20 samples, 0.04%)</title><rect x="141.8" y="389" width="0.4" height="15.0" fill="rgb(218,18,2)" rx="2" ry="2" />
<text  x="144.79" y="399.5" ></text>
</g>
<g >
<title>java/util/zip/ZipFile$ZipFileInputStream.read (60 samples, 0.11%)</title><rect x="53.0" y="293" width="1.3" height="15.0" fill="rgb(242,101,39)" rx="2" ry="2" />
<text  x="56.00" y="303.5" ></text>
</g>
<g >
<title>void objArrayOopDesc::oop_iterate_range&lt;G1ScanEvacuatedObjClosure&gt;(G1ScanEvacuatedObjClosure*, int, int) (71 samples, 0.13%)</title><rect x="1181.5" y="613" width="1.5" height="15.0" fill="rgb(231,121,46)" rx="2" ry="2" />
<text  x="1184.51" y="623.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.end (93 samples, 0.17%)</title><rect x="140.2" y="405" width="2.0" height="15.0" fill="rgb(243,137,50)" rx="2" ry="2" />
<text  x="143.22" y="415.5" ></text>
</g>
<g >
<title>java/util/TreeSet.contains (416 samples, 0.76%)</title><rect x="1130.6" y="421" width="9.0" height="15.0" fill="rgb(231,39,35)" rx="2" ry="2" />
<text  x="1133.62" y="431.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/jmh_generated/SequentialMapReduceWordCountBenchmark_countWords_jmhTest.countWords_Throughput (52,306 samples, 95.50%)</title><rect x="18.7" y="533" width="1127.0" height="15.0" fill="rgb(210,98,13)" rx="2" ry="2" />
<text  x="21.70" y="543.5" >pl/symentis/wordcount/jmh_generated/SequentialMapReduceWordCountBenchmark_countWords_jmhTest.countWords_Throughput</text>
</g>
<g >
<title>java/util/regex/Pattern$BmpCharProperty.match (12 samples, 0.02%)</title><rect x="139.4" y="341" width="0.3" height="15.0" fill="rgb(238,63,35)" rx="2" ry="2" />
<text  x="142.42" y="351.5" ></text>
</g>
<g >
<title>java/lang/String.substring (562 samples, 1.03%)</title><rect x="123.8" y="389" width="12.1" height="15.0" fill="rgb(226,166,16)" rx="2" ry="2" />
<text  x="126.80" y="399.5" ></text>
</g>
<g >
<title>java/text/CollationKey.&lt;init&gt; (48 samples, 0.09%)</title><rect x="1125.0" y="389" width="1.1" height="15.0" fill="rgb(234,211,5)" rx="2" ry="2" />
<text  x="1128.04" y="399.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.putStringAt (131 samples, 0.24%)</title><rect x="553.8" y="373" width="2.9" height="15.0" fill="rgb(222,131,1)" rx="2" ry="2" />
<text  x="556.83" y="383.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern.split (7,624 samples, 13.92%)</title><rect x="120.7" y="437" width="164.3" height="15.0" fill="rgb(230,75,27)" rx="2" ry="2" />
<text  x="123.72" y="447.5" >java/util/regex/Patte..</text>
</g>
<g >
<title>java/util/regex/Matcher.find (6,087 samples, 11.11%)</title><rect x="142.2" y="405" width="131.2" height="15.0" fill="rgb(251,96,4)" rx="2" ry="2" />
<text  x="145.22" y="415.5" >java/util/regex/..</text>
</g>
<g >
<title>java/util/regex/Pattern$LastNode.match (85 samples, 0.16%)</title><rect x="271.5" y="325" width="1.9" height="15.0" fill="rgb(232,21,11)" rx="2" ry="2" />
<text  x="274.54" y="335.5" ></text>
</g>
<g >
<title>Compile::Compile(ciEnv*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (42 samples, 0.08%)</title><rect x="1186.9" y="613" width="0.9" height="15.0" fill="rgb(206,201,37)" rx="2" ry="2" />
<text  x="1189.92" y="623.5" ></text>
</g>
<g >
<title>G1CollectedHeap::do_collection_pause_at_safepoint_helper(double) (46 samples, 0.08%)</title><rect x="1188.8" y="581" width="0.9" height="15.0" fill="rgb(215,97,10)" rx="2" ry="2" />
<text  x="1191.75" y="591.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;TypeArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (7 samples, 0.01%)</title><rect x="1180.6" y="597" width="0.1" height="15.0" fill="rgb(227,118,30)" rx="2" ry="2" />
<text  x="1183.58" y="607.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (52,306 samples, 95.50%)</title><rect x="18.7" y="629" width="1127.0" height="15.0" fill="rgb(209,153,52)" rx="2" ry="2" />
<text  x="21.70" y="639.5" >org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call</text>
</g>
<g >
<title>java/lang/StringUTF16.putCharSB (227 samples, 0.41%)</title><rect x="765.1" y="277" width="4.9" height="15.0" fill="rgb(245,129,47)" rx="2" ry="2" />
<text  x="768.10" y="287.5" ></text>
</g>
<g >
<title>java/util/AbstractList.&lt;init&gt; (8 samples, 0.01%)</title><rect x="140.0" y="373" width="0.2" height="15.0" fill="rgb(248,54,13)" rx="2" ry="2" />
<text  x="143.05" y="383.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.appendCodePoint (2,963 samples, 5.41%)</title><rect x="706.2" y="341" width="63.8" height="15.0" fill="rgb(237,61,42)" rx="2" ry="2" />
<text  x="709.15" y="351.5" >java/la..</text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.02%)</title><rect x="13.6" y="693" width="0.2" height="15.0" fill="rgb(223,190,52)" rx="2" ry="2" />
<text  x="16.55" y="703.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.canEncode (5 samples, 0.01%)</title><rect x="55.7" y="373" width="0.1" height="15.0" fill="rgb(236,164,30)" rx="2" ry="2" />
<text  x="58.65" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.01%)</title><rect x="1182.9" y="549" width="0.1" height="15.0" fill="rgb(249,136,15)" rx="2" ry="2" />
<text  x="1185.93" y="559.5" ></text>
</g>
<g >
<title>java/util/concurrent/Executors$RunnableAdapter.call (52,306 samples, 95.50%)</title><rect x="18.7" y="661" width="1127.0" height="15.0" fill="rgb(225,46,43)" rx="2" ry="2" />
<text  x="21.70" y="671.5" >java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g >
<title>jbyte_arraycopy (22 samples, 0.04%)</title><rect x="765.3" y="261" width="0.5" height="15.0" fill="rgb(208,209,37)" rx="2" ry="2" />
<text  x="768.32" y="271.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.newCapacity (49 samples, 0.09%)</title><rect x="546.7" y="357" width="1.1" height="15.0" fill="rgb(230,181,4)" rx="2" ry="2" />
<text  x="549.72" y="367.5" ></text>
</g>
<g >
<title>java/lang/String.coder (5 samples, 0.01%)</title><rect x="284.2" y="325" width="0.1" height="15.0" fill="rgb(251,150,49)" rx="2" ry="2" />
<text  x="287.19" y="335.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/SequentialMapReduceWordCountBenchmark.countWords (52,306 samples, 95.50%)</title><rect x="18.7" y="501" width="1127.0" height="15.0" fill="rgb(220,116,19)" rx="2" ry="2" />
<text  x="21.70" y="511.5" >pl/symentis/wordcount/SequentialMapReduceWordCountBenchmark.countWords</text>
</g>
<g >
<title>[unknown] (172 samples, 0.31%)</title><rect x="49.1" y="277" width="3.8" height="15.0" fill="rgb(232,8,41)" rx="2" ry="2" />
<text  x="52.15" y="287.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.01%)</title><rect x="10.6" y="629" width="0.1" height="15.0" fill="rgb(235,75,12)" rx="2" ry="2" />
<text  x="13.56" y="639.5" ></text>
</g>
<g >
<title>java/lang/String.compareTo (327 samples, 0.60%)</title><rect x="1132.5" y="341" width="7.1" height="15.0" fill="rgb(238,8,40)" rx="2" ry="2" />
<text  x="1135.54" y="351.5" ></text>
</g>
<g >
<title>java/lang/String.length (23 samples, 0.04%)</title><rect x="124.9" y="373" width="0.5" height="15.0" fill="rgb(231,174,12)" rx="2" ry="2" />
<text  x="127.86" y="383.5" ></text>
</g>
<g >
<title>[unknown_Java] (59 samples, 0.11%)</title><rect x="12.0" y="725" width="1.3" height="15.0" fill="rgb(237,14,18)" rx="2" ry="2" />
<text  x="15.03" y="735.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (12 samples, 0.02%)</title><rect x="705.2" y="309" width="0.2" height="15.0" fill="rgb(233,49,47)" rx="2" ry="2" />
<text  x="708.16" y="319.5" ></text>
</g>
<g >
<title>jdk/internal/icu/impl/ReplaceableUCharacterIterator.setIndex (76 samples, 0.14%)</title><rect x="1101.9" y="357" width="1.7" height="15.0" fill="rgb(252,100,43)" rx="2" ry="2" />
<text  x="1104.92" y="367.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (5 samples, 0.01%)</title><rect x="1181.3" y="613" width="0.1" height="15.0" fill="rgb(219,172,42)" rx="2" ry="2" />
<text  x="1184.34" y="623.5" ></text>
</g>
<g >
<title>jdk/internal/util/ArraysSupport.newLength (25 samples, 0.05%)</title><rect x="547.2" y="341" width="0.6" height="15.0" fill="rgb(254,14,48)" rx="2" ry="2" />
<text  x="550.24" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (195 samples, 0.36%)</title><rect x="14.5" y="661" width="4.2" height="15.0" fill="rgb(236,11,41)" rx="2" ry="2" />
<text  x="17.50" y="671.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/ForkedMain.main (6 samples, 0.01%)</title><rect x="1145.7" y="725" width="0.2" height="15.0" fill="rgb(238,154,4)" rx="2" ry="2" />
<text  x="1148.72" y="735.5" ></text>
</g>
<g >
<title>jlong_disjoint_arraycopy (54 samples, 0.10%)</title><rect x="1129.5" y="405" width="1.1" height="15.0" fill="rgb(207,0,24)" rx="2" ry="2" />
<text  x="1132.46" y="415.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/UTF16.isLeadSurrogate (5 samples, 0.01%)</title><rect x="1047.3" y="341" width="0.1" height="15.0" fill="rgb(212,93,19)" rx="2" ry="2" />
<text  x="1050.26" y="351.5" ></text>
</g>
<g >
<title>java/text/CollationElementIterator.primaryOrder (10 samples, 0.02%)</title><rect x="1047.4" y="405" width="0.2" height="15.0" fill="rgb(207,13,8)" rx="2" ry="2" />
<text  x="1050.37" y="415.5" ></text>
</g>
<g >
<title>java/lang/String.charAt (6 samples, 0.01%)</title><rect x="171.6" y="341" width="0.2" height="15.0" fill="rgb(224,105,54)" rx="2" ry="2" />
<text  x="174.63" y="351.5" ></text>
</g>
<g >
<title>ksys_read (33 samples, 0.06%)</title><rect x="53.3" y="149" width="0.7" height="15.0" fill="rgb(242,183,49)" rx="2" ry="2" />
<text  x="56.31" y="159.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (10 samples, 0.02%)</title><rect x="685.5" y="357" width="0.2" height="15.0" fill="rgb(214,78,13)" rx="2" ry="2" />
<text  x="688.47" y="367.5" ></text>
</g>
<g >
<title>Monitor::wait_without_safepoint_check(long) (5 samples, 0.01%)</title><rect x="1180.8" y="597" width="0.1" height="15.0" fill="rgb(230,97,30)" rx="2" ry="2" />
<text  x="1183.76" y="607.5" ></text>
</g>
<g >
<title>java/lang/String.length (45 samples, 0.08%)</title><rect x="284.0" y="341" width="1.0" height="15.0" fill="rgb(252,196,6)" rx="2" ry="2" />
<text  x="286.99" y="351.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (7 samples, 0.01%)</title><rect x="685.5" y="309" width="0.2" height="15.0" fill="rgb(214,182,8)" rx="2" ry="2" />
<text  x="688.51" y="319.5" ></text>
</g>
<g >
<title>PhaseChaitin::Register_Allocate() (14 samples, 0.03%)</title><rect x="1187.0" y="581" width="0.3" height="15.0" fill="rgb(234,81,36)" rx="2" ry="2" />
<text  x="1189.98" y="591.5" ></text>
</g>
<g >
<title>java/lang/String.&lt;init&gt; (434 samples, 0.79%)</title><rect x="675.8" y="373" width="9.3" height="15.0" fill="rgb(234,55,44)" rx="2" ry="2" />
<text  x="678.78" y="383.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/ReplaceableString.&lt;init&gt; (307 samples, 0.56%)</title><rect x="1112.4" y="341" width="6.6" height="15.0" fill="rgb(207,223,33)" rx="2" ry="2" />
<text  x="1115.39" y="351.5" ></text>
</g>
<g >
<title>java/io/RandomAccessFile.seek0 (10 samples, 0.02%)</title><rect x="54.1" y="245" width="0.2" height="15.0" fill="rgb(225,34,37)" rx="2" ry="2" />
<text  x="57.08" y="255.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.charAt (1,011 samples, 1.85%)</title><rect x="998.5" y="277" width="21.8" height="15.0" fill="rgb(218,98,23)" rx="2" ry="2" />
<text  x="1001.50" y="287.5" >j..</text>
</g>
<g >
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (16 samples, 0.03%)</title><rect x="285.1" y="389" width="0.3" height="15.0" fill="rgb(235,117,25)" rx="2" ry="2" />
<text  x="288.09" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="1186.7" y="645" width="0.1" height="15.0" fill="rgb(219,106,26)" rx="2" ry="2" />
<text  x="1189.66" y="655.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (8 samples, 0.01%)</title><rect x="705.5" y="341" width="0.1" height="15.0" fill="rgb(231,83,34)" rx="2" ry="2" />
<text  x="708.46" y="351.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/ForkedRunner.run (6 samples, 0.01%)</title><rect x="1145.7" y="709" width="0.2" height="15.0" fill="rgb(211,143,35)" rx="2" ry="2" />
<text  x="1148.72" y="719.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (130 samples, 0.24%)</title><rect x="1126.7" y="405" width="2.8" height="15.0" fill="rgb(218,70,25)" rx="2" ry="2" />
<text  x="1129.66" y="415.5" ></text>
</g>
<g >
<title>java/text/Collator.getStrength (32 samples, 0.06%)</title><rect x="1119.0" y="405" width="0.7" height="15.0" fill="rgb(242,132,1)" rx="2" ry="2" />
<text  x="1122.03" y="415.5" ></text>
</g>
<g >
<title>java/util/HashMap.get (12 samples, 0.02%)</title><rect x="1144.0" y="389" width="0.3" height="15.0" fill="rgb(212,40,37)" rx="2" ry="2" />
<text  x="1147.04" y="399.5" ></text>
</g>
<g >
<title>vfs_read (33 samples, 0.06%)</title><rect x="53.3" y="133" width="0.7" height="15.0" fill="rgb(232,138,34)" rx="2" ry="2" />
<text  x="56.31" y="143.5" ></text>
</g>
<g >
<title>java/util/zip/ZipFile$Source.readAt (59 samples, 0.11%)</title><rect x="53.0" y="277" width="1.3" height="15.0" fill="rgb(232,198,28)" rx="2" ry="2" />
<text  x="56.03" y="287.5" ></text>
</g>
<g >
<title>G1EvacuateRegionsTask::evacuate_live_objects(G1ParScanThreadState*, unsigned int) (1,717 samples, 3.14%)</title><rect x="1146.0" y="645" width="37.0" height="15.0" fill="rgb(235,99,0)" rx="2" ry="2" />
<text  x="1149.05" y="655.5" >G1E..</text>
</g>
<g >
<title>java/util/Arrays.copyOf (278 samples, 0.51%)</title><rect x="547.8" y="357" width="6.0" height="15.0" fill="rgb(209,52,53)" rx="2" ry="2" />
<text  x="550.77" y="367.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/UCharacterIterator.getInstance (475 samples, 0.87%)</title><rect x="1108.8" y="373" width="10.2" height="15.0" fill="rgb(207,141,33)" rx="2" ry="2" />
<text  x="1111.80" y="383.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (81 samples, 0.15%)</title><rect x="1178.4" y="581" width="1.7" height="15.0" fill="rgb(216,9,3)" rx="2" ry="2" />
<text  x="1181.37" y="591.5" ></text>
</g>
<g >
<title>java/net/URL.openStream (6 samples, 0.01%)</title><rect x="18.8" y="453" width="0.1" height="15.0" fill="rgb(231,110,20)" rx="2" ry="2" />
<text  x="21.79" y="463.5" ></text>
</g>
<g >
<title>java/io/InputStreamReader.read (1,254 samples, 2.29%)</title><rect x="27.3" y="405" width="27.0" height="15.0" fill="rgb(237,158,16)" rx="2" ry="2" />
<text  x="30.28" y="415.5" >j..</text>
</g>
<g >
<title>sun/nio/cs/UTF_8$Decoder.decodeLoop (118 samples, 0.22%)</title><rect x="27.3" y="341" width="2.6" height="15.0" fill="rgb(242,30,9)" rx="2" ry="2" />
<text  x="30.32" y="351.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$Start.match (4,967 samples, 9.07%)</title><rect x="166.4" y="373" width="107.0" height="15.0" fill="rgb(209,138,51)" rx="2" ry="2" />
<text  x="169.36" y="383.5" >java/util/reg..</text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.isLatin1 (82 samples, 0.15%)</title><rect x="1034.4" y="277" width="1.8" height="15.0" fill="rgb(250,127,23)" rx="2" ry="2" />
<text  x="1037.40" y="287.5" ></text>
</g>
<g >
<title>jdk/internal/icu/impl/Norm2AllModes$NoopNormalizer2.normalize (4,712 samples, 8.60%)</title><rect x="770.0" y="357" width="101.5" height="15.0" fill="rgb(253,169,40)" rx="2" ry="2" />
<text  x="772.99" y="367.5" >jdk/internal..</text>
</g>
<g >
<title>do_user_addr_fault (5 samples, 0.01%)</title><rect x="1182.9" y="565" width="0.1" height="15.0" fill="rgb(227,24,35)" rx="2" ry="2" />
<text  x="1185.93" y="575.5" ></text>
</g>
<g >
<title>G1FreeCollectionSetTask::work(unsigned int) (16 samples, 0.03%)</title><rect x="1184.5" y="661" width="0.4" height="15.0" fill="rgb(252,52,33)" rx="2" ry="2" />
<text  x="1187.53" y="671.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.newString (474 samples, 0.87%)</title><rect x="675.5" y="389" width="10.2" height="15.0" fill="rgb(250,58,7)" rx="2" ry="2" />
<text  x="678.47" y="399.5" ></text>
</g>
<g >
<title>java/util/ArrayList.add (150 samples, 0.27%)</title><rect x="136.5" y="405" width="3.2" height="15.0" fill="rgb(219,74,22)" rx="2" ry="2" />
<text  x="139.45" y="415.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.append (210 samples, 0.38%)</title><rect x="770.0" y="325" width="4.5" height="15.0" fill="rgb(227,64,17)" rx="2" ry="2" />
<text  x="772.99" y="335.5" ></text>
</g>
<g >
<title>java/lang/StringUTF16.putCharSB (69 samples, 0.13%)</title><rect x="556.7" y="373" width="1.4" height="15.0" fill="rgb(218,25,41)" rx="2" ry="2" />
<text  x="559.65" y="383.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.newCapacity (89 samples, 0.16%)</title><rect x="970.7" y="293" width="1.9" height="15.0" fill="rgb(247,36,50)" rx="2" ry="2" />
<text  x="973.67" y="303.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.&lt;init&gt; (8 samples, 0.01%)</title><rect x="705.5" y="357" width="0.1" height="15.0" fill="rgb(214,56,16)" rx="2" ry="2" />
<text  x="708.46" y="367.5" ></text>
</g>
<g >
<title>SpinPause (13 samples, 0.02%)</title><rect x="1180.9" y="597" width="0.2" height="15.0" fill="rgb(216,168,39)" rx="2" ry="2" />
<text  x="1183.86" y="607.5" ></text>
</g>
<g >
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (26 samples, 0.05%)</title><rect x="1183.4" y="613" width="0.5" height="15.0" fill="rgb(242,58,6)" rx="2" ry="2" />
<text  x="1186.39" y="623.5" ></text>
</g>
<g >
<title>do_futex (11 samples, 0.02%)</title><rect x="11.2" y="645" width="0.2" height="15.0" fill="rgb(225,140,42)" rx="2" ry="2" />
<text  x="14.18" y="655.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.setLength (243 samples, 0.44%)</title><rect x="1103.6" y="341" width="5.2" height="15.0" fill="rgb(217,208,54)" rx="2" ry="2" />
<text  x="1106.56" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.01%)</title><rect x="11.4" y="677" width="0.2" height="15.0" fill="rgb(248,23,13)" rx="2" ry="2" />
<text  x="14.42" y="687.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.01%)</title><rect x="1187.9" y="453" width="0.1" height="15.0" fill="rgb(233,96,10)" rx="2" ry="2" />
<text  x="1190.87" y="463.5" ></text>
</g>
<g >
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (23 samples, 0.04%)</title><rect x="1183.4" y="581" width="0.5" height="15.0" fill="rgb(228,61,46)" rx="2" ry="2" />
<text  x="1186.43" y="591.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.setLength (4,502 samples, 8.22%)</title><rect x="774.5" y="341" width="97.0" height="15.0" fill="rgb(213,204,54)" rx="2" ry="2" />
<text  x="777.52" y="351.5" >java/lang/S..</text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.01%)</title><rect x="1187.7" y="581" width="0.1" height="15.0" fill="rgb(253,170,27)" rx="2" ry="2" />
<text  x="1190.72" y="591.5" ></text>
</g>
<g >
<title>java/lang/String.subSequence (562 samples, 1.03%)</title><rect x="123.8" y="405" width="12.1" height="15.0" fill="rgb(212,58,41)" rx="2" ry="2" />
<text  x="126.80" y="415.5" ></text>
</g>
<g >
<title>try_to_wake_up (6 samples, 0.01%)</title><rect x="1186.7" y="549" width="0.1" height="15.0" fill="rgb(248,169,32)" rx="2" ry="2" />
<text  x="1189.66" y="559.5" ></text>
</g>
<g >
<title>java/lang/ClassLoader.getResourceAsStream (8 samples, 0.01%)</title><rect x="18.7" y="469" width="0.2" height="15.0" fill="rgb(214,212,20)" rx="2" ry="2" />
<text  x="21.75" y="479.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (20 samples, 0.04%)</title><rect x="11.6" y="709" width="0.4" height="15.0" fill="rgb(229,34,25)" rx="2" ry="2" />
<text  x="14.57" y="719.5" ></text>
</g>
<g >
<title>java/text/RuleBasedCollator.getCollationKey (35,147 samples, 64.17%)</title><rect x="373.4" y="421" width="757.2" height="15.0" fill="rgb(225,9,25)" rx="2" ry="2" />
<text  x="376.36" y="431.5" >java/text/RuleBasedCollator.getCollationKey</text>
</g>
<g >
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (6 samples, 0.01%)</title><rect x="1188.4" y="661" width="0.1" height="15.0" fill="rgb(254,12,27)" rx="2" ry="2" />
<text  x="1191.41" y="671.5" ></text>
</g>
<g >
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (36 samples, 0.07%)</title><rect x="1185.2" y="645" width="0.7" height="15.0" fill="rgb(246,213,4)" rx="2" ry="2" />
<text  x="1188.15" y="655.5" ></text>
</g>
<g >
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWordImpl**, unsigned long) (37 samples, 0.07%)</title><rect x="12.3" y="709" width="0.8" height="15.0" fill="rgb(232,145,36)" rx="2" ry="2" />
<text  x="15.28" y="719.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.01%)</title><rect x="1118.4" y="309" width="0.1" height="15.0" fill="rgb(252,76,43)" rx="2" ry="2" />
<text  x="1121.36" y="319.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.01%)</title><rect x="675.6" y="325" width="0.1" height="15.0" fill="rgb(254,88,12)" rx="2" ry="2" />
<text  x="678.60" y="335.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput.lambda$emit$0 (904 samples, 1.65%)</title><rect x="350.5" y="389" width="19.5" height="15.0" fill="rgb(238,36,40)" rx="2" ry="2" />
<text  x="353.55" y="399.5" ></text>
</g>
<g >
<title>generic_file_read_iter (28 samples, 0.05%)</title><rect x="53.3" y="85" width="0.7" height="15.0" fill="rgb(219,227,34)" rx="2" ry="2" />
<text  x="56.35" y="95.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libz.so.1.2.11 (121 samples, 0.22%)</title><rect x="49.1" y="261" width="2.7" height="15.0" fill="rgb(228,73,26)" rx="2" ry="2" />
<text  x="52.15" y="271.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (8 samples, 0.01%)</title><rect x="705.5" y="293" width="0.1" height="15.0" fill="rgb(235,1,51)" rx="2" ry="2" />
<text  x="708.46" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_futex (11 samples, 0.02%)</title><rect x="11.2" y="661" width="0.2" height="15.0" fill="rgb(234,187,14)" rx="2" ry="2" />
<text  x="14.18" y="671.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.01%)</title><rect x="1187.9" y="437" width="0.1" height="15.0" fill="rgb(251,51,54)" rx="2" ry="2" />
<text  x="1190.87" y="447.5" ></text>
</g>
<g >
<title>jdk/internal/icu/impl/ReplaceableUCharacterIterator.next (1,167 samples, 2.13%)</title><rect x="1022.1" y="341" width="25.2" height="15.0" fill="rgb(229,36,51)" rx="2" ry="2" />
<text  x="1025.12" y="351.5" >j..</text>
</g>
<g >
<title>java/util/ArrayList$SubList.&lt;init&gt; (9 samples, 0.02%)</title><rect x="140.0" y="389" width="0.2" height="15.0" fill="rgb(205,109,16)" rx="2" ry="2" />
<text  x="143.03" y="399.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (10 samples, 0.02%)</title><rect x="1184.2" y="629" width="0.3" height="15.0" fill="rgb(245,137,8)" rx="2" ry="2" />
<text  x="1187.25" y="639.5" ></text>
</g>
<g >
<title>java/util/ArrayList.add (138 samples, 0.25%)</title><rect x="136.5" y="389" width="2.9" height="15.0" fill="rgb(206,108,37)" rx="2" ry="2" />
<text  x="139.45" y="399.5" ></text>
</g>
<g >
<title>futex_wake (10 samples, 0.02%)</title><rect x="13.6" y="645" width="0.2" height="15.0" fill="rgb(209,162,19)" rx="2" ry="2" />
<text  x="16.55" y="655.5" ></text>
</g>
<g >
<title>java/util/zip/ZipFile$ZipFileInflaterInputStream.fill (63 samples, 0.12%)</title><rect x="52.9" y="309" width="1.4" height="15.0" fill="rgb(236,153,39)" rx="2" ry="2" />
<text  x="55.94" y="319.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.01%)</title><rect x="53.1" y="213" width="0.1" height="15.0" fill="rgb(224,99,18)" rx="2" ry="2" />
<text  x="56.11" y="223.5" ></text>
</g>
<g >
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (9 samples, 0.02%)</title><rect x="1118.8" y="293" width="0.2" height="15.0" fill="rgb(206,210,20)" rx="2" ry="2" />
<text  x="1121.81" y="303.5" ></text>
</g>
<g >
<title>start_thread (2,049 samples, 3.74%)</title><rect x="1145.9" y="725" width="44.1" height="15.0" fill="rgb(244,152,5)" rx="2" ry="2" />
<text  x="1148.85" y="735.5" >star..</text>
</g>
<g >
<title>java/util/regex/Matcher.search (12 samples, 0.02%)</title><rect x="139.4" y="389" width="0.3" height="15.0" fill="rgb(235,224,54)" rx="2" ry="2" />
<text  x="142.42" y="399.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/NormalizerBase.setMode (1,273 samples, 2.32%)</title><rect x="1050.1" y="389" width="27.4" height="15.0" fill="rgb(217,221,9)" rx="2" ry="2" />
<text  x="1053.11" y="399.5" >j..</text>
</g>
<g >
<title>handle_pte_fault (5 samples, 0.01%)</title><rect x="1182.9" y="517" width="0.1" height="15.0" fill="rgb(234,112,38)" rx="2" ry="2" />
<text  x="1185.93" y="527.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/NormalizerBase.clearBuffer (2,811 samples, 5.13%)</title><rect x="936.0" y="357" width="60.6" height="15.0" fill="rgb(206,80,26)" rx="2" ry="2" />
<text  x="939.04" y="367.5" >jdk/in..</text>
</g>
<g >
<title>Compilation::compile_java_method() (20 samples, 0.04%)</title><rect x="1187.8" y="581" width="0.5" height="15.0" fill="rgb(228,209,3)" rx="2" ry="2" />
<text  x="1190.82" y="591.5" ></text>
</g>
<g >
<title>jdk/internal/icu/impl/ReplaceableUCharacterIterator.setIndex (2,995 samples, 5.47%)</title><rect x="871.5" y="357" width="64.5" height="15.0" fill="rgb(250,27,51)" rx="2" ry="2" />
<text  x="874.52" y="367.5" >jdk/int..</text>
</g>
<g >
<title>java/util/regex/ASCII.isType (147 samples, 0.27%)</title><rect x="258.3" y="277" width="3.2" height="15.0" fill="rgb(223,145,11)" rx="2" ry="2" />
<text  x="261.31" y="287.5" ></text>
</g>
<g >
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.01%)</title><rect x="675.6" y="373" width="0.2" height="15.0" fill="rgb(243,33,28)" rx="2" ry="2" />
<text  x="678.58" y="383.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (710 samples, 1.30%)</title><rect x="1164.8" y="597" width="15.3" height="15.0" fill="rgb(253,196,45)" rx="2" ry="2" />
<text  x="1167.81" y="607.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.search (6,052 samples, 11.05%)</title><rect x="143.0" y="389" width="130.4" height="15.0" fill="rgb(221,79,12)" rx="2" ry="2" />
<text  x="145.98" y="399.5" >java/util/regex/..</text>
</g>
<g >
<title>ktime_get_ts64 (183 samples, 0.33%)</title><rect x="14.6" y="629" width="3.9" height="15.0" fill="rgb(207,185,51)" rx="2" ry="2" />
<text  x="17.59" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (33 samples, 0.06%)</title><rect x="53.3" y="181" width="0.7" height="15.0" fill="rgb(241,118,50)" rx="2" ry="2" />
<text  x="56.31" y="191.5" ></text>
</g>
<g >
<title>java/util/regex/CharPredicates$$Lambda$54.0x0000000800b7b5d8.is (410 samples, 0.75%)</title><rect x="261.5" y="325" width="8.8" height="15.0" fill="rgb(214,177,50)" rx="2" ry="2" />
<text  x="264.48" y="335.5" ></text>
</g>
<g >
<title>java/util/ArrayList.add (6 samples, 0.01%)</title><rect x="370.0" y="373" width="0.2" height="15.0" fill="rgb(248,180,48)" rx="2" ry="2" />
<text  x="373.02" y="383.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.newCapacity (435 samples, 0.79%)</title><rect x="638.0" y="357" width="9.4" height="15.0" fill="rgb(211,23,8)" rx="2" ry="2" />
<text  x="641.03" y="367.5" ></text>
</g>
<g >
<title>all (54,768 samples, 100%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(231,23,38)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.append (210 samples, 0.38%)</title><rect x="770.0" y="309" width="4.5" height="15.0" fill="rgb(223,91,35)" rx="2" ry="2" />
<text  x="772.99" y="319.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/NormalizerBase.reset (319 samples, 0.58%)</title><rect x="1101.9" y="373" width="6.9" height="15.0" fill="rgb(251,223,26)" rx="2" ry="2" />
<text  x="1104.92" y="383.5" ></text>
</g>
<g >
<title>java/lang/StringBuffer.length (57 samples, 0.10%)</title><rect x="1046.0" y="309" width="1.3" height="15.0" fill="rgb(229,96,12)" rx="2" ry="2" />
<text  x="1049.03" y="319.5" ></text>
</g>
<g >
<title>checkcast_arraycopy (12 samples, 0.02%)</title><rect x="139.4" y="325" width="0.3" height="15.0" fill="rgb(229,195,21)" rx="2" ry="2" />
<text  x="142.42" y="335.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/ReplaceableString.length (461 samples, 0.84%)</title><rect x="1037.3" y="325" width="10.0" height="15.0" fill="rgb(210,15,27)" rx="2" ry="2" />
<text  x="1040.33" y="335.5" ></text>
</g>
<g >
<title>[not_walkable_Java] (6 samples, 0.01%)</title><rect x="10.1" y="725" width="0.2" height="15.0" fill="rgb(222,157,47)" rx="2" ry="2" />
<text  x="13.13" y="735.5" ></text>
</g>
<g >
<title>java/util/ArrayList.grow (6 samples, 0.01%)</title><rect x="370.0" y="341" width="0.2" height="15.0" fill="rgb(238,216,53)" rx="2" ry="2" />
<text  x="373.02" y="351.5" ></text>
</g>
<g >
<title>posix_get_monotonic_timespec (186 samples, 0.34%)</title><rect x="14.5" y="645" width="4.1" height="15.0" fill="rgb(227,89,14)" rx="2" ry="2" />
<text  x="17.55" y="655.5" ></text>
</g>
<g >
<title>exc_page_fault (5 samples, 0.01%)</title><rect x="1182.9" y="581" width="0.1" height="15.0" fill="rgb(243,121,35)" rx="2" ry="2" />
<text  x="1185.93" y="591.5" ></text>
</g>
<g >
<title>do_futex (10 samples, 0.02%)</title><rect x="13.6" y="661" width="0.2" height="15.0" fill="rgb(224,73,22)" rx="2" ry="2" />
<text  x="16.55" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.02%)</title><rect x="13.6" y="709" width="0.2" height="15.0" fill="rgb(249,130,45)" rx="2" ry="2" />
<text  x="16.55" y="719.5" ></text>
</g>
<g >
<title>java/lang/StringLatin1.newString (487 samples, 0.89%)</title><rect x="125.4" y="373" width="10.4" height="15.0" fill="rgb(217,106,48)" rx="2" ry="2" />
<text  x="128.35" y="383.5" ></text>
</g>
<g >
<title>java/lang/String.subSequence (97 samples, 0.18%)</title><rect x="281.3" y="373" width="2.1" height="15.0" fill="rgb(245,184,9)" rx="2" ry="2" />
<text  x="284.28" y="383.5" ></text>
</g>
<g >
<title>G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*) (15 samples, 0.03%)</title><rect x="1183.1" y="613" width="0.3" height="15.0" fill="rgb(243,53,42)" rx="2" ry="2" />
<text  x="1186.06" y="623.5" ></text>
</g>
<g >
<title>path_openat (6 samples, 0.01%)</title><rect x="11.4" y="613" width="0.2" height="15.0" fill="rgb(253,208,44)" rx="2" ry="2" />
<text  x="14.42" y="623.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (9 samples, 0.02%)</title><rect x="685.5" y="325" width="0.2" height="15.0" fill="rgb(211,21,30)" rx="2" ry="2" />
<text  x="688.49" y="335.5" ></text>
</g>
<g >
<title>java/util/HashMap$KeyIterator.next (72 samples, 0.13%)</title><rect x="18.9" y="469" width="1.6" height="15.0" fill="rgb(218,193,10)" rx="2" ry="2" />
<text  x="21.92" y="479.5" ></text>
</g>
<g >
<title>java/io/BufferedReader.fill (1,254 samples, 2.29%)</title><rect x="27.3" y="421" width="27.0" height="15.0" fill="rgb(248,143,20)" rx="2" ry="2" />
<text  x="30.28" y="431.5" >j..</text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput.values (27 samples, 0.05%)</title><rect x="1143.7" y="405" width="0.6" height="15.0" fill="rgb(233,86,37)" rx="2" ry="2" />
<text  x="1146.72" y="415.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.setLength (3,392 samples, 6.19%)</title><rect x="586.5" y="389" width="73.1" height="15.0" fill="rgb(239,220,3)" rx="2" ry="2" />
<text  x="589.53" y="399.5" >java/lan..</text>
</g>
<g >
<title>Compilation::compile_method() (22 samples, 0.04%)</title><rect x="1187.8" y="597" width="0.5" height="15.0" fill="rgb(208,213,20)" rx="2" ry="2" />
<text  x="1190.82" y="607.5" ></text>
</g>
<g >
<title>java/util/regex/Matcher.&lt;init&gt; (524 samples, 0.96%)</title><rect x="273.7" y="389" width="11.3" height="15.0" fill="rgb(226,183,9)" rx="2" ry="2" />
<text  x="276.69" y="399.5" ></text>
</g>
<g >
<title>java/util/ArrayList.grow (33 samples, 0.06%)</title><rect x="138.7" y="357" width="0.7" height="15.0" fill="rgb(205,124,38)" rx="2" ry="2" />
<text  x="141.71" y="367.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.01%)</title><rect x="55.8" y="389" width="0.1" height="15.0" fill="rgb(210,73,9)" rx="2" ry="2" />
<text  x="58.81" y="399.5" ></text>
</g>
<g >
<title>try_to_wake_up (7 samples, 0.01%)</title><rect x="13.6" y="613" width="0.2" height="15.0" fill="rgb(225,171,27)" rx="2" ry="2" />
<text  x="16.62" y="623.5" ></text>
</g>
<g >
<title>G1CollectionSet::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (16 samples, 0.03%)</title><rect x="1184.5" y="645" width="0.4" height="15.0" fill="rgb(245,39,24)" rx="2" ry="2" />
<text  x="1187.53" y="655.5" ></text>
</g>
<g >
<title>read_hpet.part.0 (180 samples, 0.33%)</title><rect x="14.7" y="597" width="3.8" height="15.0" fill="rgb(250,176,34)" rx="2" ry="2" />
<text  x="17.65" y="607.5" ></text>
</g>
<g >
<title>java/io/FilterInputStream.read (1,133 samples, 2.07%)</title><rect x="29.9" y="341" width="24.4" height="15.0" fill="rgb(232,29,22)" rx="2" ry="2" />
<text  x="32.89" y="351.5" >j..</text>
</g>
<g >
<title>java/util/regex/Pattern$BmpCharProperty.match (64 samples, 0.12%)</title><rect x="170.4" y="357" width="1.4" height="15.0" fill="rgb(249,36,17)" rx="2" ry="2" />
<text  x="173.38" y="367.5" ></text>
</g>
<g >
<title>java/lang/reflect/Method.invoke (52,306 samples, 95.50%)</title><rect x="18.7" y="597" width="1127.0" height="15.0" fill="rgb(205,95,46)" rx="2" ry="2" />
<text  x="21.70" y="607.5" >java/lang/reflect/Method.invoke</text>
</g>
<g >
<title>java/text/CollationElementIterator.setText (3,316 samples, 6.05%)</title><rect x="1047.6" y="405" width="71.4" height="15.0" fill="rgb(208,75,26)" rx="2" ry="2" />
<text  x="1050.58" y="415.5" >java/tex..</text>
</g>
<g >
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (42 samples, 0.08%)</title><rect x="1186.9" y="629" width="0.9" height="15.0" fill="rgb(220,169,7)" rx="2" ry="2" />
<text  x="1189.92" y="639.5" ></text>
</g>
<g >
<title>read_hpet (180 samples, 0.33%)</title><rect x="14.7" y="613" width="3.8" height="15.0" fill="rgb(218,150,31)" rx="2" ry="2" />
<text  x="17.65" y="623.5" ></text>
</g>
<g >
<title>[vdso] (221 samples, 0.40%)</title><rect x="13.9" y="709" width="4.8" height="15.0" fill="rgb(225,177,47)" rx="2" ry="2" />
<text  x="16.94" y="719.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOf (2,079 samples, 3.80%)</title><rect x="826.7" y="293" width="44.8" height="15.0" fill="rgb(249,221,30)" rx="2" ry="2" />
<text  x="829.72" y="303.5" >java..</text>
</g>
<g >
<title>__x64_sys_openat (7 samples, 0.01%)</title><rect x="11.4" y="661" width="0.2" height="15.0" fill="rgb(254,214,39)" rx="2" ry="2" />
<text  x="14.42" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.02%)</title><rect x="11.2" y="677" width="0.2" height="15.0" fill="rgb(244,150,20)" rx="2" ry="2" />
<text  x="14.16" y="687.5" ></text>
</g>
<g >
<title>G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (16 samples, 0.03%)</title><rect x="1183.0" y="629" width="0.4" height="15.0" fill="rgb(246,228,30)" rx="2" ry="2" />
<text  x="1186.04" y="639.5" ></text>
</g>
<g >
<title>java/util/HashMap.resize (89 samples, 0.16%)</title><rect x="348.2" y="405" width="2.0" height="15.0" fill="rgb(210,25,2)" rx="2" ry="2" />
<text  x="351.24" y="415.5" ></text>
</g>
<g >
<title>futex_wait (10 samples, 0.02%)</title><rect x="11.2" y="629" width="0.2" height="15.0" fill="rgb(244,26,15)" rx="2" ry="2" />
<text  x="14.21" y="639.5" ></text>
</g>
<g >
<title>TaskTerminator::do_spin_master_work(TerminatorTerminator*) (5 samples, 0.01%)</title><rect x="1181.1" y="597" width="0.2" height="15.0" fill="rgb(244,70,24)" rx="2" ry="2" />
<text  x="1184.14" y="607.5" ></text>
</g>
<g >
<title>java/lang/StringBuffer.charAt (271 samples, 0.49%)</title><rect x="1031.5" y="309" width="5.8" height="15.0" fill="rgb(250,80,26)" rx="2" ry="2" />
<text  x="1034.49" y="319.5" ></text>
</g>
<g >
<title>java/util/ArrayList.add (6 samples, 0.01%)</title><rect x="370.0" y="389" width="0.2" height="15.0" fill="rgb(244,134,22)" rx="2" ry="2" />
<text  x="373.02" y="399.5" ></text>
</g>
<g >
<title>java/lang/String.&lt;init&gt; (334 samples, 0.61%)</title><rect x="126.5" y="357" width="7.2" height="15.0" fill="rgb(246,144,21)" rx="2" ry="2" />
<text  x="129.52" y="367.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (7 samples, 0.01%)</title><rect x="10.7" y="709" width="0.2" height="15.0" fill="rgb(251,201,28)" rx="2" ry="2" />
<text  x="13.73" y="719.5" ></text>
</g>
<g >
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.01%)</title><rect x="1180.5" y="597" width="0.1" height="15.0" fill="rgb(245,197,25)" rx="2" ry="2" />
<text  x="1183.48" y="607.5" ></text>
</g>
<g >
<title>java/util/ArrayList$SubList.toArray (25 samples, 0.05%)</title><rect x="135.9" y="405" width="0.6" height="15.0" fill="rgb(243,113,19)" rx="2" ry="2" />
<text  x="138.91" y="415.5" ></text>
</g>
<g >
<title>java/util/HashMap.resize (29 samples, 0.05%)</title><rect x="1144.8" y="389" width="0.7" height="15.0" fill="rgb(222,96,20)" rx="2" ry="2" />
<text  x="1147.84" y="399.5" ></text>
</g>
<g >
<title>java/util/ArrayList.grow (109 samples, 0.20%)</title><rect x="367.7" y="341" width="2.3" height="15.0" fill="rgb(226,52,7)" rx="2" ry="2" />
<text  x="370.68" y="351.5" ></text>
</g>
<g >
<title>java/lang/String.coder (5 samples, 0.01%)</title><rect x="125.2" y="357" width="0.2" height="15.0" fill="rgb(233,185,48)" rx="2" ry="2" />
<text  x="128.25" y="367.5" ></text>
</g>
<g >
<title>ksys_lseek (6 samples, 0.01%)</title><rect x="54.2" y="165" width="0.1" height="15.0" fill="rgb(213,214,25)" rx="2" ry="2" />
<text  x="57.17" y="175.5" ></text>
</g>
<g >
<title>java/lang/String.hashCode (413 samples, 0.75%)</title><rect x="339.3" y="389" width="8.9" height="15.0" fill="rgb(220,121,46)" rx="2" ry="2" />
<text  x="342.28" y="399.5" ></text>
</g>
<g >
<title>java/util/regex/ASCII.getType (147 samples, 0.27%)</title><rect x="258.3" y="261" width="3.2" height="15.0" fill="rgb(223,118,16)" rx="2" ry="2" />
<text  x="261.31" y="271.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (76 samples, 0.14%)</title><rect x="1186.9" y="677" width="1.7" height="15.0" fill="rgb(242,74,52)" rx="2" ry="2" />
<text  x="1189.92" y="687.5" ></text>
</g>
<g >
<title>__lock_text_start (7 samples, 0.01%)</title><rect x="13.6" y="597" width="0.2" height="15.0" fill="rgb(236,107,8)" rx="2" ry="2" />
<text  x="16.62" y="607.5" ></text>
</g>
<g >
<title>G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (11 samples, 0.02%)</title><rect x="1184.2" y="645" width="0.3" height="15.0" fill="rgb(223,48,10)" rx="2" ry="2" />
<text  x="1187.25" y="655.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/ReplaceableString.charAt (348 samples, 0.64%)</title><rect x="1029.8" y="325" width="7.5" height="15.0" fill="rgb(239,228,22)" rx="2" ry="2" />
<text  x="1032.83" y="335.5" ></text>
</g>
<g >
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (16 samples, 0.03%)</title><rect x="285.1" y="405" width="0.3" height="15.0" fill="rgb(218,0,47)" rx="2" ry="2" />
<text  x="288.09" y="415.5" ></text>
</g>
<g >
<title>readBytes (45 samples, 0.08%)</title><rect x="53.1" y="229" width="1.0" height="15.0" fill="rgb(216,155,34)" rx="2" ry="2" />
<text  x="56.11" y="239.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern$BmpCharProperty.match (4,129 samples, 7.54%)</title><rect x="184.4" y="341" width="89.0" height="15.0" fill="rgb(253,178,1)" rx="2" ry="2" />
<text  x="187.41" y="351.5" >java/util/..</text>
</g>
<g >
<title>java/util/concurrent/FutureTask.run (52,306 samples, 95.50%)</title><rect x="18.7" y="645" width="1127.0" height="15.0" fill="rgb(212,72,20)" rx="2" ry="2" />
<text  x="21.70" y="655.5" >java/util/concurrent/FutureTask.run</text>
</g>
<g >
<title>MemAllocator::allocate() const (8 samples, 0.01%)</title><rect x="675.6" y="341" width="0.2" height="15.0" fill="rgb(239,95,16)" rx="2" ry="2" />
<text  x="678.58" y="351.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput$$Lambda$56.0x0000000800bbd320.apply (6 samples, 0.01%)</title><rect x="370.0" y="421" width="0.2" height="15.0" fill="rgb(207,98,45)" rx="2" ry="2" />
<text  x="373.02" y="431.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::optimize(PhaseIterGVN&amp;, LoopOptsMode) (15 samples, 0.03%)</title><rect x="1187.3" y="581" width="0.4" height="15.0" fill="rgb(221,217,18)" rx="2" ry="2" />
<text  x="1190.35" y="591.5" ></text>
</g>
<g >
<title>java/lang/StringBuilder.append (2,876 samples, 5.25%)</title><rect x="708.0" y="309" width="62.0" height="15.0" fill="rgb(239,57,21)" rx="2" ry="2" />
<text  x="711.03" y="319.5" >java/l..</text>
</g>
<g >
<title>java/util/ArrayList$Itr.hasNext (8 samples, 0.01%)</title><rect x="1143.5" y="437" width="0.2" height="15.0" fill="rgb(220,23,25)" rx="2" ry="2" />
<text  x="1146.48" y="447.5" ></text>
</g>
<g >
<title>java/io/BufferedReader.readLine (1,634 samples, 2.98%)</title><rect x="20.7" y="437" width="35.2" height="15.0" fill="rgb(221,158,44)" rx="2" ry="2" />
<text  x="23.73" y="447.5" >ja..</text>
</g>
<g >
<title>java/lang/StringBuilder.setLength (2,811 samples, 5.13%)</title><rect x="936.0" y="341" width="60.6" height="15.0" fill="rgb(231,194,13)" rx="2" ry="2" />
<text  x="939.04" y="351.5" >java/l..</text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.01%)</title><rect x="1186.7" y="613" width="0.1" height="15.0" fill="rgb(248,139,15)" rx="2" ry="2" />
<text  x="1189.66" y="623.5" ></text>
</g>
<g >
<title>sem_post@@GLIBC_2.2.5 (7 samples, 0.01%)</title><rect x="1186.6" y="661" width="0.2" height="15.0" fill="rgb(237,185,0)" rx="2" ry="2" />
<text  x="1189.64" y="671.5" ></text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountReducer.reduce (282 samples, 0.51%)</title><rect x="1139.6" y="453" width="6.1" height="15.0" fill="rgb(239,36,29)" rx="2" ry="2" />
<text  x="1142.58" y="463.5" ></text>
</g>
<g >
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.02%)</title><rect x="685.5" y="341" width="0.2" height="15.0" fill="rgb(247,190,33)" rx="2" ry="2" />
<text  x="688.49" y="351.5" ></text>
</g>
<g >
<title>java/lang/String.toLowerCase (392 samples, 0.72%)</title><rect x="111.8" y="421" width="8.4" height="15.0" fill="rgb(229,136,31)" rx="2" ry="2" />
<text  x="114.80" y="431.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (57 samples, 0.10%)</title><rect x="658.4" y="341" width="1.2" height="15.0" fill="rgb(235,107,37)" rx="2" ry="2" />
<text  x="661.39" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="54.1" y="213" width="0.2" height="15.0" fill="rgb(242,76,38)" rx="2" ry="2" />
<text  x="57.15" y="223.5" ></text>
</g>
<g >
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.01%)</title><rect x="675.6" y="357" width="0.2" height="15.0" fill="rgb(250,12,11)" rx="2" ry="2" />
<text  x="678.58" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.02%)</title><rect x="11.2" y="693" width="0.2" height="15.0" fill="rgb(222,183,31)" rx="2" ry="2" />
<text  x="14.16" y="703.5" ></text>
</g>
<g >
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.02%)</title><rect x="1118.8" y="277" width="0.2" height="15.0" fill="rgb(214,182,43)" rx="2" ry="2" />
<text  x="1121.81" y="287.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.newCapacity (68 samples, 0.12%)</title><rect x="742.3" y="261" width="1.5" height="15.0" fill="rgb(222,65,33)" rx="2" ry="2" />
<text  x="745.33" y="271.5" ></text>
</g>
<g >
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (8 samples, 0.01%)</title><rect x="1118.8" y="245" width="0.2" height="15.0" fill="rgb(238,62,11)" rx="2" ry="2" />
<text  x="1121.84" y="255.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call (52,306 samples, 95.50%)</title><rect x="18.7" y="613" width="1127.0" height="15.0" fill="rgb(206,25,9)" rx="2" ry="2" />
<text  x="21.70" y="623.5" >org/openjdk/jmh/runner/BenchmarkHandler$BenchmarkTask.call</text>
</g>
<g >
<title>nmethod::oops_do_process_weak(nmethod::OopsDoProcessor*) (5 samples, 0.01%)</title><rect x="1183.4" y="549" width="0.1" height="15.0" fill="rgb(211,185,52)" rx="2" ry="2" />
<text  x="1186.43" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_futex (10 samples, 0.02%)</title><rect x="13.6" y="677" width="0.2" height="15.0" fill="rgb(232,224,28)" rx="2" ry="2" />
<text  x="16.55" y="687.5" ></text>
</g>
<g >
<title>java/lang/String.getBytes (129 samples, 0.24%)</title><rect x="553.9" y="357" width="2.8" height="15.0" fill="rgb(235,88,33)" rx="2" ry="2" />
<text  x="556.87" y="367.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.01%)</title><rect x="10.5" y="709" width="0.2" height="15.0" fill="rgb(246,103,24)" rx="2" ry="2" />
<text  x="13.52" y="719.5" ></text>
</g>
<g >
<title>jbyte_arraycopy (27 samples, 0.05%)</title><rect x="1126.1" y="405" width="0.6" height="15.0" fill="rgb(222,57,42)" rx="2" ry="2" />
<text  x="1129.07" y="415.5" ></text>
</g>
<g >
<title>new_sync_read (30 samples, 0.05%)</title><rect x="53.3" y="117" width="0.7" height="15.0" fill="rgb(249,225,50)" rx="2" ry="2" />
<text  x="56.31" y="127.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.newCapacity (31 samples, 0.06%)</title><rect x="772.2" y="277" width="0.6" height="15.0" fill="rgb(216,178,34)" rx="2" ry="2" />
<text  x="775.17" y="287.5" ></text>
</g>
<g >
<title>java/lang/CharacterDataLatin1.getProperties (27 samples, 0.05%)</title><rect x="119.2" y="373" width="0.6" height="15.0" fill="rgb(226,215,3)" rx="2" ry="2" />
<text  x="122.17" y="383.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern.split (7,616 samples, 13.91%)</title><rect x="120.9" y="421" width="164.1" height="15.0" fill="rgb(216,103,11)" rx="2" ry="2" />
<text  x="123.89" y="431.5" >java/util/regex/Patte..</text>
</g>
<g >
<title>java/util/ArrayList.grow (108 samples, 0.20%)</title><rect x="367.7" y="325" width="2.3" height="15.0" fill="rgb(218,221,24)" rx="2" ry="2" />
<text  x="370.70" y="335.5" ></text>
</g>
<g >
<title>wake_up_q (7 samples, 0.01%)</title><rect x="13.6" y="629" width="0.2" height="15.0" fill="rgb(220,48,42)" rx="2" ry="2" />
<text  x="16.62" y="639.5" ></text>
</g>
<g >
<title>__libc_lseek (7 samples, 0.01%)</title><rect x="54.1" y="229" width="0.2" height="15.0" fill="rgb(250,93,12)" rx="2" ry="2" />
<text  x="57.15" y="239.5" ></text>
</g>
<g >
<title>HeapRegionClaimer::claim_region(unsigned int) (7 samples, 0.01%)</title><rect x="1184.9" y="629" width="0.2" height="15.0" fill="rgb(247,61,38)" rx="2" ry="2" />
<text  x="1187.92" y="639.5" ></text>
</g>
<g >
<title>java/util/regex/ASCII.getType (128 samples, 0.23%)</title><rect x="267.6" y="277" width="2.7" height="15.0" fill="rgb(241,159,45)" rx="2" ry="2" />
<text  x="270.55" y="287.5" ></text>
</g>
<g >
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (45 samples, 0.08%)</title><rect x="1183.0" y="645" width="1.0" height="15.0" fill="rgb(214,54,46)" rx="2" ry="2" />
<text  x="1186.04" y="655.5" ></text>
</g>
<g >
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (6 samples, 0.01%)</title><rect x="10.3" y="709" width="0.1" height="15.0" fill="rgb(233,102,49)" rx="2" ry="2" />
<text  x="13.26" y="719.5" ></text>
</g>
<g >
<title>java/lang/StringUTF16.charAt (6 samples, 0.01%)</title><rect x="171.6" y="325" width="0.2" height="15.0" fill="rgb(232,64,13)" rx="2" ry="2" />
<text  x="174.63" y="335.5" ></text>
</g>
<g >
<title>java/util/ArrayList.add (251 samples, 0.46%)</title><rect x="364.6" y="357" width="5.4" height="15.0" fill="rgb(220,180,52)" rx="2" ry="2" />
<text  x="367.62" y="367.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (27 samples, 0.05%)</title><rect x="53.3" y="69" width="0.6" height="15.0" fill="rgb(209,42,47)" rx="2" ry="2" />
<text  x="56.35" y="79.5" ></text>
</g>
<g >
<title>java/util/regex/CharPredicates$$Lambda$53.0x0000000800b7b350.is (454 samples, 0.83%)</title><rect x="251.7" y="325" width="9.8" height="15.0" fill="rgb(247,77,15)" rx="2" ry="2" />
<text  x="254.70" y="335.5" ></text>
</g>
<g >
<title>org/openjdk/jmh/runner/BaseRunner.runBenchmark (6 samples, 0.01%)</title><rect x="1145.7" y="645" width="0.2" height="15.0" fill="rgb(254,174,15)" rx="2" ry="2" />
<text  x="1148.72" y="655.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.setLength (4,502 samples, 8.22%)</title><rect x="774.5" y="325" width="97.0" height="15.0" fill="rgb(232,156,32)" rx="2" ry="2" />
<text  x="777.52" y="335.5" >java/lang/A..</text>
</g>
<g >
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (52,306 samples, 95.50%)</title><rect x="18.7" y="565" width="1127.0" height="15.0" fill="rgb(248,0,13)" rx="2" ry="2" />
<text  x="21.70" y="575.5" >jdk/internal/reflect/NativeMethodAccessorImpl.invoke</text>
</g>
<g >
<title>java/util/regex/ASCII.isType (130 samples, 0.24%)</title><rect x="267.5" y="293" width="2.8" height="15.0" fill="rgb(246,114,25)" rx="2" ry="2" />
<text  x="270.51" y="303.5" ></text>
</g>
<g >
<title>java/util/TreeMap.getEntry (416 samples, 0.76%)</title><rect x="1130.6" y="389" width="9.0" height="15.0" fill="rgb(250,74,42)" rx="2" ry="2" />
<text  x="1133.62" y="399.5" ></text>
</g>
<g >
<title>java/util/HashMap.hash (497 samples, 0.91%)</title><rect x="337.5" y="405" width="10.7" height="15.0" fill="rgb(229,109,27)" rx="2" ry="2" />
<text  x="340.47" y="415.5" ></text>
</g>
<g >
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (26 samples, 0.05%)</title><rect x="1183.4" y="597" width="0.5" height="15.0" fill="rgb(208,123,27)" rx="2" ry="2" />
<text  x="1186.39" y="607.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.charAt (224 samples, 0.41%)</title><rect x="1032.5" y="293" width="4.8" height="15.0" fill="rgb(230,73,43)" rx="2" ry="2" />
<text  x="1035.50" y="303.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (599 samples, 1.09%)</title><rect x="540.9" y="373" width="12.9" height="15.0" fill="rgb(222,20,48)" rx="2" ry="2" />
<text  x="543.86" y="383.5" ></text>
</g>
<g >
<title>java/util/TreeMap.containsKey (416 samples, 0.76%)</title><rect x="1130.6" y="405" width="9.0" height="15.0" fill="rgb(223,55,7)" rx="2" ry="2" />
<text  x="1133.62" y="415.5" ></text>
</g>
<g >
<title>Thread::call_run() (2,049 samples, 3.74%)</title><rect x="1145.9" y="693" width="44.1" height="15.0" fill="rgb(239,212,20)" rx="2" ry="2" />
<text  x="1148.85" y="703.5" >Thre..</text>
</g>
<g >
<title>pl/symentis/wordcount/WordCount$WordCountReducer.reduce (282 samples, 0.51%)</title><rect x="1139.6" y="469" width="6.1" height="15.0" fill="rgb(217,7,41)" rx="2" ry="2" />
<text  x="1142.58" y="479.5" ></text>
</g>
<g >
<title>java/util/Arrays.copyOfRange (26 samples, 0.05%)</title><rect x="685.1" y="373" width="0.6" height="15.0" fill="rgb(244,157,18)" rx="2" ry="2" />
<text  x="688.13" y="383.5" ></text>
</g>
<g >
<title>java/util/regex/CharPredicates.lambda$ctype$17 (131 samples, 0.24%)</title><rect x="267.5" y="309" width="2.8" height="15.0" fill="rgb(245,167,7)" rx="2" ry="2" />
<text  x="270.49" y="319.5" ></text>
</g>
<g >
<title>pl/symentis/mapreduce/mapper/HashMapOutput$$Lambda$56.0x0000000800bbd320.apply (922 samples, 1.68%)</title><rect x="350.2" y="405" width="19.8" height="15.0" fill="rgb(253,83,13)" rx="2" ry="2" />
<text  x="353.16" y="415.5" ></text>
</g>
<g >
<title>java/util/regex/ASCII.isSpace (147 samples, 0.27%)</title><rect x="258.3" y="293" width="3.2" height="15.0" fill="rgb(236,83,48)" rx="2" ry="2" />
<text  x="261.31" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%)</title><rect x="11.4" y="693" width="0.2" height="15.0" fill="rgb(220,120,11)" rx="2" ry="2" />
<text  x="14.42" y="703.5" ></text>
</g>
<g >
<title>WatcherThread::run() (9 samples, 0.02%)</title><rect x="1189.8" y="677" width="0.2" height="15.0" fill="rgb(254,110,1)" rx="2" ry="2" />
<text  x="1192.81" y="687.5" ></text>
</g>
<g >
<title>G1FreeCollectionSetTask::FreeCSetClosure::do_heap_region(HeapRegion*) (10 samples, 0.02%)</title><rect x="1184.5" y="629" width="0.3" height="15.0" fill="rgb(247,168,19)" rx="2" ry="2" />
<text  x="1187.55" y="639.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (8 samples, 0.01%)</title><rect x="1118.8" y="261" width="0.2" height="15.0" fill="rgb(232,107,19)" rx="2" ry="2" />
<text  x="1121.84" y="271.5" ></text>
</g>
<g >
<title>java/lang/StringBuffer.length (13 samples, 0.02%)</title><rect x="935.8" y="325" width="0.2" height="15.0" fill="rgb(230,60,54)" rx="2" ry="2" />
<text  x="938.76" y="335.5" ></text>
</g>
<g >
<title>sun/nio/cs/UTF_8$Decoder.decodeArrayLoop (118 samples, 0.22%)</title><rect x="27.3" y="325" width="2.6" height="15.0" fill="rgb(219,120,4)" rx="2" ry="2" />
<text  x="30.32" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.03%)</title><rect x="11.7" y="677" width="0.3" height="15.0" fill="rgb(221,51,19)" rx="2" ry="2" />
<text  x="14.70" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.01%)</title><rect x="10.5" y="661" width="0.2" height="15.0" fill="rgb(240,105,18)" rx="2" ry="2" />
<text  x="13.54" y="671.5" ></text>
</g>
<g >
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3,758 samples, 6.86%)</title><rect x="790.5" y="309" width="81.0" height="15.0" fill="rgb(225,92,52)" rx="2" ry="2" />
<text  x="793.55" y="319.5" >java/lang..</text>
</g>
<g >
<title>pl/symentis/mapreduce/SequentialMapReduce.lambda$run$0 (27 samples, 0.05%)</title><rect x="1143.7" y="421" width="0.6" height="15.0" fill="rgb(212,60,26)" rx="2" ry="2" />
<text  x="1146.72" y="431.5" ></text>
</g>
<g >
<title>java/text/Collator.getDecomposition (10 samples, 0.02%)</title><rect x="1049.9" y="389" width="0.2" height="15.0" fill="rgb(217,125,22)" rx="2" ry="2" />
<text  x="1052.89" y="399.5" ></text>
</g>
<g >
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (52,308 samples, 95.51%)</title><rect x="18.7" y="693" width="1127.0" height="15.0" fill="rgb(218,136,42)" rx="2" ry="2" />
<text  x="21.70" y="703.5" >java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g >
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.01%)</title><rect x="1187.9" y="373" width="0.1" height="15.0" fill="rgb(235,138,20)" rx="2" ry="2" />
<text  x="1190.87" y="383.5" ></text>
</g>
<g >
<title>open64 (7 samples, 0.01%)</title><rect x="11.4" y="709" width="0.2" height="15.0" fill="rgb(247,94,53)" rx="2" ry="2" />
<text  x="14.42" y="719.5" ></text>
</g>
<g >
<title>Compile::Optimize() (17 samples, 0.03%)</title><rect x="1187.3" y="597" width="0.4" height="15.0" fill="rgb(210,86,42)" rx="2" ry="2" />
<text  x="1190.33" y="607.5" ></text>
</g>
<g >
<title>jdk/internal/util/ArraysSupport.newLength (68 samples, 0.12%)</title><rect x="742.3" y="245" width="1.5" height="15.0" fill="rgb(230,139,2)" rx="2" ry="2" />
<text  x="745.33" y="255.5" ></text>
</g>
<g >
<title>G1BarrierSet::invalidate(MemRegion) (12 samples, 0.02%)</title><rect x="12.0" y="709" width="0.3" height="15.0" fill="rgb(251,178,35)" rx="2" ry="2" />
<text  x="15.03" y="719.5" ></text>
</g>
<g >
<title>checkcast_arraycopy (85 samples, 0.16%)</title><rect x="136.9" y="373" width="1.8" height="15.0" fill="rgb(212,58,43)" rx="2" ry="2" />
<text  x="139.88" y="383.5" ></text>
</g>
<g >
<title>MemAllocator::allocate() const (12 samples, 0.02%)</title><rect x="705.2" y="325" width="0.2" height="15.0" fill="rgb(210,36,27)" rx="2" ry="2" />
<text  x="708.16" y="335.5" ></text>
</g>
<g >
<title>jdk/internal/icu/text/UCharacterIterator.moveCodePointIndex (1,099 samples, 2.01%)</title><rect x="996.6" y="357" width="23.7" height="15.0" fill="rgb(236,104,52)" rx="2" ry="2" />
<text  x="999.61" y="367.5" >j..</text>
</g>
<g >
<title>java/util/HashMap.put (51 samples, 0.09%)</title><rect x="1144.4" y="421" width="1.1" height="15.0" fill="rgb(235,14,9)" rx="2" ry="2" />
<text  x="1147.37" y="431.5" ></text>
</g>
<g >
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.01%)</title><rect x="1187.9" y="389" width="0.1" height="15.0" fill="rgb(243,169,38)" rx="2" ry="2" />
<text  x="1190.87" y="399.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (5 samples, 0.01%)</title><rect x="1187.7" y="549" width="0.1" height="15.0" fill="rgb(234,59,20)" rx="2" ry="2" />
<text  x="1190.72" y="559.5" ></text>
</g>
<g >
<title>futex_wait (6 samples, 0.01%)</title><rect x="10.6" y="613" width="0.1" height="15.0" fill="rgb(245,58,3)" rx="2" ry="2" />
<text  x="13.56" y="623.5" ></text>
</g>
<g >
<title>java/util/regex/Pattern.matcher (539 samples, 0.98%)</title><rect x="273.4" y="405" width="11.6" height="15.0" fill="rgb(216,118,46)" rx="2" ry="2" />
<text  x="276.37" y="415.5" ></text>
</g>
<g >
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (9 samples, 0.02%)</title><rect x="705.2" y="293" width="0.2" height="15.0" fill="rgb(218,89,52)" rx="2" ry="2" />
<text  x="708.21" y="303.5" ></text>
</g>
<g >
<title>futex_wait (9 samples, 0.02%)</title><rect x="11.8" y="629" width="0.2" height="15.0" fill="rgb(221,228,46)" rx="2" ry="2" />
<text  x="14.77" y="639.5" ></text>
</g>
<g >
<title>itable stub (2,296 samples, 4.19%)</title><rect x="198.7" y="325" width="49.4" height="15.0" fill="rgb(244,41,19)" rx="2" ry="2" />
<text  x="201.65" y="335.5" >itab..</text>
</g>
</g>
</svg>
